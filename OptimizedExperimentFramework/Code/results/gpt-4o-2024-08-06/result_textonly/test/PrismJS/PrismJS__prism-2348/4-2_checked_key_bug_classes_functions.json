{
    "bug_classes": {
        "1": {
            "class_name": "  (not found) ",
            "file_path": "components/prism-cpp.js",
            "class_details": [
                {
                    "name": " ",
                    "start_line": 1,
                    "end_line": 21
                }
            ],
            "class_code": [
                "Prism.languages.cpp = Prism.languages.extend('c', {",
                "\t'class-name': {",
                "\t\tpattern: /(\\b(?:class|enum|struct)\\s+)(?!class|enum|struct)\\w+/,",
                "\t\tlookbehind: true",
                "\t},",
                "\t'keyword': /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char8_t|char16_t|char32_t|class|compl|concept|const|consteval|constexpr|constinit|const_cast|continue|co_await|co_return|co_yield|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/,",
                "\t'number': {",
                "\t\tpattern: /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+\\.?[\\da-f']*|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+\\.?[\\d']*|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]*/i,",
                "\t\tgreedy: true",
                "\t},",
                "\t'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,",
                "\t'boolean': /\\b(?:true|false)\\b/",
                "});",
                "",
                "Prism.languages.insertBefore('cpp', 'string', {",
                "\t'raw-string': {",
                "\t\tpattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,",
                "\t\talias: 'string',",
                "\t\tgreedy: true",
                "\t}",
                "});"
            ]
        }
    },
    "bug_functions": {}
}