{
    "1": {
        "bug_file": "components/cascader-select/index.tsx",
        "compressed": "NO",
        "line_numbers": 36,
        "compressed_line_numbers": 36,
        "compressed_bug_file_content": "import ConfigProvider from '../config-provider';\nimport CascaderSelect from './cascader-select';\n\nexport type { CascaderSelectProps, CascaderSelectDataItem } from './types';\n\nexport default ConfigProvider.config(CascaderSelect, {\n    exportNames: ['focus'],\n    transform: (props, deprecated) => {\n        if ('shape' in props) {\n            deprecated('shape', 'hasBorder', 'CascaderSelect');\n            const { shape, hasBorder, ...others } = props;\n            props = { hasBorder: hasBorder ?? shape !== 'arrow-only', ...others };\n        }\n\n        if ('container' in props) {\n            deprecated('container', 'popupContainer', 'CascaderSelect');\n            const { container, ...others } = props;\n            props = { popupContainer: container, ...others };\n        }\n\n        if ('expandTrigger' in props) {\n            deprecated('expandTrigger', 'expandTriggerType', 'CascaderSelect');\n            const { expandTrigger, expandTriggerType, ...others } = props;\n            props = { expandTriggerType: expandTriggerType ?? expandTrigger, ...others };\n        }\n\n        if ('showItemCount' in props) {\n            deprecated('showItemCount', 'listStyle | listClassName', 'CascaderSelect');\n        }\n        if ('labelWidth' in props) {\n            deprecated('labelWidth', 'listStyle | listClassName', 'CascaderSelect');\n        }\n\n        return props;\n    },\n});"
    },
    "2": {
        "bug_file": "components/cascader-select/cascader-select.tsx",
        "compressed": "YES",
        "line_numbers": 899,
        "compressed_line_numbers": 70,
        "compressed_bug_file_content": "import React, {\n\n\nimport PropTypes from 'prop-types';\nimport { polyfill } from 'react-lifecycles-compat';\nimport classNames from 'classnames';\nimport Select from '../select';\nimport Cascader, { type CascaderDataItem, type Extra } from '../cascader';\nimport Menu from '../menu';\nimport { func, obj, dom, KEYCODE, type ClassPropsWithDefault } from '../util';\nimport zhCN from '../locale/zh-cn';\nimport type {\n\n\nimport type { Popup } from '../overlay';\n\n\nexport type CascaderSelectPropsWithDefault = ClassPropsWithDefault<\n\n\n/**\n * CascaderSelect\n */\n\n\n        // 缓存选中值数据\n\n\n    /**\n     * 使组件获得焦点\n     * @public\n     */\n\n\n            // 这里需要延迟下，showSearch 的情况下通过手动设置 menuProps={{focusable: true}} 回车 focus 会有延迟\n\n\n                // no default\n\n\n            // @ts-expect-error 待 overlay 技术升级完成\n\n\n    /**\n     * 刷新值数据缓存，删除无效值\n     * @param curValue - 当前值\n     */\n\n\n            // onChange 中的 data 参数也应该保留不存在的 value 的数据\n            // 在 dataSource 异步加载的情况下，会出现 value 重复的现象，需要去重\n\n\n            // 更新缓存\n\n\n        // 单选时点击清空按钮\n\n\n        // @ts-expect-error nums 应该是一个数组，这里可能是想表达 nums 的长度为 2？\n\n\n        // mode 应与 multiple api 保持一致\n\n\n            // 单选模式 select 会强制 cache=true，会导致菜单展开状态的初始化不执行\n            // 若用户没有手动设置 cache true，这里重置为 false\n\n\nexport default polyfill(CascaderSelect);\n"
    },
    "3": {
        "bug_file": "components/cascader-select/style.ts",
        "compressed": "NO",
        "line_numbers": 3,
        "compressed_line_numbers": 3,
        "compressed_bug_file_content": "import '../select/style';\nimport '../cascader/style';\nimport './main.scss';"
    },
    "4": {
        "bug_file": "components/cascader-select/types.ts",
        "compressed": "NO",
        "line_numbers": 255,
        "compressed_line_numbers": 255,
        "compressed_bug_file_content": "import type React from 'react';\nimport type { CascaderProps, CascaderDataItem, Extra } from '../cascader';\nimport type { CommonProps } from '../util';\nimport type { Popup } from '../overlay';\nimport type { SelectProps, VisibleChangeType } from '../select';\n\ninterface HTMLAttributesWeak\n    extends Omit<\n        React.HTMLAttributes<HTMLElement>,\n        'defaultValue' | 'onChange' | 'onSelect' | 'onFocus' | 'onBlur'\n    > {}\n\nexport interface CascaderSelectDataItem extends CascaderDataItem {\n    pos: string;\n}\n\nexport type CascaderSelectVisibleChangeType = VisibleChangeType | 'keyboard' | 'fromCascader';\n\nexport interface DeprecatedProps {\n    /**\n     * @deprecated use `popupContainer` instead\n     */\n    container?: CascaderSelectProps['popupContainer'];\n    /**\n     * @deprecated use `hasBorder` instead\n     */\n    shape?: string;\n    /**\n     * @deprecated use `expandTriggerType` instead\n     */\n    expandTrigger?: CascaderSelectProps['expandTriggerType'];\n}\n\ntype PickCascaderKeys =\n    | 'dataSource'\n    | 'useVirtual'\n    | 'multiple'\n    | 'canOnlyCheckLeaf'\n    | 'checkStrictly'\n    | 'resultRender'\n    | 'expandedValue'\n    | 'defaultExpandedValue'\n    | 'expandTriggerType'\n    | 'onExpand'\n    | 'listStyle'\n    | 'listClassName'\n    | 'loadData'\n    | 'itemRender'\n    | 'immutable';\n\n/**\n * @api CascaderSelect\n * @remarks\n * 继承 Cascader, Select 的部分属性，支持透传给 Cascader 的属性有 dataSource, useVirtual, multiple, canOnlyCheckLeaf,\n * checkStrictly, resultRender, expandedValue, defaultExpandedValue, expandTriggerType, onExpand, listStyle,\n * listClassName, loadData, itemRender, immutable。支持透传给 Select 的包括除上面传给 Cascader 和下方单独列出的属性以外的其他全部属性。\n * -\n * inherits partial props from Cascader, support passing props to Cascader: dataSource, useVirtual, multiple, canOnlyCheckLeaf,\n * checkStrictly, resultRender, expandedValue, defaultExpandedValue, expandTriggerType, onExpand, listStyle, listClassName, loadData, i\n * temRender, immutable. Support passing props to Select: other Select props except those listed above and those listed below.\n */\nexport interface CascaderSelectProps\n    extends Pick<CascaderProps, PickCascaderKeys>,\n        Omit<\n            SelectProps,\n            PickCascaderKeys | 'locale' | 'onChange' | 'renderPreview' | 'menuProps' | 'filter'\n        >,\n        HTMLAttributesWeak,\n        CommonProps,\n        DeprecatedProps {\n    /**\n     * 选择框大小\n     * @en size\n     * @defaultValue 'medium'\n     */\n    size?: 'small' | 'medium' | 'large';\n    /**\n     * @deprecated use Form.Item name instead\n     * @skip\n     */\n    name?: string;\n    /**\n     * 是否禁用\n     * @en disabled\n     * @defaultValue false\n     */\n    disabled?: boolean;\n\n    /**\n     * 是否有下拉箭头\n     * @en hasArrow\n     * @defaultValue true\n     */\n    hasArrow?: boolean;\n\n    /**\n     * 是否有边框\n     * @en hasBorder\n     * @defaultValue true\n     */\n    hasBorder?: boolean;\n\n    /**\n     * 是否有清除按钮\n     * @en hasClear\n     * @defaultValue false\n     */\n    hasClear?: boolean;\n\n    /**\n     * 是否只读，只读模式下可以展开弹层但不能选\n     * @en readOnly, popup layer can be expanded but cannot be selected in read-only mode\n     */\n    readOnly?: boolean;\n\n    /**\n     *（非受控）默认值\n     * @en default value(not controlled)\n     */\n    defaultValue?: string | Array<string>;\n\n    /**\n     *（受控）当前值\n     * @en current value(controlled)\n     */\n    value?: string | Array<string>;\n\n    /**\n     * 选中值改变时触发的回调函数\n     * @en callback when selected value changes\n     */\n    onChange?: (\n        value: string | Array<string> | null,\n        data: CascaderDataItem | Array<CascaderDataItem> | null,\n        extra?: Extra\n    ) => void;\n\n    /**\n     * 是否选中即发生改变，该属性仅在单选模式下有效\n     * @en whether to call onChange as soon as selected, this property only works in single selection mode\n     * @defaultValue false\n     */\n    changeOnSelect?: boolean;\n\n    /**\n     * 选择框单选时展示结果的自定义渲染函数\n     * @en custom render function of selected result\n     */\n    displayRender?: (\n        label: Array<React.ReactNode>,\n        data: CascaderSelectDataItem\n    ) => React.ReactNode;\n\n    /**\n     * 是否显示搜索框\n     * @en show search box\n     * @defaultValue false\n     */\n    showSearch?: boolean;\n\n    /**\n     * 自定义搜索函数\n     * @en custom search function\n     */\n    filter?: (searchValue: string, path: CascaderSelectDataItem[]) => boolean;\n\n    /**\n     * 当搜索框值变化时回调\n     * @en callback when search value changes\n     * @version 1.23\n     */\n    onSearch?: (value: string) => void;\n\n    /**\n     * 搜索结果列表是否和选择框等宽\n     * @en whether the search result list is the same width as the selection box\n     * @defaultValue true\n     */\n    resultAutoWidth?: boolean;\n\n    /**\n     * 无数据时显示内容\n     * @en content when no data\n     */\n    notFoundContent?: React.ReactNode;\n\n    /**\n     * 自定义下拉框头部\n     * @en custom dropdown header\n     */\n    header?: React.ReactNode;\n\n    /**\n     * 自定义下拉框底部\n     * @en custom dropdown footer\n     */\n    footer?: React.ReactNode;\n\n    /**\n     * 初始下拉框是否显示\n     * @en visible by default\n     * @defaultValue false\n     */\n    defaultVisible?: boolean;\n\n    /**\n     * 当前下拉框是否显示\n     * @en current visible\n     */\n    visible?: boolean;\n\n    /**\n     * 下拉框显示或关闭时触发事件的回调函数\n     */\n    onVisibleChange?: (visible: boolean, type?: CascaderSelectVisibleChangeType) => void;\n\n    /**\n     * 透传到 Popup 的属性对象\n     * @en props object passed to Popup\n     */\n    popupProps?: React.ComponentPropsWithRef<typeof Popup>;\n\n    /**\n     * 是否为预览态\n     * @en whether it is in preview mode\n     * @defaultValue false\n     */\n    isPreview?: boolean;\n\n    /**\n     * 自定义预览态\n     * @en custom preview\n     */\n    renderPreview?: (\n        value: CascaderSelectDataItem | CascaderSelectDataItem[],\n        props: CascaderSelectProps\n    ) => React.ReactNode;\n    /**\n     * 是否支持树形勾选\n     * @en whether to support tree check\n     * @skip\n     */\n    treeCheckable?: boolean;\n    /**\n     * 透传到 Cascader 的属性对象\n     * @en props object passed to Cascader\n     */\n    menuProps?: Omit<CascaderProps, 'onSelect' | 'onChange'>;\n}\n\nexport interface CascaderSelectState {\n    value: string[];\n    searchValue: string;\n    visible: boolean;\n}"
    }
}