{
    "1/1": {
        "src/rating/rating.jsx": [
            {
                "SEARCH": [
                    "handleClick(e) {",
                    "if (this.state.disabled) {",
                    "return;",
                    "}",
                    "const { allowClear } = this.props;",
                    "const { value } = this.state;",
                    "const newValue = this.getValue(e);",
                    "let isReset = false;",
                    "if (allowClear) {",
                    "isReset = newValue === value;",
                    "}",
                    "this.handleLeave();",
                    "if (newValue < 0) {",
                    "return;",
                    "}",
                    "",
                    "if (!('value' in this.props)) {",
                    "this.setState({ value: isReset ? 0 : newValue, clicked: true });",
                    "}",
                    "",
                    "this.props.onChange(isReset ? 0 : newValue);",
                    "setTimeout(() => {",
                    "this.setState({ clicked: false });",
                    "}, 100);",
                    "this.setState({",
                    "cleanedValue: isReset ? newValue : null,",
                    "});",
                    "}"
                ],
                "REPLACE": [
                    "    handleClick(e) {",
                    "        if (this.state.disabled) {",
                    "            return;",
                    "        }",
                    "        const { allowClear } = this.props;",
                    "        const { value } = this.state;",
                    "        const newValue = this.getValue(e);",
                    "        let isReset = false;",
                    "        if (allowClear) {",
                    "            isReset = newValue === value;",
                    "        }",
                    "        this.handleLeave();",
                    "        if (newValue < 0) {",
                    "            return;",
                    "        }",
                    "",
                    "        if (!('value' in this.props)) {",
                    "            this.setState({ value: isReset ? 0 : newValue, clicked: true });",
                    "        }",
                    "",
                    "        if (newValue !== value) {",
                    "            this.props.onChange(isReset ? 0 : newValue);",
                    "        }",
                    "        ",
                    "        setTimeout(() => {",
                    "            this.setState({ clicked: false });",
                    "        }, 100);",
                    "        this.setState({",
                    "            cleanedValue: isReset ? newValue : null,",
                    "        });",
                    "    }"
                ]
            }
        ]
    }
}