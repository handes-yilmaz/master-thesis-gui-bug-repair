{
    "1/1": {
        "src/number-picker/number-picker.jsx": [
            {
                "SEARCH": [
                    "onChange(value, e) {",
                    "// ignore space & Compatible Chinese Input Method",
                    "value = value.replace('。', '.').trim();",
                    "let onlyDisplay = false;",
                    "if (this.props.editable === true && this.shouldFireOnChange(value)) {",
                    "let valueCorrected = this.correctValue(value);",
                    "if (this.state.value !== valueCorrected) {",
                    "this.setValue({ value: valueCorrected, e });",
                    "}",
                    "} else {",
                    "onlyDisplay = true;",
                    "}",
                    "",
                    "// 【不应支持】如果输入为满足精度要求的纯数字，底层input.value设置为数字类型而非string",
                    "// if (`${valueCorrected}` === value) value = valueCorrected;",
                    "",
                    "this.setDisplayValue({ displayValue: value, onlyDisplay });",
                    "}"
                ],
                "REPLACE": [
                    "    onChange(value, e) {",
                    "        // ignore space & Compatible Chinese Input Method",
                    "        value = value.replace('。', '.').trim();",
                    "        let onlyDisplay = false;",
                    "        let valueCorrected = this.correctValue(value);",
                    "        ",
                    "        if (this.props.editable === true) {",
                    "            if (this.shouldFireOnChange(valueCorrected)) {",
                    "                if (this.state.value !== valueCorrected) {",
                    "                    this.setValue({ value: valueCorrected, e });",
                    "                }",
                    "            } else {",
                    "                onlyDisplay = true;",
                    "            }",
                    "        }",
                    "",
                    "        this.setDisplayValue({ displayValue: valueCorrected, onlyDisplay });",
                    "    }"
                ]
            }
        ]
    }
}