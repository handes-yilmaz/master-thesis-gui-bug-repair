{
    "1": {
        "bug_file": "src/number-picker/number-picker.jsx",
        "compressed": "YES",
        "line_numbers": 658,
        "compressed_line_numbers": 219,
        "compressed_bug_file_content": "import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { polyfill } from 'react-lifecycles-compat';\n\nimport Icon from '../icon';\nimport Button from '../button';\nimport Input from '../input';\nimport ConfigProvider from '../config-provider';\nimport { func, obj } from '../util';\n\n\n/** NumberPicker */\n\n\n        /**\n         * 样式前缀\n         */\n\n        /**\n         * 设置类型\n         * @enumdesc 普通, 内联\n         */\n\n        /**\n         * 大小\n         */\n\n        /**\n         * 当前值\n         */\n\n        /**\n         * 默认值\n         */\n\n        /**\n         * 是否禁用\n         */\n\n        /**\n         * 步长\n         */\n\n        /**\n         * 保留小数点后位数\n         */\n\n        /**\n         * 用户是否可以输入\n         */\n\n        /**\n         * 自动焦点\n         */\n\n        /**\n         * 数值被改变的事件\n         * @param {Number} value 数据\n         * @param {Event} e DOM事件对象\n         */\n\n        /**\n         * 键盘按下\n         */\n\n        /**\n         * 焦点获得\n         */\n\n        /**\n         * 焦点失去\n         */\n\n        /**\n         * 数值订正后的回调\n         * @param {Object} obj {currentValue,oldValue:String}\n         */\n\n\n        /**\n         * 最大值\n         */\n\n        /**\n         * 最小值\n         */\n\n        /**\n         * 自定义class\n         */\n\n        /**\n         * 自定义内联样式\n         */\n\n\n        /**\n         * 格式化当前值\n         * @param {Number} value\n         * @return {String|Number}\n         */\n\n        /**\n         * 增加按钮的props\n         */\n\n        /**\n         * 减少按钮的props\n         */\n\n        /**\n         * 内联 label\n         */\n\n        /**\n         * inner after\n         */\n\n\n        /**\n         * 是否为预览态\n         */\n\n        /**\n         * 预览态模式下渲染的内容\n         * @param {number} value 评分值\n         */\n\n        /**\n         * 预设屏幕宽度\n         */\n\n        /**\n         * 是否展示点击按钮\n         */\n\n        /**\n         * 是否一直显示点击按钮(无须hover)\n         */\n\n\n            // Compatible Chinese Input Method\n\n            // ignore space\n\n\n            // in case of autoCorrect ('0.'=>0, '0.0'=>0) , we have these steps\n\n\n                // ignore more than one . or -, cut at second . or -\n\n\n                // ignore . when precision set 0\n                // leave out digits larger than precision set\n\n\n                // ignore when input start form '-'\n\n\n                        // trigger onCorrect when input - on min >= 0\n                        // trigger onChange when the result of correction is not state.value\n\n\n                // ignore\n                // (1) input 0./0.0/0.00 to 0.001\n                // (2) input *.*0\n                // (3) input -. or /^./\n                // but take care of Number('')=0;\n\n\n                // ignore when value < min (because number is inputted one by one)\n\n\n    /**\n     * 触发时机：\n     * (1)不合法输入立即触发\n     * (2)在[min, max]之外立即触发\n     * (3)输入.或-时不触发onChange、onCorrect、render，用户取到的value为输入前的值\n     * (4)产生-.x时不触发onChange、onCorrect、render，用户取到的value为改变发生前的值\n     * (5)输入.后blur会触发onCorrect、onChang、render，因为合法值被Number()取掉了 . ，三者都触发，用户取到的value为新值\n     * (6)输入-后blur不会触发onCorrect、onChang、render，因为不是合法值，用户取到的value为输入前的值\n     * (7)产生-.x后blur触发onChange、onCorrect、render，用户取到的为-0.x\n     * @param {Float} currentValue correct value\n     * @param {String} oldValue input value\n     */\n\n\n        // blur 时将 -.2 展示值特例修正为 -0.2，触发onCorrect、onChange\n        // 保留 onBlur 时 - 与 -. 等 非 number 类型不触发 onChange，此为当前线上逻辑，会导致target.value取出非数字，转为另一issue待修\n\n\n            // under controled, set back to props.value\n\n\n    // 设置展示值，展示值可为-0此种特例\n\n\n        // Only trigger `setState` if `format` is settled to avoid unnecessary rendering\n\n\n            // use old value to calculate\n\n\n            // use old value to calculate\n\n\n    /**\n     * fix bug in chrome browser\n     * 0.28 + 0.01 = 0.29000000000000004\n     * 0.29 - 0.01 = 0.27999999999999997\n     * @param {Number} value value\n     */\n\n\n        // 避免原生input将number类型的-0，渲染为0\n\n\nexport default polyfill(NumberPicker);\n"
    }
}