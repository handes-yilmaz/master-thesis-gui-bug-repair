{
    "1": {
        "bug_file": "src/table/base/sort.jsx",
        "compressed": "NO",
        "line_numbers": 97,
        "compressed_line_numbers": 97,
        "compressed_bug_file_content": "import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Icon from '../../icon';\nimport { KEYCODE } from '../../util';\n\n/* eslint-disable react/prefer-stateless-function */\nexport default class Sort extends React.Component {\n    static propTypes = {\n        prefix: PropTypes.string,\n        rtl: PropTypes.bool,\n        className: PropTypes.string,\n        sort: PropTypes.object,\n        sortIcons: PropTypes.object,\n        onSort: PropTypes.func,\n        dataIndex: PropTypes.string,\n        locale: PropTypes.object,\n    };\n    static defaultProps = {\n        sort: {},\n    };\n    // 渲染排序\n    renderSort() {\n        const {\n                prefix,\n                sort,\n                sortIcons,\n                className,\n                dataIndex,\n                locale,\n                rtl,\n            } = this.props,\n            sortStatus = sort[dataIndex],\n            map = {\n                desc: 'descending',\n                asc: 'ascending',\n            };\n\n        const icons = ['asc', 'desc'].map(sortOrder => {\n            return (\n                <a\n                    key={sortOrder}\n                    className={sortStatus === sortOrder ? 'current' : ''}\n                >\n                    {sortIcons ? (\n                        sortIcons[sortOrder]\n                    ) : (\n                        <Icon rtl={rtl} type={map[sortOrder]} size=\"small\" />\n                    )}\n                </a>\n            );\n        });\n\n        const cls = classnames({\n            [`${prefix}table-sort`]: true,\n            [className]: className,\n        });\n\n        return (\n            <span\n                role=\"button\"\n                tabIndex=\"0\"\n                aria-label={locale[sortStatus]}\n                className={cls}\n                onClick={this.handleClick.bind(this)}\n                onKeyDown={this.keydownHandler}\n            >\n                {icons}\n            </span>\n        );\n    }\n\n    handleClick = () => {\n        const { sort, dataIndex } = this.props;\n        this.onSort(dataIndex, sort[dataIndex] === 'desc' ? 'asc' : 'desc');\n    };\n\n    keydownHandler = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (e.keyCode === KEYCODE.ENTER) {\n            this.handleClick();\n        }\n    };\n\n    onSort = (dataIndex, order) => {\n        const sort = {};\n        sort[dataIndex] = order;\n\n        this.props.onSort(dataIndex, order, sort);\n    };\n\n    render() {\n        return this.renderSort();\n    }\n}"
    },
    "2": {
        "bug_file": "src/table/main.scss",
        "compressed": "YES",
        "line_numbers": 527,
        "compressed_line_numbers": 14,
        "compressed_bug_file_content": "\n\n/* put your code here */\n\n\n    // border-right: $table-normal-border-width $table-normal-border-style $table-normal-border-color;\n\n\n        // @include table-last-child-border($table-normal-border-width);\n\n\n        // @include table-last-child-border($table-normal-border-width);\n\n\n"
    },
    "3": {
        "bug_file": "src/table/index.jsx",
        "compressed": "NO",
        "line_numbers": 128,
        "compressed_line_numbers": 128,
        "compressed_bug_file_content": "import ConfigProvider from '../config-provider';\nimport Base from './base';\nimport tree from './tree';\nimport fixed from './fixed';\nimport selection from './selection';\nimport expanded from './expanded';\nimport virtual from './virtual';\nimport lock from './lock';\nimport stickyLock from './new-lock';\nimport list from './list';\nimport sticky from './sticky';\nimport ListHeader from './list-header';\nimport ListFooter from './list-footer';\nimport { env } from '../util';\n\nconst { ieVersion } = env;\n\nconst ORDER_LIST = [\n    fixed,\n    lock,\n    selection,\n    expanded,\n    tree,\n    virtual,\n    list,\n    sticky,\n];\nconst Table = ORDER_LIST.reduce((ret, current) => {\n    ret = current(ret);\n    return ret;\n}, Base);\n\nconst StickyLockTable = ORDER_LIST.reduce((ret, current) => {\n    const newLock = !ieVersion;\n    if (current.name === 'lock') {\n        ret = newLock ? stickyLock(ret) : lock(ret);\n    } else if (current.name === 'expanded') {\n        ret = newLock ? expanded(ret, true) : expanded(ret);\n    } else {\n        ret = current(ret);\n    }\n    return ret;\n}, Base);\n\nTable.Base = Base;\nTable.fixed = fixed;\nTable.lock = lock;\nTable.selection = selection;\nTable.expanded = expanded;\nTable.tree = tree;\nTable.virtual = virtual;\nTable.list = list;\nTable.sticky = sticky;\n\nTable.GroupHeader = ListHeader;\nTable.GroupFooter = ListFooter;\n\nTable.StickyLock = StickyLockTable;\n\nexport default ConfigProvider.config(Table, {\n    componentName: 'Table',\n    transform: /* istanbul ignore next */ (props, deprecated) => {\n        if ('expandedRowKeys' in props) {\n            deprecated('expandedRowKeys', 'openRowKeys', 'Table');\n\n            const { expandedRowKeys, ...others } = props;\n            props = { openRowKeys: expandedRowKeys, ...others };\n        }\n        if ('onExpandedChange' in props) {\n            deprecated('onExpandedChange', 'onRowOpen', 'Table');\n\n            const { onExpandedChange, ...others } = props;\n            props = { onRowOpen: onExpandedChange, ...others };\n        }\n        if ('isLoading' in props) {\n            deprecated('isLoading', 'loading', 'Table');\n\n            const { isLoading, ...others } = props;\n            props = { loading: isLoading, ...others };\n        }\n        if ('indentSize' in props) {\n            deprecated('indentSize', 'indent', 'Table');\n\n            const { indentSize, ...others } = props;\n            props = { indent: indentSize, ...others };\n        }\n        if ('optimization' in props) {\n            deprecated('optimization', 'pure', 'Table');\n\n            const { optimization, ...others } = props;\n            props = { pure: optimization, ...others };\n        }\n\n        if ('getRowClassName' in props) {\n            deprecated('getRowClassName', 'getRowProps', 'Table');\n\n            const { getRowClassName, getRowProps, ...others } = props;\n            if (getRowClassName) {\n                const newGetRowProps = (...args) => {\n                    return {\n                        className: getRowClassName(...args),\n                        ...(getRowProps ? getRowProps(...args) : {}),\n                    };\n                };\n\n                props = { getRowProps: newGetRowProps, ...others };\n            } else {\n                props = { getRowProps, ...others };\n            }\n        }\n\n        if ('getRowProps' in props) {\n            deprecated('getRowProps', 'rowProps', 'Table in 1.15.0');\n\n            const { getRowProps, ...others } = props;\n            props = { rowProps: getRowProps, ...others };\n        }\n\n        if ('getCellProps' in props) {\n            deprecated('getCellProps', 'cellProps', 'Table in 1.15.0');\n\n            const { getCellProps, ...others } = props;\n            props = { cellProps: getCellProps, ...others };\n        }\n\n        return props;\n    },\n});"
    },
    "4": {
        "bug_file": "src/table/base/header.jsx",
        "compressed": "NO",
        "line_numbers": 198,
        "compressed_line_numbers": 198,
        "compressed_bug_file_content": "import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport FilterComponent from './filter';\nimport SortComponent from './sort';\nimport CellComponent from './cell';\nimport ResizeComponent from './resize';\n\nconst noop = () => {};\nexport default class Header extends React.Component {\n    static propTypes = {\n        children: PropTypes.any,\n        prefix: PropTypes.string,\n        pure: PropTypes.bool,\n        className: PropTypes.string,\n        component: PropTypes.string,\n        columns: PropTypes.array,\n        colGroup: PropTypes.object,\n        headerCellRef: PropTypes.func,\n        locale: PropTypes.object,\n        filterParams: PropTypes.object,\n        onFilter: PropTypes.func,\n        components: PropTypes.object,\n        sort: PropTypes.object,\n        sortIcons: PropTypes.object,\n        onSort: PropTypes.func,\n        onResizeChange: PropTypes.func,\n        tableWidth: PropTypes.number,\n    };\n    static defaultProps = {\n        component: 'thead',\n        columns: [],\n        headerCellRef: noop,\n        onFilter: noop,\n        components: {},\n        onSort: noop,\n        onResizeChange: noop,\n    };\n\n    getCellRef = (i, j, cell) => {\n        this.props.headerCellRef(i, j, cell);\n    };\n\n    onSort = (dataIndex, order, sort) => {\n        this.props.onSort(dataIndex, order, sort);\n    };\n\n    render() {\n        /*eslint-disable no-unused-vars */\n        const {\n            prefix,\n            className,\n            children,\n            component: Tag,\n            colGroup,\n            columns,\n            locale,\n            filterParams,\n            onFilter,\n            components,\n            affixRef,\n            headerCellRef,\n            onSort,\n            sort,\n            sortIcons,\n            onResizeChange,\n            pure,\n            rtl,\n            tableWidth,\n            ...others\n        } = this.props;\n\n        const {\n            Cell = CellComponent,\n            Filter = FilterComponent,\n            Sort = SortComponent,\n            Resize = ResizeComponent,\n        } = components;\n        const rowSpan = columns.length;\n\n        const header = columns.map((cols, index) => {\n            const col = cols.map((col, j) => {\n                /* eslint-disable no-unused-vars, prefer-const */\n                let {\n                    title,\n                    colSpan,\n                    sortable,\n                    resizable,\n                    dataIndex,\n                    filters,\n                    filterMode,\n                    filterMenuProps,\n                    filterProps,\n                    width,\n                    align,\n                    alignHeader,\n                    className,\n                    __normalized,\n                    lock,\n                    cellStyle,\n                    ...others\n                } = col;\n\n                className = classnames({\n                    [`${prefix}table-header-node`]: true,\n                    [`${prefix}table-header-resizable`]: resizable,\n                    [className]: className,\n                });\n                let attrs = {},\n                    sortElement,\n                    filterElement,\n                    resizeElement;\n\n                attrs.colSpan = colSpan;\n\n                // column.group doesn't have sort resize filter\n                if (!(col.children && col.children.length)) {\n                    if (sortable) {\n                        sortElement = (\n                            <Sort\n                                prefix={prefix}\n                                className={`${prefix}table-header-icon`}\n                                dataIndex={dataIndex}\n                                onSort={this.onSort}\n                                sortIcons={sortIcons}\n                                sort={sort}\n                                rtl={rtl}\n                                locale={locale}\n                            />\n                        );\n                    }\n                    if (resizable) {\n                        resizeElement = (\n                            <Resize\n                                prefix={prefix}\n                                rtl={rtl}\n                                dataIndex={dataIndex}\n                                onChange={onResizeChange}\n                            />\n                        );\n                    }\n\n                    if (filters) {\n                        filterElement = filters.length ? (\n                            <Filter\n                                dataIndex={dataIndex}\n                                className={`${prefix}table-header-icon`}\n                                filters={filters}\n                                prefix={prefix}\n                                locale={locale}\n                                rtl={rtl}\n                                filterParams={filterParams}\n                                filterMode={filterMode}\n                                filterMenuProps={filterMenuProps}\n                                filterProps={filterProps}\n                                onFilter={onFilter}\n                            />\n                        ) : null;\n                    }\n                    attrs.rowSpan = rowSpan - index;\n                }\n\n                if (+attrs.colSpan === 0) {\n                    return null;\n                }\n\n                return (\n                    <Cell\n                        {...others}\n                        {...attrs}\n                        key={j}\n                        prefix={prefix}\n                        pure={pure}\n                        rtl={rtl}\n                        cell={title}\n                        component=\"th\"\n                        align={alignHeader ? alignHeader : align}\n                        className={className}\n                        ref={this.getCellRef.bind(this, index, j)}\n                        type=\"header\"\n                    >\n                        {sortElement}\n                        {filterElement}\n                        {resizeElement}\n                    </Cell>\n                );\n            });\n            return <tr key={index}>{col}</tr>;\n        });\n\n        return (\n            <Tag className={className} {...others}>\n                {header}\n                {children}\n            </Tag>\n        );\n    }\n}"
    },
    "5": {
        "bug_file": "src/table/scss/variable.scss",
        "compressed": "NO",
        "line_numbers": 162,
        "compressed_line_numbers": 162,
        "compressed_bug_file_content": "@charset \"UTF-8\";\n\n////\n/// @module table: 表格\n/// @tag Table\n/// @category component\n/// @family data-display\n/// @varPrefix $table-\n/// @classPrefix {prefix}-table\n/// @order {\"size/bounding\":10,\"size/head\":11,\"size/body\":12,\"size/body empty\":13,\"size/cell\":14,\"size/group list\":15,\"statement/normal\":10,\"statement/normal/bounding\":100,\"statement/normal/head\":101,\"statement/normal/group header\":102,\"statement/normal/body\":103,\"statement/normal/body empty\":104,\"statement/normal/group footer\":105,\"statement/hover\":11,\"statement/hover/body\":110,\"statement/selected\":12,\"statement/selected/body\":120,\"statement/active\":13,\"statement/active/head\":130,\"statement/disabled\":14,\"statement/disabled/body\":140}\n////\n\n// table variables\n// --------------------------------------------------\n\n$table-prefix: '.#{$css-prefix}table' !default;\n\n/// border width\n/// @namespace size/bounding\n$table-normal-border-width: $line-1 !default;\n/// text\n/// @namespace size/head\n$table-th-font-size: $font-size-body-1 !default;\n/// text weight\n/// @namespace size/head\n$table-th-font-weight: $font-weight-2 !default;\n/// sort icon\n/// @namespace size/head\n$table-sort-icon-size: $icon-xs !default;\n/// filter icon\n/// @namespace size/head\n$table-filter-icon-size: $icon-xs !default;\n/// text\n/// @namespace size/body\n$table-body-font-size: $font-size-body-1 !default;\n/// padding (t, b)\n/// @namespace size/body empty\n$table-empty-padding: $s-8 !default;\n/// expanded icon\n/// @namespace size/body\n$table-expanded-icon-size: $icon-xs !default;\n/// tree icon\n/// @namespace size/body\n$table-tree-expanded-icon-size: $icon-xs !default;\n/// padding (t, b)\n/// @namespace size/cell\n$table-cell-padding-top: $s-3 !default;\n/// padding (l, r)\n/// @namespace size/cell\n$table-cell-padding-left: $s-4 !default;\n/// padding (t, b)\n/// @namespace size/head\n$table-header-padding-top: $s-3 !default;\n/// padding (l, r)\n/// @namespace size/head\n$table-header-padding-left: $s-4 !default;\n/// icon margin\n/// @namespace size/head\n$table-header-icon-margin-left: $s-2 !default;\n\n/// padding (t, b)\n/// @namespace size/cell\n$table-size-s-cell-padding-top: $s-2 !default;\n/// padding (l, r)\n/// @namespace size/cell\n$table-size-s-cell-padding-left: $s-2 !default;\n/// padding (t, b)\n/// @namespace size/head\n$table-size-s-header-padding-top: $s-2 !default;\n/// padding (l, r)\n/// @namespace size/head\n$table-size-s-header-padding-left: $s-2 !default;\n\n\n/// margin (t, b)\n/// @namespace size/group list\n$table-group-split: $s-2 !default;\n\n/// border\n/// @namespace statement/normal/bounding\n$table-normal-border-color: $color-line1-2 !default;\n/// border style\n/// @namespace statement/normal/bounding\n$table-normal-border-style: $line-solid !default;\n/// background\n/// @namespace statement/normal/head\n$table-th-bg: $color-fill1-3 !default;\n/// text\n/// @namespace statement/normal/head\n$table-th-color: $color-text1-4 !default;\n/// icon\n/// @namespace statement/normal/head\n$table-sort-color: $color-text1-4 !default;\n/// background\n/// @namespace statement/normal/group header\n$table-group-th-bg: $color-fill1-3 !default;\n/// text\n/// @namespace statement/normal/group header\n$table-group-th-color: $color-text1-4 !default;\n/// background\n/// @namespace statement/normal/body\n$table-row-bg: $color-white !default;\n/// text\n/// @namespace statement/normal/body\n$table-row-color: $color-text1-4 !default;\n/// zebra deep color\n/// @namespace statement/normal/body\n$table-td-gray: $color-fill1-1 !default;\n/// zebra thin color\n/// @namespace statement/normal/body\n$table-td-normal: $color-white !default;\n/// text\n/// @namespace statement/normal/body empty\n$table-empty-color: $color-line1-4 !default;\n/// background\n/// @namespace statement/normal/group footer\n$table-group-footer-bg: $color-fill1-3 !default;\n/// text\n/// @namespace statement/normal/group footer\n$table-group-footer-color: $color-text1-4 !default;\n\n/// background\n/// @namespace statement/hover/body\n$table-row-hover-bg: $color-fill1-2 !default;\n/// text\n/// @namespace statement/hover/body\n$table-row-hover-color: $color-text1-4 !default;\n\n/// background\n/// @namespace statement/selected/body\n$table-row-selected-bg: $color-fill1-2 !default;\n/// text\n/// @namespace statement/selected/body\n$table-row-selected-color: $color-text1-4 !default;\n\n/// icon\n/// @namespace statement/active/head\n$table-sort-color-current: $color-brand1-6 !default;\n\n/// expanded icon\n/// @namespace statement/disabled/body\n$table-expanded-ctrl-disabled-color: $color-text1-2 !default;\n\n/// tree fold icon\n/// @namespace statement/normal\n/// @type icon\n$table-tree-fold-icon-content: $icon-content-arrow-right !default;\n\n/// tree unfold icon\n/// @namespace statement/normal\n/// @type icon\n$table-tree-unfold-icon-content: $icon-content-arrow-down !default;\n\n/// expand fold icon\n/// @namespace statement/normal\n/// @type icon\n$table-expand-fold-icon-content: $icon-content-add !default;\n\n/// expand unfold icon\n/// @namespace statement/normal\n/// @type icon\n$table-expand-unfold-icon-content: $icon-content-minus !default;"
    }
}