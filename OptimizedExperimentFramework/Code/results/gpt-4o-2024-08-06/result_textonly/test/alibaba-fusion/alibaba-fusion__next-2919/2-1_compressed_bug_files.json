{
    "1": {
        "bug_file": "src/tab/index.jsx",
        "compressed": "NO",
        "line_numbers": 52,
        "compressed_line_numbers": 52,
        "compressed_bug_file_content": "import ConfigProvider from '../config-provider';\nimport Tab from './tab';\nimport Item from './tabs/tab-item';\n\nTab.Item = Item;\n\nTab.TabPane = ConfigProvider.config(Item, {\n    transform: (props, deprecated) => {\n        deprecated('Tab.TabPane', 'Tab.Item', 'Tab');\n        return props;\n    },\n});\n\nexport default ConfigProvider.config(Tab, {\n    transform: /* istanbul ignore next */ (props, deprecated) => {\n        if ('type' in props) {\n            deprecated('type', 'shape', 'Tab');\n            const { type, ...others } = props;\n            props = { shape: type, ...others };\n        }\n        if ('resDirection' in props) {\n            const { resDirection, ...others } = props;\n\n            let excessMode;\n            if (resDirection === 'horizontal') {\n                deprecated(\n                    'resDirection=horizontal',\n                    'excessMode=slide',\n                    'Tab'\n                );\n\n                excessMode = 'slide';\n            } else if (resDirection === 'vertical') {\n                deprecated(\n                    'resDirection=vertical',\n                    'excessMode=dropdown',\n                    'Tab'\n                );\n\n                excessMode = 'dropdown';\n            }\n            props = { excessMode, ...others };\n        }\n        if ('tabBarExtraContent' in props) {\n            deprecated('tabBarExtraContent', 'extra', 'Tab');\n            const { tabBarExtraContent, ...others } = props;\n            props = { extra: tabBarExtraContent, ...others };\n        }\n\n        return props;\n    },\n});"
    },
    "2": {
        "bug_file": "src/tab/tabs/content.jsx",
        "compressed": "NO",
        "line_numbers": 52,
        "compressed_line_numbers": 52,
        "compressed_bug_file_content": "import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nclass TabContent extends PureComponent {\n    static propTypes = {\n        prefix: PropTypes.string,\n        activeKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        lazyLoad: PropTypes.bool,\n        children: PropTypes.any,\n    };\n\n    render() {\n        const {\n            prefix,\n            activeKey,\n            lazyLoad,\n            unmountInactiveTabs,\n            children,\n            className,\n            ...others\n        } = this.props;\n        const formatChildren = [];\n        React.Children.forEach(children, child => {\n            /* eslint-disable eqeqeq */\n            const active = activeKey == child.key;\n            formatChildren.push(\n                React.cloneElement(child, {\n                    prefix,\n                    active,\n                    lazyLoad,\n                    unmountInactiveTabs,\n                })\n            );\n        });\n\n        const classNames = classnames(\n            {\n                [`${prefix}tabs-content`]: true,\n            },\n            className\n        );\n\n        return (\n            <div {...others} className={classNames}>\n                {formatChildren}\n            </div>\n        );\n    }\n}\n\nexport default TabContent;"
    },
    "3": {
        "bug_file": "src/tab/tabs/nav.jsx",
        "compressed": "YES",
        "line_numbers": 620,
        "compressed_line_numbers": 41,
        "compressed_bug_file_content": "import React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Icon from '../../icon';\nimport Overlay from '../../overlay';\nimport Menu from '../../menu';\nimport Animate from '../../animate';\nimport { events, KEYCODE, dom, obj } from '../../util';\nimport { triggerEvents, getOffsetLT, getOffsetWH, isTransformSupported } from './utils';\n\n\n        // 此处通过延时处理，屏蔽动画带来的定位不准确问题（由于要支持ie9，因此无法使用transitionend）\n\n\n    /**\n     * The key method about move\n     * @param {number} target position to slide to\n     * @param {bool} checkSlideBtn need to check the slide button status or not\n     * @param {bool} setActive need to check the active status or not\n     */\n\n\n        // target should not be great than 0, i.e. should not over slide to left-most\n\n        // when need to slide, should not slide to exceed right-most\n\n\n            // needs move\n\n\n            // active tab covers wrapper right edge\n\n\n            // active tab covers wrapper left edge\n\n\n        // TEMP: 这里会受 Animate 影响，re-render 过程中 this.nav 实际上指向的是上次的 tabList 元素，建议暂时关闭 animation 解决\n\n\nexport default Nav;\n"
    },
    "4": {
        "bug_file": "src/tab/tab.jsx",
        "compressed": "NO",
        "line_numbers": 376,
        "compressed_line_numbers": 376,
        "compressed_bug_file_content": "import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { KEYCODE, obj } from '../util';\nimport TabNav from './tabs/nav';\nimport TabContent from './tabs/content';\nimport { toArray } from './tabs/utils';\nimport zhCN from '../locale/zh-cn';\n\nconst noop = () => {};\n\n/** Tab */\nclass Tab extends Component {\n    static propTypes = {\n        prefix: PropTypes.string,\n        rtl: PropTypes.bool,\n        device: PropTypes.oneOf(['tablet', 'desktop', 'phone']),\n        /**\n         * 被激活的选项卡的 key, 赋值则tab为受控组件, 用户无法切换\n         */\n        activeKey: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n        /**\n         * 初始化时被激活的选项卡的 key\n         */\n        defaultActiveKey: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n        /**\n         * 外观形态\n         */\n        shape: PropTypes.oneOf(['pure', 'wrapped', 'text', 'capsule']),\n        /**\n         * 是否开启动效\n         */\n        animation: PropTypes.bool,\n        /**\n         * 选项卡过多时的滑动模式\n         */\n        excessMode: PropTypes.oneOf(['slide', 'dropdown']),\n        /**\n         * 导航选项卡的位置，只适用于包裹型（wrapped）选项卡\n         */\n        tabPosition: PropTypes.oneOf(['top', 'bottom', 'left', 'right']),\n        /**\n         * 尺寸\n         */\n        size: PropTypes.oneOf(['small', 'medium']),\n        /**\n         * 激活选项卡的触发方式\n         */\n        triggerType: PropTypes.oneOf(['hover', 'click']),\n        /**\n         * 是否延迟加载 TabItem 的内容, 默认开启, 即不提前渲染\n         */\n        lazyLoad: PropTypes.bool,\n        /**\n         * 是否自动卸载未处于激活状态的选项卡\n         */\n        unmountInactiveTabs: PropTypes.bool,\n        /**\n         * 导航条的自定义样式\n         */\n        navStyle: PropTypes.object,\n        /**\n         * 导航条的自定义样式类\n         */\n        navClassName: PropTypes.string,\n        /**\n         * 内容区容器的自定义样式\n         */\n        contentStyle: PropTypes.object,\n        /**\n         * 内容区容器的自定义样式类\n         */\n        contentClassName: PropTypes.string,\n        /**\n         * 导航栏附加内容\n         */\n        extra: PropTypes.node,\n        /**\n         * 禁止键盘事件，设置后无法通过键盘的上下左右按键，切换当前选中的tab\n         */\n        disableKeyboard: PropTypes.bool,\n        /**\n         * 点击单个选项卡时触发的回调\n         */\n        onClick: PropTypes.func,\n        /**\n         * 选项卡发生切换时的事件回调\n         * @param {String|Number} key 改变后的 key\n         */\n        onChange: PropTypes.func,\n        /**\n         * 选项卡被关闭时的事件回调\n         * @param {String|Number} key   关闭的选项卡的 key\n         */\n        onClose: PropTypes.func,\n        /**\n         * 自定义选项卡模板渲染函数\n         * @param {String} key 当前 Tab.Item 的 key 值\n         * @param {Object} props 传给 Tab.Item 的所有属性键值对\n         * @return {ReactNode} 返回自定义组件\n         */\n        tabRender: PropTypes.func,\n        /**\n         * 弹层属性透传, 只有当 excessMode 为 dropdown 时生效\n         */\n        popupProps: PropTypes.object,\n        children: PropTypes.any,\n        className: PropTypes.string,\n        locale: PropTypes.object,\n        /**\n         * 自定义组件内 icon\n         */\n        icons: PropTypes.shape({\n            prev: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n            next: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n            dropdown: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n        }),\n    };\n\n    static defaultProps = {\n        prefix: 'next-',\n        shape: 'pure',\n        size: 'medium',\n        animation: true,\n        tabPosition: 'top',\n        excessMode: 'slide',\n        triggerType: 'click',\n        lazyLoad: true,\n        unmountInactiveTabs: false,\n        disableKeyboard: false,\n        onClick: noop,\n        onChange: noop,\n        onClose: noop,\n        locale: zhCN.Tab,\n        icons: {},\n    };\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            activeKey: this.getDefaultActiveKey(props),\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.activeKey !== undefined && state.activeKey !== `${props.activeKey}`) {\n            return {\n                activeKey: `${props.activeKey}`,\n            };\n        }\n\n        return {};\n    }\n\n    componentDidUpdate(prevProps) {\n        const preChildLen = (prevProps.children && prevProps.children.length) || 0;\n        const curChildLen = (this.props.children && this.props.children.length) || 0;\n        if (\n            preChildLen !== 0 &&\n            curChildLen !== 0 &&\n            !('activeKey' in this.props) & !this.isActiveKeyExist(this.state.activeKey)\n        ) {\n            const activeKey = this.getDefaultActiveKey(this.props);\n            if (activeKey) {\n                // eslint-disable-next-line react/no-did-update-set-state\n                this.setState({\n                    activeKey,\n                });\n            }\n        }\n    }\n\n    getDefaultActiveKey(props) {\n        let activeKey = props.activeKey === undefined ? props.defaultActiveKey : props.activeKey;\n\n        if (activeKey === undefined) {\n            React.Children.forEach(props.children, (child, index) => {\n                if (activeKey !== undefined) return;\n                if (React.isValidElement(child)) {\n                    if (!child.props.disabled) {\n                        activeKey = child.key || index;\n                    }\n                }\n            });\n        }\n\n        return `${activeKey}`;\n    }\n\n    getNextActiveKey(isNext) {\n        const children = [];\n        React.Children.forEach(this.props.children, child => {\n            if (React.isValidElement(child)) {\n                if (!child.props.disabled) {\n                    if (isNext) {\n                        children.push(child);\n                    } else {\n                        children.unshift(child);\n                    }\n                }\n            }\n        });\n\n        const length = children.length;\n        let key = length && children[0].key;\n        children.forEach((child, i) => {\n            if (child.key === this.state.activeKey) {\n                if (i === length - 1) {\n                    key = children[0].key;\n                } else {\n                    key = children[i + 1].key;\n                }\n            }\n        });\n        return key;\n    }\n\n    isActiveKeyExist(activeKey) {\n        let exist = false;\n        React.Children.forEach(this.props.children, (child, index) => {\n            if (exist) return;\n            if (React.isValidElement(child)) {\n                if (!child.props.disabled) {\n                    const key = child.key || index;\n                    if (activeKey === `${key}`) {\n                        exist = true;\n                    }\n                }\n            }\n        });\n        return exist;\n    }\n\n    setActiveKey(key) {\n        const { activeKey } = this.state;\n\n        // 如果 key 没变，或者受控状态下，则跳过\n        if (key === activeKey || 'activeKey' in this.props) {\n            return;\n        }\n        this.setState({\n            activeKey: key,\n        });\n    }\n\n    handleTriggerEvent = (eventType, key) => {\n        const { triggerType, onClick, onChange } = this.props;\n        if (triggerType === eventType) {\n            onClick(key);\n            this.setActiveKey(key);\n            if (this.state.activeKey !== key) {\n                onChange(key);\n            }\n        }\n    };\n\n    onNavKeyDown = e => {\n        const keyCode = e.keyCode;\n        const { disableKeyboard } = this.props;\n\n        if (disableKeyboard) {\n            return;\n        }\n\n        if (keyCode >= KEYCODE.LEFT && keyCode <= KEYCODE.DOWN) {\n            e.preventDefault();\n        }\n\n        let newKey;\n        if (keyCode === KEYCODE.RIGHT || keyCode === KEYCODE.DOWN) {\n            newKey = this.getNextActiveKey(true);\n            this.handleTriggerEvent(this.props.triggerType, newKey);\n        } else if (keyCode === KEYCODE.LEFT || keyCode === KEYCODE.UP) {\n            newKey = this.getNextActiveKey(false);\n            this.handleTriggerEvent(this.props.triggerType, newKey);\n        }\n    };\n\n    render() {\n        const {\n            prefix,\n            animation,\n            shape,\n            size,\n            extra,\n            excessMode,\n            tabPosition,\n            tabRender,\n            triggerType,\n            lazyLoad,\n            unmountInactiveTabs,\n            popupProps,\n            navStyle,\n            navClassName,\n            contentStyle,\n            contentClassName,\n            className,\n            onClose,\n            children,\n            rtl,\n            device,\n            locale,\n            icons,\n            ...others\n        } = this.props;\n        const { activeKey } = this.state;\n\n        const tabs = toArray(children);\n        const isTouchable = ['phone', 'tablet'].indexOf(device) !== -1;\n        let newPosition = tabPosition;\n        if (rtl && ['left', 'right'].indexOf(tabPosition) >= 0) {\n            newPosition = tabPosition === 'left' ? 'right' : 'left';\n        }\n        const classNames = classnames(\n            {\n                [`${prefix}tabs`]: true,\n                [`${prefix}tabs-${shape}`]: shape,\n                [`${prefix}tabs-vertical`]: shape === 'wrapped' && ['left', 'right'].indexOf(tabPosition) >= 0,\n                [`${prefix}tabs-scrollable`]: isTouchable,\n                [`${prefix}tabs-${newPosition}`]: shape === 'wrapped',\n                [`${prefix + size}`]: size,\n            },\n            className\n        );\n\n        const navProps = {\n            prefix,\n            rtl,\n            animation,\n            activeKey,\n            excessMode: isTouchable ? 'slide' : excessMode,\n            extra,\n            tabs,\n            tabPosition,\n            tabRender,\n            triggerType,\n            popupProps,\n            onClose,\n            onTriggerEvent: this.handleTriggerEvent,\n            onKeyDown: this.onNavKeyDown,\n            style: navStyle,\n            className: navClassName,\n            locale,\n            icons,\n        };\n\n        const contentProps = {\n            prefix,\n            activeKey,\n            lazyLoad,\n            unmountInactiveTabs,\n            style: contentStyle,\n            className: contentClassName,\n        };\n\n        const tabChildren = [\n            <TabNav key=\"tab-nav\" {...navProps} />,\n            <TabContent key=\"tab-content\" {...contentProps}>\n                {tabs}\n            </TabContent>,\n        ];\n\n        if (tabPosition === 'bottom') {\n            tabChildren.reverse();\n        }\n\n        return (\n            <div dir={rtl ? 'rtl' : undefined} className={classNames} {...obj.pickOthers(Tab.propTypes, others)}>\n                {tabChildren}\n            </div>\n        );\n    }\n}\n\nexport default polyfill(Tab);"
    },
    "5": {
        "bug_file": "src/tab/main.scss",
        "compressed": "NO",
        "line_numbers": 494,
        "compressed_line_numbers": 494,
        "compressed_bug_file_content": "@charset \"UTF-8\";\n\n@import \"../core/index-noreset.scss\";\n@import \"scss/variable\";\n@import \"scss/mixin\";\n@import \"scss/placeholder\";\n\n#{$tab-prefix} {\n    & {\n        @include box-sizing;\n        width: 100%;\n    }\n\n    &-bar {\n        outline: none;\n        &-popup {\n            overflow-y: auto;\n            max-height: 480px;\n        }\n    }\n\n    &-nav-container {\n        position: relative;\n        @include clearfix;\n    }\n\n    &-nav-wrap {\n        overflow: hidden;\n    }\n\n    &-nav-scroll {\n        overflow: hidden;\n        white-space: nowrap;\n    }\n\n    &-scrollable #{$tab-prefix}-nav-scroll {\n        overflow-x: auto;\n        overflow-y: hidden;\n        -webkit-overflow-scrolling: touch;\n        &::-webkit-scrollbar {\n            display: none !important;\n            width: 0 !important;\n            height: 0 !important;\n            -webkit-appearance: none;\n            opacity: 0 !important;\n        }\n    }\n\n    &-nav {\n        display: inline-block;\n        position: relative;\n        transition: all $motion-duration-standard $motion-ease;\n        list-style: none;\n        padding: 0;\n        margin: 0;\n        &-enter,\n        &-appear {\n            animation: fadeInLeft .4s cubic-bezier(.78, .14, .15, .86);\n            animation-fill-mode: both;\n        }\n\n        &-leave {\n            animation: fadeOutLeft .2s cubic-bezier(.78, .14, .15, .86);\n            animation-fill-mode: both;\n        }\n\n        &.#{$css-prefix}disable-animation #{$tab-prefix}-tab:before {\n            transition: none;\n        }\n    }\n\n    &-tab {\n        display: inline-block;\n        position: relative;\n        transition: all $motion-duration-immediately $motion-linear;\n\n        &-inner {\n            position: relative;\n            cursor: pointer;\n            text-decoration: none;\n        }\n\n        &:before {\n            content: \"\";\n            position: absolute;\n            transition: all $motion-duration-standard $motion-ease;\n        }\n\n        &.active {\n            font-weight: $tab-item-font-weight-selected;\n        }\n\n        @include tabs-tab-close-icon(\n            $tab-close-icon-color,\n            $tab-close-icon-color-hover,\n            $tab-close-icon-color-selected,\n            $tab-close-icon-color-disabled\n        );\n    }\n    &-tab:focus {\n        outline: none;\n    }\n\n    &-tabpane {\n        visibility: hidden;\n        opacity: 0;\n\n        &.active {\n            visibility: visible;\n            opacity: 1;\n            height: auto;\n        }\n\n        &.hidden {\n            overflow: hidden;\n            height: 0 !important;\n            margin: 0 !important;\n            padding: 0 !important;\n            border: 0 !important;\n        }\n    }\n\n    /* Nav Button */\n    /* ----------------- */\n    &-btn-down,\n    &-btn-prev,\n    &-btn-next {\n        position: absolute;\n        top: 0;\n        cursor: pointer;\n        padding: 0;\n        border: 0;\n        outline: none;\n        height: 100%;\n\n        @include button-color($tab-nav-arrow-color-normal, $tab-nav-arrow-color-hover, $tab-nav-arrow-color-hover);\n\n        &.disabled {\n            cursor: not-allowed;\n            color: $tab-nav-arrow-color-disabled;\n        }\n    }\n\n    &-btn-next {\n        right: $tab-nav-arrow-right-positon-right;\n    }\n    &-btn-prev {\n        right: $tab-nav-arrow-left-positon-right;\n    }\n    &-btn-down {\n        right: $tab-nav-arrow-down-positon-right;\n    }\n\n    & .#{$css-prefix}tab-icon-dropdown::before {\n        content: $tab-icon-dropdown-content;\n    }\n\n    & .#{$css-prefix}tab-icon-prev::before {\n        content: $tab-icon-prev-content;\n    }\n\n    & .#{$css-prefix}tab-icon-next::before {\n        content: $tab-icon-next-content;\n    }\n\n    &-content {\n        overflow: hidden;\n    }\n\n    /* position: vertical */\n    /* ----------------- */\n    &-vertical > #{$tab-prefix}-bar {\n        #{$tab-prefix}-nav {\n            width: 100%;\n        }\n\n        #{$tab-prefix}-tab {\n            display: block;\n        }\n    }\n\n    /* Size */\n    /* ----------------- */\n    &.#{$css-prefix}medium {\n        @include tabs-size(\n            $tab-item-padding-tb-size-m,\n            $tab-item-padding-lr-size-m,\n            $tab-item-text-size-m,\n            $tab-nav-tab-icon-size-m,\n            $tab-nav-close-icon-size-m,\n            $tab-nav-close-icon-padding-l-size-m,\n            $tab-nav-scroll-padding-right-m\n        );\n    }\n\n    &.#{$css-prefix}small {\n        @include tabs-size(\n            $tab-item-padding-tb-size-s,\n            $tab-item-padding-lr-size-s,\n            $tab-item-text-size-s,\n            $tab-nav-tab-icon-size-s,\n            $tab-nav-close-icon-size-s,\n            $tab-nav-close-icon-padding-l-size-s,\n            $tab-nav-scroll-padding-right-s\n        );\n    }\n\n    /* shape: pure */\n    /* ----------------- */\n    &-pure > #{$tab-prefix}-bar {\n        border-bottom: $tab-pure-divider-line;\n        background-color: $tab-pure-bg-color;\n\n        #{$tab-prefix}-nav-container {\n            margin-bottom: calc(0px - #{$tab-pure-divider-line-width});\n            box-shadow: $tab-pure-divider-shadow;\n\n            #{$tab-prefix}-tab {\n                @include tabs-tab-statement(\n                    $tab-pure-text-color-normal, // text color\n                    $tab-pure-text-color-hover,\n                    $tab-pure-text-color-selected,\n                    $tab-pure-text-color-disabled,\n                    transparent, // bg color\n                    transparent,\n                    transparent,\n                    transparent\n                );\n\n                @include tabs-tab-inkbar(\n                    $tab-pure-ink-bar-width,\n                    $tab-pure-ink-bar-color,\n                    0%,\n                    0%,\n                    'bottom'\n                );\n            }\n        }\n    }\n\n    /* Shape: wrapped */\n    /* --------------------- */\n    &-wrapped > #{$tab-prefix}-bar {\n        background: $tab-wrapped-bar-bg-color;\n\n        #{$tab-prefix}-tab {\n            @include tabs-tab-statement(\n                $tab-wrapped-text-color,\n                $tab-wrapped-text-color-hover,\n                $tab-wrapped-text-color-selected,\n                $tab-wrapped-text-color-disabled,\n                $tab-wrapped-bg-color,\n                $tab-wrapped-bg-color-hover,\n                $tab-wrapped-bg-color-selected,\n                $tab-wrapped-bg-color-disabled\n            );\n\n            @include tabs-tab-close-icon(\n                $tab-close-icon-color,\n                $tab-close-icon-color-hover,\n                $tab-close-icon-color-selected,\n                $tab-close-icon-color-disabled\n            );\n        }\n    }\n\n    &-wrapped:before, &-wrapped:after {\n        content: \"\";\n        display: table;\n    }\n\n    &-wrapped:after {\n        clear: both;\n    }\n\n    &-wrapped > #{$tab-prefix}-content {\n        position: relative;\n    }\n\n    /* Shape: wrapped(top) */\n    &-wrapped#{$tab-prefix}-top > #{$tab-prefix}-bar {\n        position: relative;\n        #{$tab-prefix}-nav-extra {\n            position: absolute;\n            top: 50%;\n            right: 0;\n            transform: translateY(-50%);\n        }\n\n        #{$tab-prefix}-tab {\n            margin-right: $tab-wrapped-tab-margin-right;\n            @include tabs-tab-border(\n                $tab-wrapped-bar-border,\n                null,\n                $tab-wrapped-tab-top-border-radius,\n                $tab-wrapped-border-line-color-hover,\n                $tab-wrapped-border-line-color,\n                $tab-wrapped-border-line-color,\n                $tab-wrapped-bg-color-selected,\n                $tab-wrapped-border-line-color\n            );\n\n            @include tabs-tab-inkbar(\n                $tab-wrapped-ink-bar-width,\n                $tab-wrapped-ink-bar-color,\n                calc(0px - #{$tab-wrapped-border-line-width}),\n                $tab-wrapped-tab-corner-radius,\n                'top'\n            );\n            border-width: $tab-wrapped-border-side-width $tab-wrapped-border-side-width $tab-wrapped-border-line-width $tab-wrapped-border-side-width;\n            &.active {\n                border-width: $tab-wrapped-border-line-width $tab-wrapped-border-line-width $tab-wrapped-border-line-width $tab-wrapped-border-line-width;\n            }\n        }\n    }\n\n    &-wrapped#{$tab-prefix}-top > #{$tab-prefix}-bar:before {\n        content: '';\n        position: absolute;\n        top: 100%;\n        width: 100%;\n        height: 0;\n        border-bottom: $tab-wrapped-content-border;\n        transform: translateY(calc(0px - #{$tab-wrapped-content-border-line-width}));\n        display: block;\n    }\n\n    /* Shape: wrapped(bottom) */\n    &-wrapped#{$tab-prefix}-bottom > #{$tab-prefix}-bar {\n        position: relative;\n        #{$tab-prefix}-nav-extra {\n            position: absolute;\n            top: 50%;\n            right: 0;\n            transform: translateY(-50%);\n        }\n\n        #{$tab-prefix}-tab {\n            margin-right: $tab-wrapped-tab-margin-right;\n            @include tabs-tab-border( $tab-wrapped-bar-border, null, $tab-wrapped-tab-bottom-border-radius, $tab-wrapped-border-line-color-hover, $tab-wrapped-bg-color-selected, $tab-wrapped-border-line-color, $tab-wrapped-border-line-color, $tab-wrapped-border-line-color);\n            @include tabs-tab-inkbar( $tab-wrapped-ink-bar-width, $tab-wrapped-ink-bar-color, calc(0px - #{$tab-wrapped-border-line-width}), $tab-wrapped-tab-corner-radius, 'bottom');\n        }\n    }\n\n    &-wrapped#{$tab-prefix}-bottom > #{$tab-prefix}-content {\n        top: $tab-wrapped-content-position-top;\n        border-bottom: $tab-wrapped-content-border;\n    }\n\n    /* Shape: wrapped(left) */\n    &-wrapped#{$tab-prefix}-left > #{$tab-prefix}-bar {\n        float: left;\n        #{$tab-prefix}-tab {\n            float: none;\n            margin-bottom: $tab-wrapped-tab-margin-bottom;\n            @include tabs-tab-border( $tab-wrapped-bar-border, null, $tab-wrapped-tab-left-border-radius, $tab-wrapped-border-line-color-hover, $tab-wrapped-border-line-color, $tab-wrapped-bg-color-selected, $tab-wrapped-border-line-color, $tab-wrapped-border-line-color);\n            @include tabs-tab-inkbar($tab-wrapped-ink-bar-width, $tab-wrapped-ink-bar-color, calc(0px - #{$tab-wrapped-border-line-width}), $tab-wrapped-tab-corner-radius, 'left');\n            border-width: $tab-wrapped-border-side-width $tab-wrapped-border-line-width $tab-wrapped-border-side-width $tab-wrapped-border-side-width;\n            &.active {\n                border-width: $tab-wrapped-border-line-width $tab-wrapped-border-line-width $tab-wrapped-border-line-width $tab-wrapped-border-line-width;\n            }\n        }\n    }\n\n    &-wrapped#{$tab-prefix}-left > #{$tab-prefix}-content {\n        right: $tab-wrapped-content-position-right;\n        border-left: $tab-wrapped-content-border;\n    }\n\n    /* Shape: wrapped(right) */\n    &-wrapped#{$tab-prefix}-right > #{$tab-prefix}-bar {\n        float: right;\n        #{$tab-prefix}-tab {\n            float: none;\n            margin-bottom: $tab-wrapped-tab-margin-bottom;\n            @include tabs-tab-border( $tab-wrapped-bar-border, null, $tab-wrapped-tab-right-border-radius, $tab-wrapped-border-line-color-hover, $tab-wrapped-border-line-color, $tab-wrapped-border-line-color, $tab-wrapped-border-line-color, $tab-wrapped-bg-color-selected);\n            @include tabs-tab-inkbar($tab-wrapped-ink-bar-width, $tab-wrapped-ink-bar-color, calc(0px - #{$tab-wrapped-border-line-width}), $tab-wrapped-tab-corner-radius, 'right');\n            border-width: $tab-wrapped-border-side-width $tab-wrapped-border-side-width $tab-wrapped-border-side-width $tab-wrapped-border-line-width;\n            &.active {\n                border-width: $tab-wrapped-border-line-width $tab-wrapped-border-line-width $tab-wrapped-border-line-width $tab-wrapped-border-line-width;\n            }\n        }\n    }\n\n    &-wrapped#{$tab-prefix}-right > #{$tab-prefix}-content {\n        right: calc(0px - #{$tab-wrapped-content-position-right});\n        border-right: $tab-wrapped-content-border;\n    }\n\n    &-capsule > #{$tab-prefix}-bar {\n        #{$tab-prefix}-tab {\n            transition: background-color $motion-duration-immediately $motion-linear;\n            border: $tab-capsule-tab-border;\n            border-right-color: transparent;\n            margin-right: calc(0px - #{$tab-capsule-tab-border-line-width});\n\n            &:first-child {\n                border-radius: $tab-capsule-corner-radius 0 0 $tab-capsule-corner-radius;\n            }\n\n            &:last-child {\n                border-radius: 0 $tab-capsule-corner-radius $tab-capsule-corner-radius 0;\n                border-right: $tab-capsule-tab-border;\n            }\n\n            &.active {\n                border-right: $tab-capsule-tab-border;\n                border-color: $tab-capsule-tab-border-line-color-active;\n            }\n\n            &.disabled {\n                border-color: $tab-capsule-tab-border-line-color-disabled;\n            }\n\n            &:hover {\n                z-index: 2;\n                border-right: $tab-capsule-tab-border;\n                border-color: $tab-capsule-tab-border-line-color-hover;\n            }\n\n            @include tabs-tab-statement(\n                $tab-capsule-text-color,\n                $tab-capsule-text-color-hover,\n                $tab-capsule-text-color-selected,\n                $tab-capsule-text-color-disabled,\n                $tab-capsule-bg-color,\n                $tab-capsule-bg-color-hover,\n                $tab-capsule-bg-color-selected,\n                $tab-capsule-bg-color-disabled\n            );\n        }\n    }\n\n    /* Shape: text */\n    /* ------------------- */\n\n    &-text > #{$tab-prefix}-bar {\n\n        #{$tab-prefix}-tab {\n            @include tabs-tab-statement(\n                $tab-text-text-color-normal,\n                $tab-text-text-color-hover,\n                $tab-text-text-color-selected,\n                $tab-text-text-color-disabled,\n                transparent, // no bg\n                transparent, // no hover bg\n                transparent, // no selected bg\n                transparent  // no disabled bg\n            );\n\n            &:not(:last-child):after {\n                content: '';\n                position: absolute;\n                right: 0;\n                top: calc(50% - #{$tab-text-item-sep-height / 2});\n                width: $tab-text-item-sep-width;\n                height: $tab-text-item-sep-height;\n                background-color: $tab-text-item-sep-color;\n            }\n        }\n    }\n\n    &-pure > #{$tab-prefix}-bar {\n        position: relative;\n        #{$tab-prefix}-nav-extra {\n            position: absolute;\n            top: 50%;\n            right: 0;\n            transform: translateY(-50%);\n        }\n    }\n\n    &-capsule > #{$tab-prefix}-bar {\n        position: relative;\n        #{$tab-prefix}-nav-extra {\n            position: absolute;\n            top: 50%;\n            right: 0;\n            transform: translateY(-50%);\n        }\n    }\n\n    &-text > #{$tab-prefix}-bar {\n        position: relative;\n        #{$tab-prefix}-nav-extra {\n            position: absolute;\n            top: 50%;\n            right: 0;\n            transform: translateY(-50%);\n        }\n    }\n}\n\n@import \"./rtl.scss\";"
    }
}