{
    "1": {
        "bug_file": "src/select/index.jsx",
        "compressed": "NO",
        "line_numbers": 83,
        "compressed_line_numbers": 83,
        "compressed_bug_file_content": "import ConfigProvider from '../config-provider';\nimport Select from './select';\nimport AutoComplete from './auto-complete';\nimport Option from './option';\nimport OptionGroup from './option-group';\n\nSelect.AutoComplete = ConfigProvider.config(AutoComplete, {\n    componentName: 'Select',\n});\n\nSelect.Option = Option;\nSelect.OptionGroup = OptionGroup;\n\n// compatible with 0.x version\n/* istanbul ignore next */\nfunction transform(props, deprecated) {\n    const {\n        shape,\n        container,\n        multiple,\n        filterBy,\n        overlay,\n        safeNode,\n        noFoundContent,\n        ...others\n    } = props;\n\n    const newprops = others;\n    if (shape === 'arrow-only') {\n        deprecated('shape=arrow-only', 'hasBorder=false', 'Select');\n        newprops.hasBorder = false;\n    }\n    if (container) {\n        deprecated('container', 'popupContainer', 'Select');\n        newprops.popupContainer = container;\n    }\n    if (multiple) {\n        deprecated('multiple', 'mode=multiple', 'Select');\n        newprops.mode = 'multiple';\n    }\n    if (filterBy) {\n        deprecated('filterBy', 'filter', 'Select');\n        newprops.filter = filterBy;\n    }\n    if (overlay) {\n        deprecated('overlay', 'popupContent', 'Select');\n        newprops.popupContent = overlay;\n        newprops.autoWidth = false;\n    }\n\n    if (noFoundContent) {\n        deprecated('noFoundContent', 'notFoundContent', 'Select');\n        newprops.notFoundContent = noFoundContent;\n    }\n\n    if (safeNode) {\n        deprecated('safeNode', 'popupProps={safeNode}', 'Select');\n        newprops.popupProps = {\n            safeNode,\n        };\n    }\n\n    return newprops;\n}\n\n// compatible with 0.x version: Select.Combobox\nSelect.Combobox = ConfigProvider.config(Select, {\n    transform: /* istanbul ignore next */ (props, deprecated) => {\n        deprecated('Select.Combobox', '<Select showSearch={true}/>', 'Select');\n\n        const newprops = transform(props, deprecated);\n        if (props.onInputUpdate) {\n            newprops.onSearch = props.onInputUpdate;\n            newprops.showSearch = true;\n        }\n        return newprops;\n    },\n});\n\nexport default ConfigProvider.config(Select, {\n    transform,\n    exportNames: ['focusInput', 'handleSearchClear'],\n});"
    },
    "2": {
        "bug_file": "src/select/main.scss",
        "compressed": "NO",
        "line_numbers": 500,
        "compressed_line_numbers": 500,
        "compressed_bug_file_content": "@charset \"UTF-8\";\n@import \"../core/index-noreset.scss\";\n@import \"../input/scss/variable.scss\";\n@import \"../input/scss/mixin.scss\";\n@import \"scss/mixin\";\n@import \"scss/variable\";\n\n#{$select-prefix} {\n    @include box-sizing;\n    display: inline-block;\n    font-size: 0;\n    vertical-align: middle;\n\n    /* Select trigger */\n    &-trigger {\n        min-width: 100px;\n        outline: 0;\n        transition: all $motion-duration-immediately $motion-linear;\n\n        .#{$css-prefix}input-label {\n            flex: 0 0 auto;\n            width: auto;\n        }\n\n        #{$select-prefix}-values {\n            display: block;\n            width: 100%;\n            flex: 1 1 0;\n            overflow: hidden;\n\n            > em {\n                font-style: inherit;\n            }\n\n            input {\n                padding-left: 0;\n                padding-right: 0;\n            }\n        }\n\n        .#{$css-prefix}input-control {\n            flex: 0 0 auto;\n            width: auto;\n            > * {\n                display: inline-block;\n                width: auto;\n            }\n            > .#{$css-prefix}select-arrow {\n                padding-right: 0;\n            }\n        }\n\n        .#{$css-prefix}input.#{$css-prefix}disabled {\n            em {\n                color: $input-disabled-color;\n            }\n            #{$select-prefix}-arrow {\n                cursor: not-allowed;\n            }\n        }\n\n        .#{$css-prefix}select-clear {\n            display: none;\n        }\n\n        &.#{$css-prefix}has-clear:hover {\n            .#{$css-prefix}select-clear {\n                display: inline-block;\n            }\n            .#{$css-prefix}select-arrow {\n                display: none;\n            }\n        }\n    }\n\n    #{$select-prefix}-inner {\n        display: inline-flex;\n        align-items: center;\n        width: 100%;\n        min-width: 100px;\n\n        outline: 0;\n        color: $select-color;\n\n        #{$tag-prefix} {\n            line-height: 1;\n            margin-right: $select-tag-spacing-lr;\n            margin-bottom: $select-tag-spacing-tb;\n            // TODO: removed next 2 line in next version\n            padding-left: $select-tag-padding-lr;\n            padding-right: $select-tag-padding-lr;\n        }\n\n        .#{$css-prefix}input-inner {\n            width: auto;\n        }\n    }\n\n    &-trigger-search {\n        position: relative;\n        display: inline-block;\n        vertical-align: top;\n        overflow: hidden;\n        width: 100%;\n        max-width: 100%;\n\n        > input, > span {\n            display: block;\n            font-size: inherit;\n            font-family: inherit;\n            letter-spacing: inherit;\n            white-space: nowrap;\n            overflow: hidden;\n        }\n\n        input {\n            position: absolute;\n            background-color: $color-transparent;\n            width: 100%;\n            height: 100% !important;\n            z-index: 1;\n            left: 0;\n            border: 0;\n            outline: 0;\n            margin: 0;\n            padding: 0;\n            cursor: inherit;\n        }\n\n        > span {\n            position: relative;\n            visibility: hidden;\n            white-space: pre;\n            max-width: 100%; /* 在 table 布局中，100% 并没有什么x用 */\n            z-index: -1;\n        }\n    }\n\n    &-single {\n        &.#{$css-prefix}no-search {\n            cursor: pointer;\n        }\n\n        /* 搜索框激活时，展开后不显示值，只显示搜索框 */\n        &.#{$css-prefix}has-search.#{$css-prefix}active {\n            #{$select-prefix}-values > em {\n                display: none;\n            }\n        }\n\n        /* 搜索框未激活，或者menu未展开，如果有值，则不显示搜索(placeholder) */\n        &.#{$css-prefix}no-search,\n        &.#{$css-prefix}inactive {\n            #{$select-prefix}-values > em + #{$select-prefix}-trigger-search {\n                width: 1px;\n                opacity: 0;\n                /* stylelint-disable */\n                filter: alpha(opacity=0); /* for IE 9 */\n                /* stylelint-enable */\n            }\n        }\n\n        #{$select-prefix}-values {\n            display: inline-flex;\n            align-items: center;\n\n            > em {\n                vertical-align: middle;\n                overflow: hidden;\n                text-overflow: ellipsis;\n                white-space: nowrap;\n            }\n        }\n    }\n\n    &-multiple {\n        #{$select-prefix}-compact {\n            position: relative;\n            white-space: nowrap;\n            #{$select-prefix}-trigger-search {\n                width: auto;\n            }\n            #{$select-prefix}-tag-compact {\n                position: absolute;\n                top: 0;\n                right: 0;\n                z-index: 1;\n                padding: 0 4px 0 16px;\n                color: $input-text-color;\n                background: linear-gradient(90deg, transparent, $input-bg-color 10px);\n            }\n        }\n        .#{$css-prefix}disabled #{$select-prefix}-tag-compact {\n            background: linear-gradient(90deg, transparent, $input-disabled-bg-color 10px);\n        }\n    }\n\n    &-multiple, &-tag {\n        #{$select-prefix}-values {\n            /* Tag 有 3px 的 margin-bottom，所以包裹 Tag 的容器要作一下处理 */\n            margin-bottom: calc(0px - #{$select-tag-spacing-tb});\n            height: auto !important;\n        }\n\n        #{$select-prefix}-trigger-search {\n            margin-bottom: $select-tag-spacing-tb;\n        }\n\n        /* 如果有值，则搜索框变为1px */\n        #{$tag-prefix} + #{$select-prefix}-trigger-search {\n            width: auto;\n            min-width: 1px; /* 保留一个光标的宽度 */\n        }\n        .#{$css-prefix}input {\n            height: auto;\n            align-items: start;\n        }\n\n        &.#{$css-prefix}small {\n            #{$select-prefix}-values {\n                @include select-size($form-element-small-height, $select-s-lineheight);\n            }\n            #{$select-prefix}-values-compact {\n                height: $form-element-small-height !important;\n            }\n            #{$tag-prefix} {\n                border: 0;\n                @include select-tag-size($select-s-lineheight, calc(0px - 1px));\n\n                &-body {\n                    line-height: $select-s-lineheight;\n                }\n            }\n            .#{$css-prefix}input-label, .#{$css-prefix}input-control, #{$select-prefix}-tag-compact {\n                line-height: calc(#{$form-element-small-height} - 2px);\n            }\n        }\n\n        &.#{$css-prefix}medium {\n            #{$select-prefix}-values {\n                @include select-size($form-element-medium-height, $select-m-lineheight);\n            }\n            #{$select-prefix}-values-compact {\n                height: $form-element-medium-height !important;\n            }\n            #{$tag-prefix} {\n                @include select-tag-size($select-m-lineheight);\n            }\n            .#{$css-prefix}input-label, .#{$css-prefix}input-control, #{$select-prefix}-tag-compact {\n                line-height: calc(#{$form-element-medium-height} - 2px);\n            }\n        }\n\n        &.#{$css-prefix}large {\n            #{$select-prefix}-values {\n                @include select-size($form-element-large-height, $select-l-lineheight);\n            }\n            #{$select-prefix}-values-compact {\n                height: $form-element-large-height !important;\n            }\n            #{$tag-prefix} {\n                @include select-tag-size($select-l-lineheight);\n            }\n            .#{$css-prefix}input-label, .#{$css-prefix}input-control, #{$select-prefix}-tag-compact {\n                line-height: calc(#{$form-element-large-height} - 2px);\n            }\n        }\n    }\n\n\n    /* 在搜索框未激活时，将 input 的 color 置为透明 */\n    /* ISSUE: 在 IE11 中，<input readonly/> 仍然会显示光标, 要隐藏掉 */\n    /*\n    &.#{$css-prefix}no-search {\n        #{$select-prefix}-trigger-search input {\n            color: $color-transparent;\n        }\n    }\n    */\n\n    &-auto-complete {\n        width: 160px;\n\n        .#{$css-prefix}input {\n            width: 100%;\n            .#{$css-prefix}input-hint-wrap {\n                padding-right: 1px;\n            }\n            /* table-cell 下 margin 无效 */\n            #{$select-prefix}-arrow {\n                padding-left: 0;\n            }\n        }\n    }\n\n    &.#{$css-prefix}active {\n        @if get-compiling-value($select-unfold-icon-content) != get-compiling-value($icon-reset) {\n            #{$select-prefix}-symbol-fold::before {\n                content: $select-unfold-icon-content;\n            }\n        } @else {\n            #{$select-prefix}-arrow .#{$css-prefix}icon-arrow-down {\n                transform: rotate(180deg);\n            }\n        }\n    }\n\n    // --------- this is for config platform\n    #{$select-prefix}-unfold-icon::before {\n        content: $select-unfold-icon-content;\n    }\n    // --------- this is for config platform\n\n    &-symbol-fold::before {\n        content: $select-fold-icon-content;\n    }\n\n    &-arrow {\n        cursor: pointer;\n        width: auto !important;\n        text-align: center;\n        transition: all $motion-duration-immediately $motion-linear;\n        /* transform-origin: center 41.8%; // icon 图像中心 */\n    }\n\n    &-popup-wrap {\n        animation-duration: $motion-duration-standard;\n        animation-timing-function: $motion-ease;\n        padding: $popup-spacing-tb 0;\n    }\n\n    &-spacing-tb {\n        padding: $popup-spacing-tb 0;\n    }\n\n    &-menu-wrapper {\n        max-height: 260px;\n        overflow: auto;\n        border: $popup-local-border-width $popup-local-border-style $popup-local-border-color;\n        border-radius: $popup-local-corner;\n        box-shadow: $popup-local-shadow;\n        #{$select-prefix}-menu {\n            max-height: none;\n            border: none;\n        }\n    }\n\n    /* 弹层 */\n    &-menu {\n        max-height: 260px;\n        overflow: auto;\n\n        #{$select-prefix}-menu-empty-content {\n            padding-left: $s-2;\n            padding-right: $s-2;\n            color: $select-hint-color;\n        }\n\n        /* autoComplete 没有选项时 menu 不显示 */\n        &#{$select-prefix}-auto-complete-menu#{$select-prefix}-menu-empty {\n            display: none;\n        }\n\n        .#{$css-prefix}menu-item-text .#{$css-prefix}icon {\n            vertical-align: middle;\n        }\n    }\n\n    /* 全选按钮 */\n    &-all {\n        display: block;\n        cursor: pointer;\n        padding: 0 $s-2;\n        margin: 0 $s-3 $s-2;\n        border-bottom: 1px solid $color-line1-2;\n\n        &:hover {\n            color: $color-link-3;\n        }\n\n        .#{$css-prefix}menu-icon-selected.#{$css-prefix}icon {\n            // remove display: inline-block !important; in next Y\n            display: inline-block !important;\n            top: initial;\n            color: $select-menu-icon-color;\n        }\n    }\n\n    &-highlight {\n        color: $select-highlight-color;\n        font-size: $select-highlight-font;\n    }\n\n    /* -------------- IE polyfill -------------- */\n    /* 根据最新的数据，在中国，PC 端的 IE9 份额为 2%， */\n    /* 所以不应该因为 IE9 而不使用 flex，而是应该做降级 polyfill */\n    /* @see http://gs.statcounter.com/ */\n    /* IE10、IE11 虽然支持 flex，但还是会有各种各样奇奇怪怪的问题 */\n    &-in-ie#{$select-prefix}-trigger {\n        #{$select-prefix}-values {\n            /* 在 table 布局中，overflow: hidden 会导致负的 margin 失效 */\n            overflow: visible;\n        }\n\n        .#{$css-prefix}input-control, .#{$css-prefix}input-label {\n            width: 1px;\n        }\n        .#{$css-prefix}input-control > * {\n            display: table-cell;\n            width: 1%;\n        }\n        #{$select-prefix}-arrow {\n            display: table-cell;\n        }\n        #{$select-prefix}-clear {\n            display: none;\n        }\n\n        &#{$select-prefix}-multiple,\n        &#{$select-prefix}-tag {\n            #{$select-prefix}-inner {\n                vertical-align: top;\n            }\n        }\n\n        #{$select-prefix}-inner {\n            display: inline-table;\n        }\n\n        &#{$select-prefix}-single {\n            #{$select-prefix}-values {\n                display: inline-table;\n            }\n            .#{$css-prefix}input.#{$css-prefix}small #{$select-prefix}-values {\n                line-height: $form-element-small-height;\n            }\n            .#{$css-prefix}input.#{$css-prefix}medium #{$select-prefix}-values {\n                line-height: $form-element-medium-height;\n            }\n            .#{$css-prefix}input.#{$css-prefix}large #{$select-prefix}-values {\n                line-height: $form-element-large-height;\n            }\n        }\n\n        #{$select-prefix}-trigger-search {\n            > span {\n                max-width: 100px;\n            }\n        }\n\n        &#{$select-prefix}-single {\n            &#{$select-prefix}-in-ie-fixwidth #{$select-prefix}-values {\n                position: relative;\n                > em {\n                    position: absolute;\n                    display: inline-block;\n                    height: 100%;\n                    line-height: 1;\n                    vertical-align: middle;\n                    overflow: hidden;\n                    left: 4px;\n                    right: 0;\n                    top: 30%;\n                }\n            }\n            /* 搜索框未激活，或者menu未展开，如果有值，则不显示搜索(placeholder) */\n            &.#{$css-prefix}no-search,\n            &.#{$css-prefix}inactive {\n                #{$select-prefix}-values > em + #{$select-prefix}-trigger-search {\n                    /* stylelint-disable */\n                    filter: alpha(opacity=0); /* for IE 9 */\n                    /* stylelint-enable */\n                    font-size: 0;\n                }\n            }\n        }\n\n        &.#{$css-prefix}no-search {\n            #{$select-prefix}-trigger-search input {\n                color: inherit;\n            }\n        }\n    }\n}\n\n@media screen and (-webkit-min-device-pixel-ratio: 0) {\n    #{$select-prefix}-multiple {\n        #{$select-prefix}-compact {\n            #{$select-prefix}-tag-compact {\n                background: linear-gradient(90deg, rgba(255, 255, 255, 0), $input-bg-color 10px);\n            }\n        }\n\n        .#{$css-prefix}disabled #{$select-prefix}-tag-compact {\n            background: linear-gradient(90deg, rgba(255, 255, 255, 0), $input-disabled-bg-color 10px);\n        }\n    }\n}\n\n@import \"./rtl.scss\";"
    },
    "3": {
        "bug_file": "src/select/select.jsx",
        "compressed": "YES",
        "line_numbers": 1161,
        "compressed_line_numbers": 390,
        "compressed_bug_file_content": "/* eslint-disable valid-jsdoc */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { polyfill } from 'react-lifecycles-compat';\n\nimport { func, obj, KEYCODE, env, str } from '../util';\nimport Tag from '../tag';\nimport Input from '../input';\nimport Icon from '../icon';\nimport zhCN from '../locale/zh-cn';\nimport Base from './base';\nimport { isNull, getValueDataSource, valueToSelectKey } from './util';\n\n\n/**\n * 无障碍化注意事项:\n * 1. Select 无搜索情况下，不应该让 Input 可focus，此时外层wrap必须可focus，并且需要相应focus事件让外边框发生变化\n *\n * TODO: hightLight 后续改造注意点\n * 1. hightLight 跟随点击变化(fixed) 2. 弹窗打开时根据 是否高亮第一个选项的 api开关设置是否hightLight 第一项\n */\n\n// 自定义弹层：1. 不需要关心Menu的点击事件 2. 不需要关心dataSource变化\n\n/**\n * Select\n */\n\n\n        /**\n         * 选择器模式\n         */\n\n        /**\n         * 当前值，用于受控模式\n         */\n\n        /**\n         * 初始的默认值\n         */\n\n        /**\n         * Select发生改变时触发的回调\n         * @param {*} value 选中的值\n         * @param {String} actionType 触发的方式, 'itemClick', 'enter', 'tag'\n         * @param {*} item 选中的值的对象数据 (useDetailValue=false有效)\n         */\n\n        /**\n         * 传入的数据源，可以动态渲染子项，详见 [dataSource的使用](#dataSource的使用)\n         */\n\n\n        /**\n         * 是否有边框\n         */\n\n        /**\n         * 是否有下拉箭头\n         */\n\n        /**\n         * 展开后是否能搜索（tag 模式下固定为true）\n         */\n\n        /**\n         * 当搜索框值变化时回调\n         * @param {String} value 数据\n         */\n\n        /**\n         * 当搜索框值被(选择、弹窗关闭)导致清空时候的回调\n         * @param {String} actionType 触发的方式, 'select'(选择清空), 'popupClose'(弹窗关闭清空)\n         */\n\n        /**\n         * 多选模式下是否有全选功能\n         */\n\n        /**\n         * 填充到选择框里的值的 key\b\b\n         */\n\n        /**\n         * value 使用对象类型 `{value, label}`, 同时 onChange 第一个参数返回也修改为 dataSource 中的对象\n         */\n\n        /**\n         * dataSource 变化的时是否保留已选的内容\n         */\n\n        /**\n         * 渲染 Select 展现内容的方法\n         * @param {Object} item 渲染节点的item\n         * @return {ReactNode} 展现内容\n         * @default item => `item.label || item.value`\n         */\n\n        /**\n         * 渲染 MenuItem 内容的方法\n         * @param {Object} item 渲染节点的item\n         * @param {String} searchValue 搜索关键字（如果开启搜索）\n         * @return {ReactNode} item node\n         */\n\n        /**\n         * 弹层内容为空的文案\n         */\n\n\n        /**\n         * 受控搜索值，一般不需要设置\n         * @type {[type]}\n         */\n\n        /**\n         * 是否一行显示，仅在 mode 为 multiple 的时候生效\n         * @version 1.15\n         */\n\n        /**\n         * tag 是否可关闭\n         * @version 1.20\n         */\n\n        /**\n         * tag 尺寸是否和 select 保持一致(mode=multiple/tag 模式生效），默认false\n         * @version 1.24\n         */\n\n        /**\n         * 最多显示多少个 tag\n         * @version 1.15\n         */\n\n        /**\n         * 隐藏多余 tag 时显示的内容，在 maxTagCount 生效时起作用\n         * @param {object} selectedValues 当前已选中的元素\n         * @param {object} totalValues 总待选元素\n         * @version 1.15\n         */\n\n        /**\n         * 选择后是否立即隐藏菜单 (mode=multiple/tag 模式生效)\n         */\n\n        /**\n         * tag 删除回调\n         * @param {object} item 渲染节点的item\n         */\n\n        /**\n         * 焦点事件\n         */\n\n        /**\n         * 是否自动高亮第一个选项\n         */\n        // highlightFirstItem: PropTypes.bool,\n        /**\n         * 失去焦点事件\n         */\n\n\n        /**\n         * 展开下拉菜单时是否自动焦点到弹层\n         */\n\n        /**\n         * 是否展示 dataSource 中 children\n         */\n\n\n        // highlightFirstItem: true,\n\n\n        // because dataSource maybe updated while select a item, so we should cache choosen value's item\n\n\n        // 根据value和计算后的dataSource，更新value对应的详细数据valueDataSource\n\n\n            /* eslint-disable react/no-did-update-set-state */\n\n\n            // has defaultValue and value not changed and dataSource changed\n            // fix: set defaultValue first, then update dataSource.\n\n\n    // ie9 下 table-cell 布局不支持宽度超出隐藏\n\n\n            //\n\n\n    /**\n     * Menu.Item onSelect\n     * @private\n     * @param  {Array<string>} keys\n     * @\n     */\n\n\n            // 单选\n\n\n            // 正常多选\n\n\n    /**\n     * 单选模式\n     */\n\n        // TODO: 这里 cacheValue=false 有问题，dataSource 更新的时候就应该处理\n\n        // get data only from dataStore while cacheValue=false\n\n\n        // 清空搜索\n\n\n    /**\n     * 多选模式 multiple/tag\n     */\n\n\n        // cache those value maybe not exists in dataSource\n\n\n        // 因为搜索后会设置 hightLight 为第一个item，menu渲染会自动滚动到 hightLight 的元素上面。\n        // 所以设置 hightLight 为当前选中项避免滚动\n\n\n        // 清空搜索\n\n            // 因为 SearchValue 被 clear 后会重新渲染 Menu，所以在 Overlay 检测 safeNode 的时候 e.target 可能会找不到导致弹窗关闭\n\n\n        // multiple mode\n        // is current state select all or not\n\n\n    /**\n     * Handle search input change event\n     * @param {String} value search text\n     * @param {Event} e change Event\n     */\n\n\n        // inputing should trigger popup open\n\n\n    // 搜索框 keyDown 事件\n\n\n                    // 在多选并且有搜索的情况下，删除最后一个 tag\n\n\n                    // 单选、非展开、并且可清除的情况，允许按删除键清除\n\n\n            // unselect\n\n\n            // select\n\n\n    // 回车 选择高亮的 item\n\n\n            // input tag by itself\n\n\n        // 没有高亮选项 或者 没有可选菜单\n\n\n            // 阻止事件冒泡到最外层，让Popup 监听到触发弹层关闭\n\n\n    /**\n     * Handle Tag close event\n     * @param  {Object} item\n     * @return {Boolean} false  return false to prevent auto close\n     * ----\n     * It MUST be multiple mode, needn't additional judgement\n     */\n\n\n            // filter out current item, and then call handleMenuSelect\n\n\n        // prevent tag close\n\n\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * Handle BACKSPACE key event\n     * @param {Event} e keyDown event\n     * ---\n     * It MUST be multiple mode\n     */\n\n\n        // 手动调用 handleMenuSelect 时直接传入原生的 value，可以减少 toString 的操作\n\n\n    /**\n     * Handle SelectAll span click event\n     * @param {Event} e click event\n     */\n\n\n        // 直接传 values，减少 toString 操作\n\n\n        // 关闭的时候清空搜索值\n\n\n    /**\n     * 如果用户是自定义的弹层，则直接以 value 为准，不再校验 dataSource\n     * TODO: 2.0 中 value 接受 string/object{value,label} 两种类型的数据，自动做识别，可以避免用户去转换，也和 date-picker 对齐\n     * 此外 onChange 第一个参数根据 api 来控制类型是 [string] 还是 [object{value,label}]\n     * @param {object} props\n     */\n\n\n        // get detail value\n\n\n            // 0 => '0'\n\n\n    /**\n     * 1. fix flash while click <label/>\n     * 2. fix onBlur while has clear\n     * @returns\n     */\n\n        // ignore click on input to choose text\n\n\n        // because of can not close Popup by click Input while hasSearch.\n        // so when Popup open and hasSearch, we should close Popup intentionally\n\n\n    /**\n     * render arrow\n     * @param {object} props\n     * @param {function} [clickHandler]\n     */\n\n\n        // do not use this.hasClear() here, to make sure clear btn always exists, can not influenced by apis like `disabled` `readOnly`\n\n\n    /**\n     * 选择器\n     * @override\n     * @param {object} props\n     */\n\n\n        // compatible with selectPlaceHolder. TODO: removed in 2.0 version\n\n\n        // 弹窗展开时将当前的值作为 placeholder，这个功能的前提是 valueNode 必须是一个字符串\n\n\n        // 下拉箭头\n\n\n    /**\n     * 渲染弹层的 header 内容\n     * @override\n     * @param {object} props\n     */\n\n\n        // 多选模式下才有全选\n\n\n        // remove style={{'lineHeight': 'unset'}} in next Y\n        // remove style={{'display': 'none'}} in next Y\n\n\n        // forbid to close Popup by click Input while hasSearch\n\n\nexport default polyfill(Select);\n"
    },
    "4": {
        "bug_file": "src/select/style.js",
        "compressed": "NO",
        "line_numbers": 6,
        "compressed_line_numbers": 6,
        "compressed_bug_file_content": "import '../icon/style.js';\nimport '../tag/style.js';\nimport '../overlay/style.js';\nimport '../menu/style.js';\nimport '../input/style.js';\nimport './main.scss';"
    }
}