{
    "1": {
        "bug_file": "src/js/components/PageHeader/PageHeader.js",
        "compressed": "NO",
        "line_numbers": 100,
        "compressed_line_numbers": 100,
        "compressed_bug_file_content": "import React, { forwardRef, useContext } from 'react';\nimport { ThemeContext } from 'styled-components';\n\nimport { Box } from '../Box';\nimport { Header } from '../Header';\nimport { Heading } from '../Heading';\nimport { Grid } from '../Grid';\nimport { Paragraph } from '../Paragraph';\nimport { ResponsiveContext } from '../../contexts/ResponsiveContext';\n\nconst sizeStyle = (size, feature, theme) => {\n  const style = {\n    ...theme.pageHeader[feature],\n    ...((size && theme.pageHeader.size[size]?.[feature]) ??\n      theme.pageHeader[feature]),\n  };\n\n  return style;\n};\n\nconst PageHeader = forwardRef(\n  (\n    {\n      actions,\n      gridProps: gridPropsProp,\n      parent,\n      responsive,\n      size,\n      subtitle,\n      title,\n      ...rest\n    },\n    ref,\n  ) => {\n    const theme = useContext(ThemeContext);\n    const breakpoint = useContext(ResponsiveContext);\n\n    let actionsProps = { ...theme.pageHeader.actions };\n    let gridProps = theme.pageHeader[breakpoint] || theme.pageHeader.medium;\n\n    if (\n      responsive &&\n      theme.pageHeader.responsive.breakpoints.includes(breakpoint)\n    ) {\n      gridProps = { ...gridProps, ...theme.pageHeader.responsive };\n      actionsProps = {\n        ...actionsProps,\n        ...theme.pageHeader.responsive.actions,\n      };\n    }\n\n    const { areas, columns, gap, rows } = gridProps;\n\n    return (\n      <Header\n        ref={ref}\n        direction=\"column\"\n        gap=\"none\"\n        pad={sizeStyle(size, 'pad', theme)}\n        {...rest}\n      >\n        <Grid\n          columns={columns}\n          rows={rows}\n          areas={areas}\n          gap={gap}\n          fill=\"horizontal\"\n          {...gridPropsProp}\n        >\n          <Box gridArea=\"parent\" {...theme.pageHeader.parent}>\n            {parent}\n          </Box>\n          <Box gridArea=\"title\">\n            {typeof title === 'string' ? (\n              <Heading {...sizeStyle(size, 'title', theme)}>{title}</Heading>\n            ) : (\n              title\n            )}\n          </Box>\n          <Box gridArea=\"subtitle\">\n            {typeof subtitle === 'string' ? (\n              <Paragraph {...sizeStyle(size, 'subtitle', theme)}>\n                {subtitle}\n              </Paragraph>\n            ) : (\n              subtitle\n            )}\n          </Box>\n          <Box gridArea=\"actions\" {...actionsProps}>\n            {actions}\n          </Box>\n        </Grid>\n      </Header>\n    );\n  },\n);\n\nPageHeader.displayName = 'PageHeader';\n\nexport { PageHeader };"
    },
    "2": {
        "bug_file": "src/js/components/PageHeader/__tests__/PageHeader-test.tsx",
        "compressed": "NO",
        "line_numbers": 82,
        "compressed_line_numbers": 82,
        "compressed_bug_file_content": "import React from 'react';\nimport { render } from '@testing-library/react';\nimport 'jest-styled-components';\n\nimport { Grommet } from '../../Grommet';\nimport { Anchor } from '../../Anchor';\nimport { Box } from '../../Box';\nimport { Button } from '../../Button';\nimport { PageHeader } from '..';\n\nconst sizes = ['small', 'medium', 'large'];\n\ndescribe('PageHeader', () => {\n  test('basic', () => {\n    const { asFragment } = render(\n      <Grommet>\n        <PageHeader\n          title=\"Grommet\"\n          subtitle={`Grommet helps you build responsive and accessible \n          mobile-first projects for the web with an easy to use component \n          library.`}\n          actions={<Button label=\"Get Started\" primary />}\n          parent={<Anchor label=\"Parent Page\" />}\n        />\n      </Grommet>,\n    );\n\n    expect(asFragment()).toMatchSnapshot();\n  });\n\n  sizes.forEach((size?: any) => {\n    test(`size - ${size}`, () => {\n      const { asFragment } = render(\n        <Grommet>\n          <PageHeader\n            title=\"Grommet\"\n            subtitle={`Grommet helps you build responsive and accessible \n            mobile-first projects for the web with an easy to use component \n            library.`}\n            actions={<Button label=\"Get Started\" primary />}\n            parent={<Anchor label=\"Parent Page\" />}\n            size={size}\n          />\n        </Grommet>,\n      );\n\n      expect(asFragment()).toMatchSnapshot();\n    });\n  });\n\n  test('custom theme', () => {\n    const customTheme = {\n      pageHeader: {\n        medium: {\n          areas: [\n            ['parent', 'parent'],\n            ['title', 'null'],\n            ['subtitle', 'null'],\n            ['actions', 'actions'],\n          ],\n        },\n      },\n    };\n\n    const { asFragment } = render(\n      <Grommet theme={customTheme}>\n        <PageHeader\n          title=\"Permissions\"\n          subtitle=\"View and assign permissions.\"\n          actions={\n            <Box alignSelf=\"start\">\n              <Button label=\"Edit\" primary />\n            </Box>\n          }\n          parent={<Anchor label=\"Settings\" />}\n        />\n      </Grommet>,\n    );\n\n    expect(asFragment()).toMatchSnapshot();\n  });\n});"
    },
    "3": {
        "bug_file": "src/js/components/PageHeader/propTypes.js",
        "compressed": "NO",
        "line_numbers": 18,
        "compressed_line_numbers": 18,
        "compressed_bug_file_content": "import PropTypes from 'prop-types';\nimport { genericProps } from '../../utils/general-prop-types';\nimport { GridPropTypes } from '../Grid/propTypes';\n\nlet PropType = {};\nif (process.env.NODE_ENV !== 'production') {\n  PropType = {\n    ...genericProps,\n    actions: PropTypes.element,\n    gridProps: GridPropTypes,\n    parent: PropTypes.element,\n    responsive: PropTypes.bool,\n    size: PropTypes.oneOf(['small', 'medium', 'large']),\n    subtitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  };\n}\nexport const PageHeaderPropTypes = PropType;"
    },
    "4": {
        "bug_file": "src/js/components/PageHeader/stories/Simple.js",
        "compressed": "NO",
        "line_numbers": 25,
        "compressed_line_numbers": 25,
        "compressed_bug_file_content": "import React from 'react';\n\nimport { Anchor, Button, PageHeader, Page, PageContent } from 'grommet';\n\nexport const Simple = () => (\n  // Uncomment <Grommet> lines when using outside of storybook\n  // <Grommet theme={...}>\n  <Page>\n    <PageContent>\n      <PageHeader\n        title=\"Grommet\"\n        subtitle={`Grommet helps you build responsive and accessible \n          mobile-first projects for the web with an easy to use component \n          library.`}\n        actions={<Button label=\"Get Started\" primary />}\n        parent={<Anchor label=\"Parent Page\" />}\n      />\n    </PageContent>\n  </Page>\n  // </Grommet>\n);\n\nexport default {\n  title: 'Layout/PageHeader/Simple',\n};"
    }
}