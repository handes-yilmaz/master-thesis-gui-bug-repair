{
    "1": {
        "bug_file": "src/js/components/DataTable/DataTable.js",
        "compressed": "YES",
        "line_numbers": 575,
        "compressed_line_numbers": 104,
        "compressed_bug_file_content": "import React, {\n\n\nimport { ThemeContext } from 'styled-components';\n\nimport { defaultProps } from '../../default-props';\n\nimport { useLayoutEffect } from '../../utils/use-isomorphic-layout-effect';\nimport { Box } from '../Box';\nimport { Text } from '../Text';\nimport { Header } from './Header';\nimport { Footer } from './Footer';\nimport { Body } from './Body';\nimport { GroupedBody } from './GroupedBody';\nimport { Pagination } from '../Pagination';\nimport {\n\n\nimport { normalizeShow, usePagination } from '../../utils';\nimport {\n\n\nimport { DataTablePropTypes } from './propTypes';\nimport { PlaceholderBody } from './PlaceholderBody';\n\n\n  // property name of the primary property\n\n\n  // whether or not we should show a footer\n\n\n  // what column we are actively capturing filter input on\n\n\n  // the currently active filters\n\n\n  // which column we are sorting on, with direction\n\n\n  // the data filtered and sorted, if needed\n  // Note: onUpdate mode expects the data to be passed\n  //   in completely filtered and sorted already.\n\n\n  // the values to put in the footer cells\n\n\n  // cell styling properties: background, border, pad\n\n\n  // if groupBy, an array with one item per unique groupBy key value\n\n\n  // an object indicating which group values are expanded\n\n\n  // any customized column widths\n\n\n  // placeholder placement stuff\n\n\n  // offset compensation when body overflows\n\n\n  // multiple pinned columns offset\n\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n\n\n  // remember that we are filtering on this property\n\n\n  // remember the search text we should filter this property by\n\n\n    // Let caller know about search, if interested\n\n\n  // toggle the sort direction on this property\n\n\n  // toggle whether the group is expanded\n\n\n  // toggle whether all groups are expanded\n\n\n  // remember the width this property's column should be\n\n\n  // DataTable should overflow if paginating but pagination component\n  // should remain in its location\n\n\n  // necessary for Firefox, otherwise paginated DataTable will\n  // not fill its container like it does by default on other\n  // browsers like Chrome/Safari\n\n\nexport { DataTable };\n"
    },
    "2": {
        "bug_file": "src/js/components/DataTable/Sorter.js",
        "compressed": "NO",
        "line_numbers": 60,
        "compressed_line_numbers": 60,
        "compressed_bug_file_content": "import React, { useContext } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\n\nimport { defaultProps } from '../../default-props';\n\nimport { Button } from '../Button';\nimport { Box } from '../Box';\n\nconst SorterButton = styled(Button)`\n  flex-shrink: 1;\n  height: 100%;\n`;\n\nconst Sorter = ({\n  align,\n  children,\n  fill,\n  onSort,\n  property,\n  sort,\n  themeProps,\n}) => {\n  const theme = useContext(ThemeContext) || defaultProps.theme;\n  let icon;\n  if (sort && sort.property === property) {\n    const Icon =\n      theme.dataTable.icons[sort.ascending ? 'ascending' : 'descending'];\n    icon = <Icon />;\n  }\n  let content = (\n    <Box\n      {...themeProps}\n      flex=\"shrink\"\n      direction=\"row\"\n      justify={align}\n      align=\"center\"\n      gap=\"xsmall\"\n      fill={fill}\n    >\n      {children}\n      {icon}\n    </Box>\n  );\n  if (onSort) {\n    content = (\n      <SorterButton fill={fill} hoverIndicator onClick={onSort(property)}>\n        {content}\n      </SorterButton>\n    );\n  }\n\n  return content;\n};\n\nSorter.displayName = 'Sorter';\n\nSorter.defaultProps = {};\nObject.setPrototypeOf(Sorter.defaultProps, defaultProps);\n\nexport { Sorter };"
    },
    "3": {
        "bug_file": "src/js/components/DataTable/__tests__/DataTable-test.js",
        "compressed": "YES",
        "line_numbers": 1457,
        "compressed_line_numbers": 21,
        "compressed_bug_file_content": "import React from 'react';\nimport 'jest-styled-components';\nimport { render, fireEvent } from '@testing-library/react';\n\nimport { Grommet } from '../../Grommet';\nimport { Box } from '../../Box';\nimport { Text } from '../../Text';\nimport { DataTable } from '..';\n\n\n    // default DataTable step 50\n\n\n    // aria-label should have changed since all entries\n    // are selected\n\n\n    // aria-label should have changed since all entries\n    // are selected\n\n\n"
    },
    "4": {
        "bug_file": "src/js/components/Select/utils.js",
        "compressed": "NO",
        "line_numbers": 7,
        "compressed_line_numbers": 7,
        "compressed_bug_file_content": "export const applyKey = (option, key) => {\n  if (option === undefined) return undefined;\n  if (typeof key === 'object') return applyKey(option, key.key);\n  if (typeof key === 'function') return key(option);\n  if (key !== undefined) return option[key];\n  return option;\n};"
    }
}