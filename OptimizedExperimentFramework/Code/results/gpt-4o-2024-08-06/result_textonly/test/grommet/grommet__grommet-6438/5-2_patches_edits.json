{
    "1/1": {
        "src/js/components/Calendar/Calendar.js": [
            {
                "SEARCH": [
                    "const CalendarDay = ({",
                    "children,",
                    "fill,",
                    "size,",
                    "isInRange,",
                    "isSelected,",
                    "otherMonth,",
                    "buttonProps = {},",
                    "}) => (",
                    "<StyledDayContainer role=\"gridcell\" sizeProp={size} fillContainer={fill}>",
                    "<CalendarDayButton fill={fill} {...buttonProps}>",
                    "<StyledDay",
                    "disabledProp={buttonProps.disabled}",
                    "inRange={isInRange}",
                    "otherMonth={otherMonth}",
                    "isSelected={isSelected}",
                    "sizeProp={size}",
                    "fillContainer={fill}",
                    ">",
                    "{children}",
                    "</StyledDay>",
                    "</CalendarDayButton>",
                    "</StyledDayContainer>",
                    ");"
                ],
                "REPLACE": [
                    "const CalendarDay = ({",
                    "  children,",
                    "  fill,",
                    "  size,",
                    "  isInRange,",
                    "  isSelected,",
                    "  otherMonth,",
                    "  buttonProps = {},",
                    "  date,",
                    "  bounds,",
                    "}) => (",
                    "  <StyledDayContainer role=\"gridcell\" sizeProp={size} fillContainer={fill}>",
                    "    <CalendarDayButton",
                    "      fill={fill}",
                    "      disabled={!betweenDates(date, bounds)}",
                    "      {...buttonProps}",
                    "    >",
                    "      <StyledDay",
                    "        disabledProp={buttonProps.disabled || !betweenDates(date, bounds)}",
                    "        inRange={isInRange}",
                    "        otherMonth={otherMonth}",
                    "        isSelected={isSelected}",
                    "        sizeProp={size}",
                    "        fillContainer={fill}",
                    "      >",
                    "        {children}",
                    "      </StyledDay>",
                    "    </CalendarDayButton>",
                    "  </StyledDayContainer>",
                    ");"
                ]
            }
        ],
        "src/js/components/Calendar/utils.js": [
            {
                "SEARCH": [
                    "export const betweenDates = (date, dates) => {",
                    "let result;",
                    "if (dates) {",
                    "const [from, to] = Array.isArray(dates)",
                    "? dates.map((d) => (d ? new Date(d) : undefined))",
                    ": [dates, undefined];",
                    "if ((from && sameDay(date, from)) || (to && sameDay(date, to))) {",
                    "result = 2;",
                    "} else if (",
                    "from &&",
                    "sameDayOrAfter(date, from) &&",
                    "to &&",
                    "sameDayOrBefore(date, to)",
                    ") {",
                    "result = 1;",
                    "}",
                    "} else {",
                    "result = 1;",
                    "}",
                    "return result;",
                    "};"
                ],
                "REPLACE": [
                    "export const betweenDates = (date, dates) => {",
                    "  let result;",
                    "  if (dates) {",
                    "    const [from, to] = Array.isArray(dates)",
                    "      ? dates.map((d) => (d ? new Date(d) : undefined))",
                    "      : [dates, undefined];",
                    "    if ((from && sameDay(date, from)) || (to && sameDay(date, to))) {",
                    "      result = 2;",
                    "    } else if (",
                    "      from &&",
                    "      sameDayOrAfter(date, from) &&",
                    "      to &&",
                    "      sameDayOrBefore(date, to)",
                    "    ) {",
                    "      result = 1;",
                    "    } else {",
                    "      result = undefined;",
                    "    }",
                    "  } else {",
                    "    result = 1;",
                    "  }",
                    "  return result;",
                    "};"
                ]
            }
        ]
    }
}