diff --git a/src/languages/arduino.js b/src/languages/arduino.js
index 1c09b1bb..88804ea1 100644
--- a/src/languages/arduino.js
+++ b/src/languages/arduino.js
@@ -9,372 +9,372 @@ import cPlusPlus from './cpp.js';
 
 /** @type LanguageFn */
 export default function(hljs) {
-  const ARDUINO_KW = {
-    type: [
-      "boolean",
-      "byte",
-      "word",
-      "String"
-    ],
-    built_in: [
-      "KeyboardController",
-      "MouseController",
-      "SoftwareSerial",
-      "EthernetServer",
-      "EthernetClient",
-      "LiquidCrystal",
-      "RobotControl",
-      "GSMVoiceCall",
-      "EthernetUDP",
-      "EsploraTFT",
-      "HttpClient",
-      "RobotMotor",
-      "WiFiClient",
-      "GSMScanner",
-      "FileSystem",
-      "Scheduler",
-      "GSMServer",
-      "YunClient",
-      "YunServer",
-      "IPAddress",
-      "GSMClient",
-      "GSMModem",
-      "Keyboard",
-      "Ethernet",
-      "Console",
-      "GSMBand",
-      "Esplora",
-      "Stepper",
-      "Process",
-      "WiFiUDP",
-      "GSM_SMS",
-      "Mailbox",
-      "USBHost",
-      "Firmata",
-      "PImage",
-      "Client",
-      "Server",
-      "GSMPIN",
-      "FileIO",
-      "Bridge",
-      "Serial",
-      "EEPROM",
-      "Stream",
-      "Mouse",
-      "Audio",
-      "Servo",
-      "File",
-      "Task",
-      "GPRS",
-      "WiFi",
-      "Wire",
-      "TFT",
-      "GSM",
-      "SPI",
-      "SD"
-    ],
-    _hints: [
-      "setup",
-      "loop",
-      "runShellCommandAsynchronously",
-      "analogWriteResolution",
-      "retrieveCallingNumber",
-      "printFirmwareVersion",
-      "analogReadResolution",
-      "sendDigitalPortPair",
-      "noListenOnLocalhost",
-      "readJoystickButton",
-      "setFirmwareVersion",
-      "readJoystickSwitch",
-      "scrollDisplayRight",
-      "getVoiceCallStatus",
-      "scrollDisplayLeft",
-      "writeMicroseconds",
-      "delayMicroseconds",
-      "beginTransmission",
-      "getSignalStrength",
-      "runAsynchronously",
-      "getAsynchronously",
-      "listenOnLocalhost",
-      "getCurrentCarrier",
-      "readAccelerometer",
-      "messageAvailable",
-      "sendDigitalPorts",
-      "lineFollowConfig",
-      "countryNameWrite",
-      "runShellCommand",
-      "readStringUntil",
-      "rewindDirectory",
-      "readTemperature",
-      "setClockDivider",
-      "readLightSensor",
-      "endTransmission",
-      "analogReference",
-      "detachInterrupt",
-      "countryNameRead",
-      "attachInterrupt",
-      "encryptionType",
-      "readBytesUntil",
-      "robotNameWrite",
-      "readMicrophone",
-      "robotNameRead",
-      "cityNameWrite",
-      "userNameWrite",
-      "readJoystickY",
-      "readJoystickX",
-      "mouseReleased",
-      "openNextFile",
-      "scanNetworks",
-      "noInterrupts",
-      "digitalWrite",
-      "beginSpeaker",
-      "mousePressed",
-      "isActionDone",
-      "mouseDragged",
-      "displayLogos",
-      "noAutoscroll",
-      "addParameter",
-      "remoteNumber",
-      "getModifiers",
-      "keyboardRead",
-      "userNameRead",
-      "waitContinue",
-      "processInput",
-      "parseCommand",
-      "printVersion",
-      "readNetworks",
-      "writeMessage",
-      "blinkVersion",
-      "cityNameRead",
-      "readMessage",
-      "setDataMode",
-      "parsePacket",
-      "isListening",
-      "setBitOrder",
-      "beginPacket",
-      "isDirectory",
-      "motorsWrite",
-      "drawCompass",
-      "digitalRead",
-      "clearScreen",
-      "serialEvent",
-      "rightToLeft",
-      "setTextSize",
-      "leftToRight",
-      "requestFrom",
-      "keyReleased",
-      "compassRead",
-      "analogWrite",
-      "interrupts",
-      "WiFiServer",
-      "disconnect",
-      "playMelody",
-      "parseFloat",
-      "autoscroll",
-      "getPINUsed",
-      "setPINUsed",
-      "setTimeout",
-      "sendAnalog",
-      "readSlider",
-      "analogRead",
-      "beginWrite",
-      "createChar",
-      "motorsStop",
-      "keyPressed",
-      "tempoWrite",
-      "readButton",
-      "subnetMask",
-      "debugPrint",
-      "macAddress",
-      "writeGreen",
-      "randomSeed",
-      "attachGPRS",
-      "readString",
-      "sendString",
-      "remotePort",
-      "releaseAll",
-      "mouseMoved",
-      "background",
-      "getXChange",
-      "getYChange",
-      "answerCall",
-      "getResult",
-      "voiceCall",
-      "endPacket",
-      "constrain",
-      "getSocket",
-      "writeJSON",
-      "getButton",
-      "available",
-      "connected",
-      "findUntil",
-      "readBytes",
-      "exitValue",
-      "readGreen",
-      "writeBlue",
-      "startLoop",
-      "IPAddress",
-      "isPressed",
-      "sendSysex",
-      "pauseMode",
-      "gatewayIP",
-      "setCursor",
-      "getOemKey",
-      "tuneWrite",
-      "noDisplay",
-      "loadImage",
-      "switchPIN",
-      "onRequest",
-      "onReceive",
-      "changePIN",
-      "playFile",
-      "noBuffer",
-      "parseInt",
-      "overflow",
-      "checkPIN",
-      "knobRead",
-      "beginTFT",
-      "bitClear",
-      "updateIR",
-      "bitWrite",
-      "position",
-      "writeRGB",
-      "highByte",
-      "writeRed",
-      "setSpeed",
-      "readBlue",
-      "noStroke",
-      "remoteIP",
-      "transfer",
-      "shutdown",
-      "hangCall",
-      "beginSMS",
-      "endWrite",
-      "attached",
-      "maintain",
-      "noCursor",
-      "checkReg",
-      "checkPUK",
-      "shiftOut",
-      "isValid",
-      "shiftIn",
-      "pulseIn",
-      "connect",
-      "println",
-      "localIP",
-      "pinMode",
-      "getIMEI",
-      "display",
-      "noBlink",
-      "process",
-      "getBand",
-      "running",
-      "beginSD",
-      "drawBMP",
-      "lowByte",
-      "setBand",
-      "release",
-      "bitRead",
-      "prepare",
-      "pointTo",
-      "readRed",
-      "setMode",
-      "noFill",
-      "remove",
-      "listen",
-      "stroke",
-      "detach",
-      "attach",
-      "noTone",
-      "exists",
-      "buffer",
-      "height",
-      "bitSet",
-      "circle",
-      "config",
-      "cursor",
-      "random",
-      "IRread",
-      "setDNS",
-      "endSMS",
-      "getKey",
-      "micros",
-      "millis",
-      "begin",
-      "print",
-      "write",
-      "ready",
-      "flush",
-      "width",
-      "isPIN",
-      "blink",
-      "clear",
-      "press",
-      "mkdir",
-      "rmdir",
-      "close",
-      "point",
-      "yield",
-      "image",
-      "BSSID",
-      "click",
-      "delay",
-      "read",
-      "text",
-      "move",
-      "peek",
-      "beep",
-      "rect",
-      "line",
-      "open",
-      "seek",
-      "fill",
-      "size",
-      "turn",
-      "stop",
-      "home",
-      "find",
-      "step",
-      "tone",
-      "sqrt",
-      "RSSI",
-      "SSID",
-      "end",
-      "bit",
-      "tan",
-      "cos",
-      "sin",
-      "pow",
-      "map",
-      "abs",
-      "max",
-      "min",
-      "get",
-      "run",
-      "put"
-    ],
-    literal: [
-      "DIGITAL_MESSAGE",
-      "FIRMATA_STRING",
-      "ANALOG_MESSAGE",
-      "REPORT_DIGITAL",
-      "REPORT_ANALOG",
-      "INPUT_PULLUP",
-      "SET_PIN_MODE",
-      "INTERNAL2V56",
-      "SYSTEM_RESET",
-      "LED_BUILTIN",
-      "INTERNAL1V1",
-      "SYSEX_START",
-      "INTERNAL",
-      "EXTERNAL",
-      "DEFAULT",
-      "OUTPUT",
-      "INPUT",
-      "HIGH",
-      "LOW"
-    ]
-  };
+const ARDUINO_KW = {
+keyword: [
+"boolean",
+"byte",
+"word",
+"String"
+],
+built_in: [
+"KeyboardController",
+"MouseController",
+"SoftwareSerial",
+"EthernetServer",
+"EthernetClient",
+"LiquidCrystal",
+"RobotControl",
+"GSMVoiceCall",
+"EthernetUDP",
+"EsploraTFT",
+"HttpClient",
+"RobotMotor",
+"WiFiClient",
+"GSMScanner",
+"FileSystem",
+"Scheduler",
+"GSMServer",
+"YunClient",
+"YunServer",
+"IPAddress",
+"GSMClient",
+"GSMModem",
+"Keyboard",
+"Ethernet",
+"Console",
+"GSMBand",
+"Esplora",
+"Stepper",
+"Process",
+"WiFiUDP",
+"GSM_SMS",
+"Mailbox",
+"USBHost",
+"Firmata",
+"PImage",
+"Client",
+"Server",
+"GSMPIN",
+"FileIO",
+"Bridge",
+"Serial",
+"EEPROM",
+"Stream",
+"Mouse",
+"Audio",
+"Servo",
+"File",
+"Task",
+"GPRS",
+"WiFi",
+"Wire",
+"TFT",
+"GSM",
+"SPI",
+"SD"
+],
+_hints: [
+"setup",
+"loop",
+"runShellCommandAsynchronously",
+"analogWriteResolution",
+"retrieveCallingNumber",
+"printFirmwareVersion",
+"analogReadResolution",
+"sendDigitalPortPair",
+"noListenOnLocalhost",
+"readJoystickButton",
+"setFirmwareVersion",
+"readJoystickSwitch",
+"scrollDisplayRight",
+"getVoiceCallStatus",
+"scrollDisplayLeft",
+"writeMicroseconds",
+"delayMicroseconds",
+"beginTransmission",
+"getSignalStrength",
+"runAsynchronously",
+"getAsynchronously",
+"listenOnLocalhost",
+"getCurrentCarrier",
+"readAccelerometer",
+"messageAvailable",
+"sendDigitalPorts",
+"lineFollowConfig",
+"countryNameWrite",
+"runShellCommand",
+"readStringUntil",
+"rewindDirectory",
+"readTemperature",
+"setClockDivider",
+"readLightSensor",
+"endTransmission",
+"analogReference",
+"detachInterrupt",
+"countryNameRead",
+"attachInterrupt",
+"encryptionType",
+"readBytesUntil",
+"robotNameWrite",
+"readMicrophone",
+"robotNameRead",
+"cityNameWrite",
+"userNameWrite",
+"readJoystickY",
+"readJoystickX",
+"mouseReleased",
+"openNextFile",
+"scanNetworks",
+"noInterrupts",
+"digitalWrite",
+"beginSpeaker",
+"mousePressed",
+"isActionDone",
+"mouseDragged",
+"displayLogos",
+"noAutoscroll",
+"addParameter",
+"remoteNumber",
+"getModifiers",
+"keyboardRead",
+"userNameRead",
+"waitContinue",
+"processInput",
+"parseCommand",
+"printVersion",
+"readNetworks",
+"writeMessage",
+"blinkVersion",
+"cityNameRead",
+"readMessage",
+"setDataMode",
+"parsePacket",
+"isListening",
+"setBitOrder",
+"beginPacket",
+"isDirectory",
+"motorsWrite",
+"drawCompass",
+"digitalRead",
+"clearScreen",
+"serialEvent",
+"rightToLeft",
+"setTextSize",
+"leftToRight",
+"requestFrom",
+"keyReleased",
+"compassRead",
+"analogWrite",
+"interrupts",
+"WiFiServer",
+"disconnect",
+"playMelody",
+"parseFloat",
+"autoscroll",
+"getPINUsed",
+"setPINUsed",
+"setTimeout",
+"sendAnalog",
+"readSlider",
+"analogRead",
+"beginWrite",
+"createChar",
+"motorsStop",
+"keyPressed",
+"tempoWrite",
+"readButton",
+"subnetMask",
+"debugPrint",
+"macAddress",
+"writeGreen",
+"randomSeed",
+"attachGPRS",
+"readString",
+"sendString",
+"remotePort",
+"releaseAll",
+"mouseMoved",
+"background",
+"getXChange",
+"getYChange",
+"answerCall",
+"getResult",
+"voiceCall",
+"endPacket",
+"constrain",
+"getSocket",
+"writeJSON",
+"getButton",
+"available",
+"connected",
+"findUntil",
+"readBytes",
+"exitValue",
+"readGreen",
+"writeBlue",
+"startLoop",
+"IPAddress",
+"isPressed",
+"sendSysex",
+"pauseMode",
+"gatewayIP",
+"setCursor",
+"getOemKey",
+"tuneWrite",
+"noDisplay",
+"loadImage",
+"switchPIN",
+"onRequest",
+"onReceive",
+"changePIN",
+"playFile",
+"noBuffer",
+"parseInt",
+"overflow",
+"checkPIN",
+"knobRead",
+"beginTFT",
+"bitClear",
+"updateIR",
+"bitWrite",
+"position",
+"writeRGB",
+"highByte",
+"writeRed",
+"setSpeed",
+"readBlue",
+"noStroke",
+"remoteIP",
+"transfer",
+"shutdown",
+"hangCall",
+"beginSMS",
+"endWrite",
+"attached",
+"maintain",
+"noCursor",
+"checkReg",
+"checkPUK",
+"shiftOut",
+"isValid",
+"shiftIn",
+"pulseIn",
+"connect",
+"println",
+"localIP",
+"pinMode",
+"getIMEI",
+"display",
+"noBlink",
+"process",
+"getBand",
+"running",
+"beginSD",
+"drawBMP",
+"lowByte",
+"setBand",
+"release",
+"bitRead",
+"prepare",
+"pointTo",
+"readRed",
+"setMode",
+"noFill",
+"remove",
+"listen",
+"stroke",
+"detach",
+"attach",
+"noTone",
+"exists",
+"buffer",
+"height",
+"bitSet",
+"circle",
+"config",
+"cursor",
+"random",
+"IRread",
+"setDNS",
+"endSMS",
+"getKey",
+"micros",
+"millis",
+"begin",
+"print",
+"write",
+"ready",
+"flush",
+"width",
+"isPIN",
+"blink",
+"clear",
+"press",
+"mkdir",
+"rmdir",
+"close",
+"point",
+"yield",
+"image",
+"BSSID",
+"click",
+"delay",
+"read",
+"text",
+"move",
+"peek",
+"beep",
+"rect",
+"line",
+"open",
+"seek",
+"fill",
+"size",
+"turn",
+"stop",
+"home",
+"find",
+"step",
+"tone",
+"sqrt",
+"RSSI",
+"SSID",
+"end",
+"bit",
+"tan",
+"cos",
+"sin",
+"pow",
+"map",
+"abs",
+"max",
+"min",
+"get",
+"run",
+"put"
+],
+literal: [
+"DIGITAL_MESSAGE",
+"FIRMATA_STRING",
+"ANALOG_MESSAGE",
+"REPORT_DIGITAL",
+"REPORT_ANALOG",
+"INPUT_PULLUP",
+"SET_PIN_MODE",
+"INTERNAL2V56",
+"SYSTEM_RESET",
+"LED_BUILTIN",
+"INTERNAL1V1",
+"SYSEX_START",
+"INTERNAL",
+"EXTERNAL",
+"DEFAULT",
+"OUTPUT",
+"INPUT",
+"HIGH",
+"LOW"
+]
+};
 
   const ARDUINO = cPlusPlus(hljs);
 
diff --git a/src/languages/cpp.js b/src/languages/cpp.js
index 2c1976e5..92bafa5b 100644
--- a/src/languages/cpp.js
+++ b/src/languages/cpp.js
@@ -107,99 +107,111 @@ export default function(hljs) {
   const FUNCTION_TITLE = regex.optional(NAMESPACE_RE) + hljs.IDENT_RE + '\\s*\\(';
 
   // https://en.cppreference.com/w/cpp/keyword
-  const RESERVED_KEYWORDS = [
-    'alignas',
-    'alignof',
-    'and',
-    'and_eq',
-    'asm',
-    'atomic_cancel',
-    'atomic_commit',
-    'atomic_noexcept',
-    'auto',
-    'bitand',
-    'bitor',
-    'break',
-    'case',
-    'catch',
-    'class',
-    'co_await',
-    'co_return',
-    'co_yield',
-    'compl',
-    'concept',
-    'const',
-    'const_cast|10',
-    'consteval',
-    'constexpr',
-    'constinit',
-    'continue',
-    'decltype',
-    'default',
-    'delete',
-    'do',
-    'dynamic_cast|10',
-    'else',
-    'enum',
-    'explicit',
-    'export',
-    'extern',
-    'false',
-    'final',
-    'for',
-    'friend',
-    'goto',
-    'if',
-    'import',
-    'inline',
-    'module',
-    'mutable',
-    'namespace',
-    'new',
-    'noexcept',
-    'not',
-    'not_eq',
-    'nullptr',
-    'operator',
-    'or',
-    'or_eq',
-    'override',
-    'private',
-    'protected',
-    'public',
-    'reflexpr',
-    'register',
-    'reinterpret_cast|10',
-    'requires',
-    'return',
-    'signed',
-    'sizeof',
-    'static',
-    'static_assert',
-    'static_cast|10',
-    'struct',
-    'switch',
-    'synchronized',
-    'template',
-    'this',
-    'thread_local',
-    'throw',
-    'transaction_safe',
-    'transaction_safe_dynamic',
-    'true',
-    'try',
-    'typedef',
-    'typeid',
-    'typename',
-    'union',
-    'unsigned',
-    'using',
-    'virtual',
-    'volatile',
-    'while',
-    'xor',
-    'xor_eq'
-  ];
+const RESERVED_KEYWORDS = [
+'alignas',
+'alignof',
+'and',
+'and_eq',
+'asm',
+'atomic_cancel',
+'atomic_commit',
+'atomic_noexcept',
+'auto',
+'bitand',
+'bitor',
+'break',
+'case',
+'catch',
+'class',
+'co_await',
+'co_return',
+'co_yield',
+'compl',
+'concept',
+'const',
+'const_cast|10',
+'consteval',
+'constexpr',
+'constinit',
+'continue',
+'decltype',
+'default',
+'delete',
+'do',
+'dynamic_cast|10',
+'else',
+'enum',
+'explicit',
+'export',
+'extern',
+'false',
+'final',
+'for',
+'friend',
+'goto',
+'if',
+'import',
+'inline',
+'module',
+'mutable',
+'namespace',
+'new',
+'noexcept',
+'not',
+'not_eq',
+'nullptr',
+'operator',
+'or',
+'or_eq',
+'override',
+'private',
+'protected',
+'public',
+'reflexpr',
+'register',
+'reinterpret_cast|10',
+'requires',
+'return',
+'signed',
+'sizeof',
+'static',
+'static_assert',
+'static_cast|10',
+'struct',
+'switch',
+'synchronized',
+'template',
+'this',
+'thread_local',
+'throw',
+'transaction_safe',
+'transaction_safe_dynamic',
+'true',
+'try',
+'typedef',
+'typeid',
+'typename',
+'union',
+'unsigned',
+'using',
+'virtual',
+'volatile',
+'while',
+'xor',
+'xor_eq',
+'bool',
+'char',
+'char16_t',
+'char32_t',
+'char8_t',
+'double',
+'float',
+'int',
+'long',
+'short',
+'void',
+'wchar_t'
+];
 
   // https://en.cppreference.com/w/cpp/keyword
   const RESERVED_TYPES = [
