{
    "1/1": {
        "src/languages/elixir.js": [
            {
                "SEARCH": [
                    "const ELIXIR_DEFAULT_CONTAINS = [",
                    "STRING,",
                    "UPCASE_SIGIL,",
                    "LOWERCASE_SIGIL,",
                    "hljs.HASH_COMMENT_MODE,",
                    "CLASS,",
                    "FUNCTION,",
                    "{",
                    "begin: '::'",
                    "},",
                    "{",
                    "className: 'symbol',",
                    "begin: ':(?![\\\\s:])',",
                    "contains: [",
                    "STRING,",
                    "{",
                    "begin: ELIXIR_METHOD_RE",
                    "}",
                    "],",
                    "relevance: 0",
                    "},",
                    "{",
                    "className: 'symbol',",
                    "begin: ELIXIR_IDENT_RE + ':(?!:)',",
                    "relevance: 0",
                    "},",
                    "NUMBER,",
                    "{",
                    "className: 'variable',",
                    "begin: '(\\\\$\\\\W)|((\\\\$|@@?)(\\\\w+))'",
                    "},",
                    "{",
                    "begin: '->'",
                    "},",
                    "{ // regexp container",
                    "begin: '(' + hljs.RE_STARTERS_RE + ')\\\\s*',",
                    "contains: [",
                    "hljs.HASH_COMMENT_MODE,",
                    "{",
                    "// to prevent false regex triggers for the division function:",
                    "// /:",
                    "begin: /\\/: (?=\\d+\\s*[,\\\\]])/,",
                    "relevance: 0,",
                    "contains: [NUMBER]",
                    "},",
                    "{",
                    "className: 'regexp',",
                    "illegal: '\\\\n',",
                    "contains: [",
                    "hljs.BACKSLASH_ESCAPE,",
                    "SUBST",
                    "],",
                    "variants: [",
                    "{",
                    "begin: '/',",
                    "end: '/[a-z]*'",
                    "},",
                    "{",
                    "begin: '%r\\\\[',",
                    "end: '\\\\][a-z]*'",
                    "}",
                    "]",
                    "}",
                    "],",
                    "relevance: 0",
                    "}",
                    "];"
                ],
                "REPLACE": [
                    "const ELIXIR_DEFAULT_CONTAINS = [",
                    "STRING,",
                    "UPCASE_SIGIL,",
                    "LOWERCASE_SIGIL,",
                    "hljs.HASH_COMMENT_MODE,",
                    "CLASS,",
                    "FUNCTION,",
                    "{",
                    "begin: '::'",
                    "},",
                    "{",
                    "className: 'symbol',",
                    "begin: ':(?![\\\\s:])',",
                    "contains: [",
                    "STRING,",
                    "{",
                    "begin: ELIXIR_METHOD_RE",
                    "}",
                    "],",
                    "relevance: 0",
                    "},",
                    "{",
                    "className: 'symbol',",
                    "begin: ELIXIR_IDENT_RE + ':(?!:)',",
                    "relevance: 0",
                    "},",
                    "NUMBER,",
                    "{",
                    "className: 'variable',",
                    "begin: '(\\\\$\\\\W)|((\\\\$|@@?)(\\\\w+))'",
                    "},",
                    "{",
                    "begin: '->'",
                    "},",
                    "{",
                    "className: 'function_capture',",
                    "begin: '&' + ELIXIR_IDENT_RE + '/\\\\d+',",
                    "relevance: 10",
                    "},",
                    "{ // regexp container",
                    "begin: '(' + hljs.RE_STARTERS_RE + ')\\\\s*',",
                    "contains: [",
                    "hljs.HASH_COMMENT_MODE,",
                    "{",
                    "// to prevent false regex triggers for the division function:",
                    "// /:",
                    "begin: /\\/: (?=\\d+\\s*[,\\\\]])/,",
                    "relevance: 0,",
                    "contains: [NUMBER]",
                    "},",
                    "{",
                    "className: 'regexp',",
                    "illegal: '\\\\n',",
                    "contains: [",
                    "hljs.BACKSLASH_ESCAPE,",
                    "SUBST",
                    "],",
                    "variants: [",
                    "{",
                    "begin: '/',",
                    "end: '/[a-z]*'",
                    "},",
                    "{",
                    "begin: '%r\\\\[',",
                    "end: '\\\\][a-z]*'",
                    "}",
                    "]",
                    "}",
                    "],",
                    "relevance: 0",
                    "}",
                    "];"
                ]
            }
        ]
    },
    "1.1/1": {
        "src/languages/elixir.js": [
            {
                "SEARCH": [
                    "const ELIXIR_DEFAULT_CONTAINS = [",
                    "STRING,",
                    "UPCASE_SIGIL,",
                    "LOWERCASE_SIGIL,",
                    "hljs.HASH_COMMENT_MODE,",
                    "CLASS,",
                    "FUNCTION,",
                    "{",
                    "begin: '::'",
                    "},",
                    "{",
                    "className: 'symbol',",
                    "begin: ':(?![\\\\s:])',",
                    "contains: [",
                    "STRING,",
                    "{",
                    "begin: ELIXIR_METHOD_RE",
                    "}",
                    "],",
                    "relevance: 0",
                    "},",
                    "{",
                    "className: 'symbol',",
                    "begin: ELIXIR_IDENT_RE + ':(?!:)',",
                    "relevance: 0",
                    "},",
                    "NUMBER,",
                    "{",
                    "className: 'variable',",
                    "begin: '(\\\\$\\\\W)|((\\\\$|@@?)(\\\\w+))'",
                    "},",
                    "{",
                    "begin: '->'",
                    "},",
                    "{ // regexp container",
                    "begin: '(' + hljs.RE_STARTERS_RE + ')\\\\s*',",
                    "contains: [",
                    "hljs.HASH_COMMENT_MODE,",
                    "{",
                    "// to prevent false regex triggers for the division function:",
                    "// /:\n          begin: /\\/: (?=\\d+\\s*[,\\\\]])/,",
                    "relevance: 0,",
                    "contains: [NUMBER]",
                    "},",
                    "{",
                    "className: 'regexp',",
                    "illegal: '\\\\n',",
                    "contains: [",
                    "hljs.BACKSLASH_ESCAPE,",
                    "SUBST",
                    "],",
                    "variants: [",
                    "{",
                    "begin: '/',",
                    "end: '/[a-z]*'",
                    "},",
                    "{",
                    "begin: '%r\\\\[',",
                    "end: '\\\\][a-z]*'",
                    "}",
                    "]",
                    "}",
                    "],",
                    "relevance: 0",
                    "}",
                    "];"
                ],
                "REPLACE": [
                    "const ELIXIR_DEFAULT_CONTAINS = [",
                    "STRING,",
                    "UPCASE_SIGIL,",
                    "LOWERCASE_SIGIL,",
                    "hljs.HASH_COMMENT_MODE,",
                    "CLASS,",
                    "FUNCTION,",
                    "{",
                    "begin: '::'",
                    "},",
                    "{",
                    "className: 'symbol',",
                    "begin: ':(?![\\\\s:])',",
                    "contains: [",
                    "STRING,",
                    "{",
                    "begin: ELIXIR_METHOD_RE",
                    "}",
                    "],",
                    "relevance: 0",
                    "},",
                    "{",
                    "className: 'symbol',",
                    "begin: ELIXIR_IDENT_RE + ':(?!:)',",
                    "relevance: 0",
                    "},",
                    "NUMBER,",
                    "{",
                    "className: 'variable',",
                    "begin: '(\\\\$\\\\W)|((\\\\$|@@?)(\\\\w+))'",
                    "},",
                    "{",
                    "begin: '->'",
                    "},",
                    "{",
                    "className: 'function_capture',",
                    "begin: '&' + ELIXIR_IDENT_RE + '/\\\\d+',",
                    "relevance: 10",
                    "},",
                    "{ // regexp container",
                    "begin: '(' + hljs.RE_STARTERS_RE + ')\\\\s*',",
                    "contains: [",
                    "hljs.HASH_COMMENT_MODE,",
                    "{",
                    "// to prevent false regex triggers for the division function:",
                    "// /:\n          begin: /\\/: (?=\\d+\\s*[,\\\\]])/,",
                    "relevance: 0,",
                    "contains: [NUMBER]",
                    "},",
                    "{",
                    "className: 'regexp',",
                    "illegal: '\\\\n',",
                    "contains: [",
                    "hljs.BACKSLASH_ESCAPE,",
                    "SUBST",
                    "],",
                    "variants: [",
                    "{",
                    "begin: '/',",
                    "end: '/[a-z]*'",
                    "},",
                    "{",
                    "begin: '%r\\\\[',",
                    "end: '\\\\][a-z]*'",
                    "}",
                    "]",
                    "}",
                    "],",
                    "relevance: 0",
                    "}",
                    "];"
                ]
            }
        ]
    },
    "1.2/1": {
        "src/languages/elixir.js": [
            {
                "SEARCH": [
                    "const ELIXIR_DEFAULT_CONTAINS = [",
                    "STRING,",
                    "UPCASE_SIGIL,",
                    "LOWERCASE_SIGIL,",
                    "hljs.HASH_COMMENT_MODE,",
                    "CLASS,",
                    "FUNCTION,",
                    "{",
                    "begin: '::'",
                    "},",
                    "{",
                    "className: 'symbol',",
                    "begin: ':(?![\\s:])',",
                    "contains: [",
                    "STRING,",
                    "{",
                    "begin: ELIXIR_METHOD_RE",
                    "}",
                    "],",
                    "relevance: 0",
                    "},",
                    "{",
                    "className: 'symbol',",
                    "begin: ELIXIR_IDENT_RE + ':(?!:)',",
                    "relevance: 0",
                    "},",
                    "NUMBER,",
                    "{",
                    "className: 'variable',",
                    "begin: '(\\$\\W)|((\\$|@@?)(\\w+))'",
                    "},",
                    "{",
                    "begin: '->'",
                    "},",
                    "{ // regexp container",
                    "begin: '(' + hljs.RE_STARTERS_RE + ')\\s*',",
                    "contains: [",
                    "hljs.HASH_COMMENT_MODE,",
                    "{",
                    "// to prevent false regex triggers for the division function:",
                    "// /:",
                    "begin: /\\/: (?=\\d+\\s*[,\\]])/,",
                    "relevance: 0,",
                    "contains: [NUMBER]",
                    "},",
                    "{",
                    "className: 'regexp',",
                    "illegal: '\\n',",
                    "contains: [",
                    "hljs.BACKSLASH_ESCAPE,",
                    "SUBST",
                    "],",
                    "variants: [",
                    "{",
                    "begin: '/',",
                    "end: '/[a-z]*'",
                    "},",
                    "{",
                    "begin: '%r\\[',",
                    "end: '\\][a-z]*'",
                    "}",
                    "]",
                    "}",
                    "],",
                    "relevance: 0",
                    "}",
                    "];"
                ],
                "REPLACE": [
                    "const ELIXIR_DEFAULT_CONTAINS = [",
                    "STRING,",
                    "UPCASE_SIGIL,",
                    "LOWERCASE_SIGIL,",
                    "hljs.HASH_COMMENT_MODE,",
                    "CLASS,",
                    "FUNCTION,",
                    "{",
                    "begin: '::'",
                    "},",
                    "{",
                    "className: 'symbol',",
                    "begin: ':(?![\\s:])',",
                    "contains: [",
                    "STRING,",
                    "{",
                    "begin: ELIXIR_METHOD_RE",
                    "}",
                    "],",
                    "relevance: 0",
                    "},",
                    "{",
                    "className: 'symbol',",
                    "begin: ELIXIR_IDENT_RE + ':(?!:)',",
                    "relevance: 0",
                    "},",
                    "NUMBER,",
                    "{",
                    "className: 'variable',",
                    "begin: '(\\$\\W)|((\\$|@@?)(\\w+))'",
                    "},",
                    "{",
                    "begin: '->'",
                    "},",
                    "{",
                    "className: 'function_capture',",
                    "begin: '&' + ELIXIR_IDENT_RE + '/\\d+',",
                    "relevance: 10",
                    "},",
                    "{ // regexp container",
                    "begin: '(' + hljs.RE_STARTERS_RE + ')\\s*',",
                    "contains: [",
                    "hljs.HASH_COMMENT_MODE,",
                    "{",
                    "// to prevent false regex triggers for the division function:",
                    "// /:",
                    "begin: /\\/: (?=\\d+\\s*[,\\]])/,",
                    "relevance: 0,",
                    "contains: [NUMBER]",
                    "},",
                    "{",
                    "className: 'regexp',",
                    "illegal: '\\n',",
                    "contains: [",
                    "hljs.BACKSLASH_ESCAPE,",
                    "SUBST",
                    "],",
                    "variants: [",
                    "{",
                    "begin: '/',",
                    "end: '/[a-z]*'",
                    "},",
                    "{",
                    "begin: '%r\\[',",
                    "end: '\\][a-z]*'",
                    "}",
                    "]",
                    "}",
                    "],",
                    "relevance: 0",
                    "}",
                    "];"
                ]
            }
        ]
    },
    "1.3/1": {
        "src/languages/elixir.js": [
            {
                "SEARCH": [
                    "const ELIXIR_DEFAULT_CONTAINS = [",
                    "STRING,",
                    "UPCASE_SIGIL,",
                    "LOWERCASE_SIGIL,",
                    "hljs.HASH_COMMENT_MODE,",
                    "CLASS,",
                    "FUNCTION,",
                    "{",
                    "begin: '::'",
                    "},",
                    "{",
                    "className: 'symbol',",
                    "begin: ':(?![\\\\s:])',",
                    "contains: [",
                    "STRING,",
                    "{",
                    "begin: ELIXIR_METHOD_RE",
                    "}",
                    "],",
                    "relevance: 0",
                    "},",
                    "{",
                    "className: 'symbol',",
                    "begin: ELIXIR_IDENT_RE + ':(?!:)',",
                    "relevance: 0",
                    "},",
                    "NUMBER,",
                    "{",
                    "className: 'variable',",
                    "begin: '(\\\\$\\\\W)|((\\\\$|@@?)(\\\\w+))'",
                    "},",
                    "{",
                    "begin: '->'",
                    "},",
                    "{ // regexp container",
                    "begin: '(' + hljs.RE_STARTERS_RE + ')\\\\s*',",
                    "contains: [",
                    "hljs.HASH_COMMENT_MODE,",
                    "{",
                    "// to prevent false regex triggers for the division function:",
                    "// /:",
                    "begin: /\\/: (?=\\d+\\s*[,\\\\]])/,",
                    "relevance: 0,",
                    "contains: [NUMBER]",
                    "},",
                    "{",
                    "className: 'regexp',",
                    "illegal: '\\\\n',",
                    "contains: [",
                    "hljs.BACKSLASH_ESCAPE,",
                    "SUBST",
                    "],",
                    "variants: [",
                    "{",
                    "begin: '/',",
                    "end: '/[a-z]*'",
                    "},",
                    "{",
                    "begin: '%r\\\\[',",
                    "end: '\\\\][a-z]*'",
                    "}",
                    "]",
                    "}",
                    "],",
                    "relevance: 0",
                    "}",
                    "];"
                ],
                "REPLACE": [
                    "const ELIXIR_DEFAULT_CONTAINS = [",
                    "STRING,",
                    "UPCASE_SIGIL,",
                    "LOWERCASE_SIGIL,",
                    "hljs.HASH_COMMENT_MODE,",
                    "CLASS,",
                    "FUNCTION,",
                    "{",
                    "begin: '::'",
                    "},",
                    "{",
                    "className: 'symbol',",
                    "begin: ':(?![\\\\s:])',",
                    "contains: [",
                    "STRING,",
                    "{",
                    "begin: ELIXIR_METHOD_RE",
                    "}",
                    "],",
                    "relevance: 0",
                    "},",
                    "{",
                    "className: 'symbol',",
                    "begin: ELIXIR_IDENT_RE + ':(?!:)',",
                    "relevance: 0",
                    "},",
                    "NUMBER,",
                    "{",
                    "className: 'variable',",
                    "begin: '(\\\\$\\\\W)|((\\\\$|@@?)(\\\\w+))'",
                    "},",
                    "{",
                    "begin: '->'",
                    "},",
                    "{",
                    "className: 'function_capture',",
                    "begin: '&' + ELIXIR_IDENT_RE + '/\\\\d+',",
                    "relevance: 10",
                    "},",
                    "{ // regexp container",
                    "begin: '(' + hljs.RE_STARTERS_RE + ')\\\\s*',",
                    "contains: [",
                    "hljs.HASH_COMMENT_MODE,",
                    "{",
                    "// to prevent false regex triggers for the division function:",
                    "// /:",
                    "begin: /\\/: (?=\\d+\\s*[,\\\\]])/,",
                    "relevance: 0,",
                    "contains: [NUMBER]",
                    "},",
                    "{",
                    "className: 'regexp',",
                    "illegal: '\\\\n',",
                    "contains: [",
                    "hljs.BACKSLASH_ESCAPE,",
                    "SUBST",
                    "],",
                    "variants: [",
                    "{",
                    "begin: '/',",
                    "end: '/[a-z]*'",
                    "},",
                    "{",
                    "begin: '%r\\\\[',",
                    "end: '\\\\][a-z]*'",
                    "}",
                    "]",
                    "}",
                    "],",
                    "relevance: 0",
                    "}",
                    "];"
                ]
            }
        ]
    },
    "1.4/1": {
        "src/languages/elixir.js": [
            {
                "SEARCH": [
                    "const ELIXIR_DEFAULT_CONTAINS = [",
                    "STRING,",
                    "UPCASE_SIGIL,",
                    "LOWERCASE_SIGIL,",
                    "hljs.HASH_COMMENT_MODE,",
                    "CLASS,",
                    "FUNCTION,",
                    "{",
                    "begin: '::'",
                    "},",
                    "{",
                    "className: 'symbol',",
                    "begin: ':(?![\\s:])',",
                    "contains: [",
                    "STRING,",
                    "{",
                    "begin: ELIXIR_METHOD_RE",
                    "}",
                    "],",
                    "relevance: 0",
                    "},",
                    "{",
                    "className: 'symbol',",
                    "begin: ELIXIR_IDENT_RE + ':(?!:)',",
                    "relevance: 0",
                    "},",
                    "NUMBER,",
                    "{",
                    "className: 'variable',",
                    "begin: '(\\$\\W)|((\\$|@@?)(\\w+))'",
                    "},",
                    "{",
                    "begin: '->'",
                    "},",
                    "{ // regexp container",
                    "begin: '(' + hljs.RE_STARTERS_RE + ')\\s*',",
                    "contains: [",
                    "hljs.HASH_COMMENT_MODE,",
                    "{",
                    "// to prevent false regex triggers for the division function:",
                    "// /:",
                    "begin: /\\/: (?=\\d+\\s*[,\\]])/,",
                    "relevance: 0,",
                    "contains: [NUMBER]",
                    "},",
                    "{",
                    "className: 'regexp',",
                    "illegal: '\\n',",
                    "contains: [",
                    "hljs.BACKSLASH_ESCAPE,",
                    "SUBST",
                    "],",
                    "variants: [",
                    "{",
                    "begin: '/',",
                    "end: '/[a-z]*'",
                    "},",
                    "{",
                    "begin: '%r\\[',",
                    "end: '\\][a-z]*'",
                    "}",
                    "]",
                    "}",
                    "],",
                    "relevance: 0",
                    "}",
                    "];"
                ],
                "REPLACE": [
                    "const ELIXIR_DEFAULT_CONTAINS = [",
                    "STRING,",
                    "UPCASE_SIGIL,",
                    "LOWERCASE_SIGIL,",
                    "hljs.HASH_COMMENT_MODE,",
                    "CLASS,",
                    "FUNCTION,",
                    "{",
                    "begin: '::'",
                    "},",
                    "{",
                    "className: 'symbol',",
                    "begin: ':(?![\\s:])',",
                    "contains: [",
                    "STRING,",
                    "{",
                    "begin: ELIXIR_METHOD_RE",
                    "}",
                    "],",
                    "relevance: 0",
                    "},",
                    "{",
                    "className: 'symbol',",
                    "begin: ELIXIR_IDENT_RE + ':(?!:)',",
                    "relevance: 0",
                    "},",
                    "NUMBER,",
                    "{",
                    "className: 'variable',",
                    "begin: '(\\$\\W)|((\\$|@@?)(\\w+))'",
                    "},",
                    "{",
                    "begin: '->'",
                    "},",
                    "{",
                    "className: 'function_capture',",
                    "begin: '&' + ELIXIR_IDENT_RE + '/\\d+',",
                    "relevance: 10",
                    "},",
                    "{ // regexp container",
                    "begin: '(' + hljs.RE_STARTERS_RE + ')\\s*',",
                    "contains: [",
                    "hljs.HASH_COMMENT_MODE,",
                    "{",
                    "// to prevent false regex triggers for the division function:",
                    "// /:",
                    "begin: /\\/: (?=\\d+\\s*[,\\]])/,",
                    "relevance: 0,",
                    "contains: [NUMBER]",
                    "},",
                    "{",
                    "className: 'regexp',",
                    "illegal: '\\n',",
                    "contains: [",
                    "hljs.BACKSLASH_ESCAPE,",
                    "SUBST",
                    "],",
                    "variants: [",
                    "{",
                    "begin: '/',",
                    "end: '/[a-z]*'",
                    "},",
                    "{",
                    "begin: '%r\\[',",
                    "end: '\\][a-z]*'",
                    "}",
                    "]",
                    "}",
                    "],",
                    "relevance: 0",
                    "}",
                    "];"
                ]
            }
        ]
    }
}