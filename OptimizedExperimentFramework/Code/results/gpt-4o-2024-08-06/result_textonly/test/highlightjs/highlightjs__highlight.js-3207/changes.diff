diff --git a/src/languages/elixir.js b/src/languages/elixir.js
index 0a10aacb..d5237c6e 100644
--- a/src/languages/elixir.js
+++ b/src/languages/elixir.js
@@ -180,73 +180,78 @@ export default function(hljs) {
     beginKeywords: 'defimpl defmodule defprotocol defrecord',
     end: /\bdo\b|$|;/
   });
-  const ELIXIR_DEFAULT_CONTAINS = [
-    STRING,
-    UPCASE_SIGIL,
-    LOWERCASE_SIGIL,
-    hljs.HASH_COMMENT_MODE,
-    CLASS,
-    FUNCTION,
-    {
-      begin: '::'
-    },
-    {
-      className: 'symbol',
-      begin: ':(?![\\s:])',
-      contains: [
-        STRING,
-        {
-          begin: ELIXIR_METHOD_RE
-        }
-      ],
-      relevance: 0
-    },
-    {
-      className: 'symbol',
-      begin: ELIXIR_IDENT_RE + ':(?!:)',
-      relevance: 0
-    },
-    NUMBER,
-    {
-      className: 'variable',
-      begin: '(\\$\\W)|((\\$|@@?)(\\w+))'
-    },
-    {
-      begin: '->'
-    },
-    { // regexp container
-      begin: '(' + hljs.RE_STARTERS_RE + ')\\s*',
-      contains: [
-        hljs.HASH_COMMENT_MODE,
-        {
-          // to prevent false regex triggers for the division function:
-          // /:
-          begin: /\/: (?=\d+\s*[,\]])/,
-          relevance: 0,
-          contains: [NUMBER]
-        },
-        {
-          className: 'regexp',
-          illegal: '\\n',
-          contains: [
-            hljs.BACKSLASH_ESCAPE,
-            SUBST
-          ],
-          variants: [
-            {
-              begin: '/',
-              end: '/[a-z]*'
-            },
-            {
-              begin: '%r\\[',
-              end: '\\][a-z]*'
-            }
-          ]
-        }
-      ],
-      relevance: 0
-    }
-  ];
+const ELIXIR_DEFAULT_CONTAINS = [
+STRING,
+UPCASE_SIGIL,
+LOWERCASE_SIGIL,
+hljs.HASH_COMMENT_MODE,
+CLASS,
+FUNCTION,
+{
+begin: '::'
+},
+{
+className: 'symbol',
+begin: ':(?![\\s:])',
+contains: [
+STRING,
+{
+begin: ELIXIR_METHOD_RE
+}
+],
+relevance: 0
+},
+{
+className: 'symbol',
+begin: ELIXIR_IDENT_RE + ':(?!:)',
+relevance: 0
+},
+NUMBER,
+{
+className: 'variable',
+begin: '(\\$\\W)|((\\$|@@?)(\\w+))'
+},
+{
+begin: '->'
+},
+{
+className: 'function_capture',
+begin: '&' + ELIXIR_IDENT_RE + '/\\d+',
+relevance: 10
+},
+{ // regexp container
+begin: '(' + hljs.RE_STARTERS_RE + ')\\s*',
+contains: [
+hljs.HASH_COMMENT_MODE,
+{
+// to prevent false regex triggers for the division function:
+// /:
+begin: /\/: (?=\d+\s*[,\\]])/,
+relevance: 0,
+contains: [NUMBER]
+},
+{
+className: 'regexp',
+illegal: '\\n',
+contains: [
+hljs.BACKSLASH_ESCAPE,
+SUBST
+],
+variants: [
+{
+begin: '/',
+end: '/[a-z]*'
+},
+{
+begin: '%r\\[',
+end: '\\][a-z]*'
+}
+]
+}
+],
+relevance: 0
+}
+];
   SUBST.contains = ELIXIR_DEFAULT_CONTAINS;
 
   return {
