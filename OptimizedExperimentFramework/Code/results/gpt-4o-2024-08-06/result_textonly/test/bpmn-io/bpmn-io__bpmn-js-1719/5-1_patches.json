{
    "1/1": "To address the bug described in the report, we need to ensure that labels inside a collapsed subprocess are hidden. The bug report indicates that labels remain visible when a subprocess is collapsed, which is not the expected behavior. The provided code snippets suggest that the issue might be related to how labels are managed during the collapse and expansion of subprocesses.\n\n### Bug Scenario Analysis\nThe bug scenario involves a subprocess with start, task, and end events, each having labels. When the subprocess is collapsed, these labels should be hidden, but they remain visible. The provided GIF animation likely demonstrates this issue, showing the labels moving outside the subprocess boundary when collapsed.\n\n### Bug Root Cause\nThe root cause of the issue seems to be in the `ToggleElementCollapseBehaviour.js` file, where the collapse and expansion of subprocesses are handled. The code does not explicitly hide labels when a subprocess is collapsed. The `hideEmptyLabels` function is used to hide labels without names, but it does not address labels with names.\n\n### Bug Location and Fix\nWe need to modify the `ToggleElementCollapseBehaviour.js` file to ensure that all labels within a subprocess are hidden when it is collapsed. We can achieve this by adding logic to hide all labels, not just empty ones, when a subprocess is collapsed.\n\n### Patches\n\n```javascript\n### lib/features/modeling/behavior/ToggleElementCollapseBehaviour.js\n<<<<<<< SEARCH\n    if (!shape.collapsed) {\n\n      // all children got made visible through djs, hide empty labels\n      hideEmptyLabels(shape.children);\n\n      // remove collapsed marker\n      getDi(shape).isExpanded = true;\n    } else {\n\n      // place collapsed marker\n      getDi(shape).isExpanded = false;\n    }\n=======\n    if (!shape.collapsed) {\n\n      // all children got made visible through djs, hide empty labels\n      hideEmptyLabels(shape.children);\n\n      // remove collapsed marker\n      getDi(shape).isExpanded = true;\n    } else {\n\n      // hide all labels when collapsed\n      shape.children.forEach(function(child) {\n        if (child.type === 'label') {\n          child.hidden = true;\n        }\n      });\n\n      // place collapsed marker\n      getDi(shape).isExpanded = false;\n    }\n>>>>>>> REPLACE\n```\n\nThis patch ensures that when a subprocess is collapsed, all labels within it are hidden, regardless of whether they have a name or not. This should resolve the issue described in the bug report."
}