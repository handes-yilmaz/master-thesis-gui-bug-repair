diff --git a/lib/rules/implicit-arrow-linebreak.js b/lib/rules/implicit-arrow-linebreak.js
index ad0d70da6..3707abd2e 100644
--- a/lib/rules/implicit-arrow-linebreak.js
+++ b/lib/rules/implicit-arrow-linebreak.js
@@ -161,14 +161,19 @@ module.exports = {
                     ) {
 
                         // If any arrow functions follow, return the necessary parens fixes.
-                        if (sourceCode.getTokenAfter(arrowToken, isArrowToken) && arrowBody.parent.parent.type !== "VariableDeclarator") {
-                            return addParentheses(fixer, arrowToken, arrowBody);
-                        }
-
-                        // If any arrow functions precede, the necessary fixes have already been returned, so return null.
-                        if (sourceCode.getTokenBefore(arrowToken, isArrowToken) && arrowBody.parent.parent.type !== "VariableDeclarator") {
-                            return null;
-                        }
+                    if (sourceCode.getTokenAfter(arrowToken, isArrowToken) && arrowBody.parent.parent.type !== "VariableDeclarator") {
+                        return addParentheses(fixer, arrowToken, arrowBody);
+                    }
+
+                    // Ensure comments are correctly placed before the arrow function body
+                    const firstToken = findFirstToken(node);
+                    const commentText = formatComments(comments, firstToken.loc.start.column);
+                    const commentBeforeExpression = fixer.insertTextBeforeRange(
+                        firstToken.range,
+                        commentText
+                    );
+
+                    return [placeBesides, commentBeforeExpression];
                     }
 
                     const firstToken = findFirstToken(node);
