{
    "1/1": "### Bug Scenario Description and Root Cause\n\nThe bug scenario involves a BPMN editor where labels of elements inside a subprocess remain visible even after the subprocess is collapsed. The expected behavior is for these labels to be hidden when the subprocess is collapsed. The issue is observed when following specific steps to create and modify a subprocess, as shown in the provided GIF.\n\n**Root Cause:**\nThe root cause of the issue is likely related to the handling of labels when a subprocess is toggled between expanded and collapsed states. The current implementation does not properly hide the labels of elements inside the subprocess when it is collapsed.\n\n### Bug Location and Analysis\n\nThe relevant code snippets are in the following files:\n\n1. **`lib/features/modeling/behavior/LabelBehavior.js`**: This file manages label creation and updates. It should ensure labels are hidden when their parent subprocess is collapsed.\n\n2. **`lib/features/drilldown/DrilldownOverlayBehavior.js`**: This file handles overlays for subprocesses but is not directly related to label visibility.\n\n3. **`lib/features/modeling/behavior/SubProcessPlaneBehavior.js`**: This file manages the behavior of subprocess planes, including toggling between expanded and collapsed states. It should ensure that labels are hidden when a subprocess is collapsed.\n\n### Patches\n\nTo fix the issue, we need to ensure that labels are hidden when a subprocess is collapsed. The changes will be made in `SubProcessPlaneBehavior.js` to handle label visibility during the toggle collapse operation.\n\n```javascript\n### lib/features/modeling/behavior/SubProcessPlaneBehavior.js\n<<<<<<< SEARCH\n  // create/remove plane for the subprocess\n  this.executed('shape.toggleCollapse', LOW_PRIORITY, function(context) {\n    var shape = context.shape;\n\n    if (!is(shape, 'bpmn:SubProcess')) {\n      return;\n    }\n\n    if (!isExpanded(shape)) {\n      createRoot(context);\n      self._showRecursively(shape.children);\n    } else {\n      removeRoot(context);\n    }\n\n  }, true);\n=======\n  // create/remove plane for the subprocess\n  this.executed('shape.toggleCollapse', LOW_PRIORITY, function(context) {\n    var shape = context.shape;\n\n    if (!is(shape, 'bpmn:SubProcess')) {\n      return;\n    }\n\n    if (!isExpanded(shape)) {\n      createRoot(context);\n      self._showRecursively(shape.children, true); // Hide labels when collapsed\n    } else {\n      removeRoot(context);\n      self._showRecursively(shape.children, false); // Show labels when expanded\n    }\n\n  }, true);\n>>>>>>> REPLACE\n```\n\nThis patch modifies the `shape.toggleCollapse` function to hide labels when a subprocess is collapsed and show them when it is expanded. The `_showRecursively` function is used to set the `hidden` property of child elements, including labels, based on the expanded state of the subprocess."
}