{
    "1/1": "### Bug Scenario Images and Root Cause\n\nThe images show the process of morphing a call activity into an expanded sub-process. The issue is that the expanded sub-process does not automatically include a start event, which is expected behavior for better user experience and consistency.\n\n### Bug Root Cause\n\nThe root cause is likely in the logic that handles the morphing of elements. Specifically, when a call activity is morphed into an expanded sub-process, the code does not automatically add a start event to the new sub-process.\n\n### Bug Location and Fix\n\nThe relevant code is in `SubProcessStartEventBehavior.js`, where the logic for adding a start event to a new expanded sub-process is implemented. However, it currently only triggers when morphing from a task, not a call activity.\n\n### Patches\n\nTo fix the issue, we need to modify the condition to include call activities when morphing to an expanded sub-process.\n\n```javascript\n### lib/features/modeling/behavior/SubProcessStartEventBehavior.js\n<<<<<<< SEARCH\n    if (\n      !is(newShape, 'bpmn:SubProcess') ||\n      !is(oldShape, 'bpmn:Task') ||\n      !isExpanded(newShape)\n    ) {\n      return;\n    }\n=======\n    if (\n      !is(newShape, 'bpmn:SubProcess') ||\n      (!is(oldShape, 'bpmn:Task') && !is(oldShape, 'bpmn:CallActivity')) ||\n      !isExpanded(newShape)\n    ) {\n      return;\n    }\n>>>>>>> REPLACE\n```\n\nThis change ensures that when morphing from a call activity to an expanded sub-process, a start event is automatically added, aligning with the expected behavior."
}