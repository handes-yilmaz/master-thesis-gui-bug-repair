{
    "1/1": "To address the issue with the shell session tokenizer not working correctly, let's analyze the provided information and code snippets.\n\n### Bug Scenario Analysis\n\n1. **Bug Description**: The shell session language in Prism is not tokenizing correctly in versions 1.22 and 1.23. The issue seems to be related to changes in the download generation code.\n\n2. **Images Analysis**:\n   - The first image shows the expected output with proper syntax highlighting.\n   - The second image shows the incorrect output where the entire command and output are treated as a single token.\n   - The DOM tree image indicates that the tokenizer is not splitting the command and output correctly.\n\n3. **Root Cause**: The issue likely lies in the regular expression patterns used to tokenize the shell session. The patterns may not be correctly identifying the boundaries between commands and outputs.\n\n### Bug Code Snippets Analysis\n\nThe relevant code is in `components/prism-shell-session.js`. The key part of the code is the regular expression used to define the `command` and `output` patterns.\n\n### Patch Generation\n\nLet's modify the regular expression to correctly tokenize the shell session.\n\n```javascript\n### components/prism-shell-session.js\n<<<<<<< SEARCH\n\\t\\t\\'output\\': /.(?:.*(?:[\\\\r\\\\n]|.$))*/\n=======\n\\t\\t\\'output\\': {\n\\t\\t\\tpattern: /(^|\\\\r?\\\\n)(?![$#])(?:[^\\\\r\\\\n]*)/,\n\\t\\t\\tlookbehind: true\n\\t\\t}\n>>>>>>> REPLACE\n```\n\n### Explanation\n\n- **Original Code**: The `output` pattern was too broad, capturing everything after the command prompt.\n- **Modified Code**: The new pattern uses a lookbehind to ensure that the output is correctly identified as lines not starting with the shell prompt (`$` or `#`). This should help in distinguishing between commands and their outputs, allowing for proper syntax highlighting."
}