{
    "bug_classes": {
        "1": {
            "class_name": "namespace (not found) ",
            "file_path": "components/prism-java.js",
            "class_details": [
                {
                    "name": "namespace",
                    "start_line": 1,
                    "end_line": 63
                }
            ],
            "class_code": [
                "(function (Prism) {",
                "",
                "\tvar keywords = /\\b(?:abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|exports|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|module|native|new|null|open|opens|package|private|protected|provides|public|record|requires|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|to|transient|transitive|try|uses|var|void|volatile|while|with|yield)\\b/;",
                "",
                "\t// based on the java naming conventions",
                "\tvar className = /\\b[A-Z](?:\\w*[a-z]\\w*)?\\b/;",
                "",
                "\tPrism.languages.java = Prism.languages.extend('clike', {",
                "\t\t'class-name': [",
                "\t\t\tclassName,",
                "",
                "\t\t\t// variables and parameters",
                "\t\t\t// this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)",
                "\t\t\t/\\b[A-Z]\\w*(?=\\s+\\w+\\s*[;,=())])/",
                "\t\t],",
                "\t\t'keyword': keywords,",
                "\t\t'function': [",
                "\t\t\tPrism.languages.clike.function,",
                "\t\t\t{",
                "\t\t\t\tpattern: /(\\:\\:)[a-z_]\\w*/,",
                "\t\t\t\tlookbehind: true",
                "\t\t\t}",
                "\t\t],",
                "\t\t'number': /\\b0b[01][01_]*L?\\b|\\b0x[\\da-f_]*\\.?[\\da-f_p+-]+\\b|(?:\\b\\d[\\d_]*\\.?[\\d_]*|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfl]?/i,",
                "\t\t'operator': {",
                "\t\t\tpattern: /(^|[^.])(?:<<=?|>>>?=?|->|--|\\+\\+|&&|\\|\\||::|[?:~]|[-+*/%&|^!=<>]=?)/m,",
                "\t\t\tlookbehind: true",
                "\t\t}",
                "\t});",
                "",
                "\tPrism.languages.insertBefore('java', 'string', {",
                "\t\t'triple-quoted-string': {",
                "\t\t\t// http://openjdk.java.net/jeps/355#Description",
                "\t\t\tpattern: /\"\"\"[ \\t]*[\\r\\n](?:(?:\"|\"\")?(?:\\\\.|[^\"\\\\]))*\"\"\"/,",
                "\t\t\tgreedy: true,",
                "\t\t\talias: 'string'",
                "\t\t}",
                "\t});",
                "",
                "\tPrism.languages.insertBefore('java', 'class-name', {",
                "\t\t'annotation': {",
                "\t\t\talias: 'punctuation',",
                "\t\t\tpattern: /(^|[^.])@\\w+/,",
                "\t\t\tlookbehind: true",
                "\t\t},",
                "\t\t'namespace': {",
                "\t\t\tpattern: /(\\b(?:exports|import(?:\\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\\s+)[a-z]\\w*(?:\\.[a-z]\\w*)+/,",
                "\t\t\tlookbehind: true,",
                "\t\t\tinside: {",
                "\t\t\t\t'punctuation': /\\./,",
                "\t\t\t}",
                "\t\t},",
                "\t\t'generics': {",
                "\t\t\tpattern: /<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<[\\w\\s,.&?]*>)*>)*>)*>/,",
                "\t\t\tinside: {",
                "\t\t\t\t'class-name': className,",
                "\t\t\t\t'keyword': keywords,",
                "\t\t\t\t'punctuation': /[<>(),.:]/,",
                "\t\t\t\t'operator': /[?&|]/",
                "\t\t\t}",
                "\t\t}",
                "\t});",
                "}(Prism));"
            ]
        }
    },
    "bug_functions": {}
}