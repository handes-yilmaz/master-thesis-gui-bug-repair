{
    "components/prism-javascript.js": [
        "Prism.languages.javascript = Prism.languages.extend('clike', {",
        "\t'class-name': [",
        "\t\tPrism.languages.clike['class-name'],",
        "\t\t{",
        "\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])[_$A-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\.(?:prototype|constructor))/,",
        "\t\t\tlookbehind: true",
        "\t\t}",
        "\t],",
        "\t'keyword': [",
        "\t\t{",
        "\t\t\tpattern: /((?:^|})\\s*)(?:catch|finally)\\b/,",
        "\t\t\tlookbehind: true",
        "\t\t},",
        "\t\t{",
        "\t\t\tpattern: /(^|[^.])\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,",
        "\t\t\tlookbehind: true",
        "\t\t},",
        "\t],",
        "\t'number': /\\b(?:(?:0[xX][\\dA-Fa-f]+|0[bB][01]+|0[oO][0-7]+)n?|\\d+n|NaN|Infinity)\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,",
        "\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)",
        "\t'function': /[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,",
        "\t'operator': /-[-=]?|\\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}/",
        "});",
        "",
        "Prism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;",
        "",
        "Prism.languages.insertBefore('javascript', 'keyword', {",
        "\t'regex': {",
        "\t\tpattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyus]{0,6}(?=\\s*($|[\\r\\n,.;})\\]]))/,",
        "\t\tlookbehind: true,",
        "\t\tgreedy: true",
        "\t},",
        "\t// This must be declared before keyword because we use \"function\" inside the look-forward",
        "\t'function-variable': {",
        "\t\tpattern: /[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/,",
        "\t\talias: 'function'",
        "\t},",
        "\t'parameter': [",
        "\t\t{",
        "\t\t\tpattern: /(function(?:\\s+[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)?\\s*\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\))/,",
        "\t\t\tlookbehind: true,",
        "\t\t\tinside: Prism.languages.javascript",
        "\t\t},",
        "\t\t{",
        "\t\t\tpattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=>)/i,",
        "\t\t\tinside: Prism.languages.javascript",
        "\t\t},",
        "\t\t{",
        "\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*=>)/,",
        "\t\t\tlookbehind: true,",
        "\t\t\tinside: Prism.languages.javascript",
        "\t\t},",
        "\t\t{",
        "\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\s*)\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*\\{)/,",
        "\t\t\tlookbehind: true,",
        "\t\t\tinside: Prism.languages.javascript",
        "\t\t}",
        "\t],",
        "\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/",
        "});",
        "",
        "Prism.languages.insertBefore('javascript', 'string', {",
        "\t'template-string': {",
        "\t\tpattern: /`(?:\\\\[\\s\\S]|\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|[^\\\\`])*`/,",
        "\t\tgreedy: true,",
        "\t\tinside: {",
        "\t\t\t'interpolation': {",
        "\t\t\t\tpattern: /\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,",
        "\t\t\t\tinside: {",
        "\t\t\t\t\t'interpolation-punctuation': {",
        "\t\t\t\t\t\tpattern: /^\\${|}$/,",
        "\t\t\t\t\t\talias: 'punctuation'",
        "\t\t\t\t\t},",
        "\t\t\t\t\trest: Prism.languages.javascript",
        "\t\t\t\t}",
        "\t\t\t},",
        "\t\t\t'string': /[\\s\\S]+/",
        "\t\t}",
        "\t}",
        "});",
        "",
        "if (Prism.languages.markup) {",
        "\tPrism.languages.markup.tag.addInlined('script', 'javascript');",
        "}",
        "",
        "Prism.languages.js = Prism.languages.javascript;"
    ]
}