{
    "1": {
        "bug_file": "components/prism-yaml.js",
        "compressed": "NO",
        "line_numbers": 45,
        "compressed_line_numbers": 45,
        "compressed_bug_file_content": "Prism.languages.yaml = {\n\t'scalar': {\n\t\tpattern: /([\\-:]\\s*(?:![^\\s]+)?[ \\t]*[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)[^\\r\\n]+(?:\\2[^\\r\\n]+)*)/,\n\t\tlookbehind: true,\n\t\talias: 'string'\n\t},\n\t'comment': /#.*/,\n\t'key': {\n\t\tpattern: /(\\s*(?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:![^\\s]+)?[ \\t]*)[^\\r\\n{[\\]},#\\s]+?(?=\\s*:\\s)/,\n\t\tlookbehind: true,\n\t\talias: 'atrule'\n\t},\n\t'directive': {\n\t\tpattern: /(^[ \\t]*)%.+/m,\n\t\tlookbehind: true,\n\t\talias: 'important'\n\t},\n\t'datetime': {\n\t\tpattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?)?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?)(?=[ \\t]*(?:$|,|]|}))/m,\n\t\tlookbehind: true,\n\t\talias: 'number'\n\t},\n\t'boolean': {\n\t\tpattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:true|false)[ \\t]*(?=$|,|]|})/im,\n\t\tlookbehind: true,\n\t\talias: 'important'\n\t},\n\t'null': {\n\t\tpattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:null|~)[ \\t]*(?=$|,|]|})/im,\n\t\tlookbehind: true,\n\t\talias: 'important'\n\t},\n\t'string': {\n\t\tpattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(\"|')(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2(?=[ \\t]*(?:$|,|]|}))/m,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t},\n\t'number': {\n\t\tpattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+\\.?\\d*|\\.?\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)[ \\t]*(?=$|,|]|})/im,\n\t\tlookbehind: true\n\t},\n\t'tag': /![^\\s]+/,\n\t'important': /[&*][\\w]+/,\n\t'punctuation': /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n};"
    },
    "2": {
        "bug_file": "prism.js",
        "compressed": "YES",
        "line_numbers": 894,
        "compressed_line_numbers": 115,
        "compressed_bug_file_content": "\n/* **********************************************\n\n********************************************** */\n\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n * MIT license http://www.opensource.org/licenses/mit-license.php/\n * @author Lea Verou http://lea.verou.me\n */\n\n\n// Private helper vars\n\n\n\t\t// Deep clone a language definition (e.g. to extend it)\n\n\n\t\t/**\n\t\t * Insert a token before another token in a language literal\n\t\t * As this needs to recreate the object (we cannot actually insert before keys in object literals),\n\t\t * we cannot just provide an object, we need anobject and a key.\n\t\t * @param inside The key (or language id) of the parent\n\t\t * @param before The key to insert before. If not provided, the function appends instead.\n\t\t * @param insert Object with the key/value pairs to insert\n\t\t * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\n\t\t */\n\n\n\t\t\t// Update references in other language definitions\n\n\n\t\t// Traverse a language definition with Depth First Search\n\n\n\t\t// Find language\n\n\n\t\t// Set language on the element, if not present\n\n\n\t\t\t// Set language on the parent, for styling\n\n\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\n\n\t\t\t\t// Don\u2019t cache length as it changes during the loop\n\n\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\n\n\t\t\t\t\t\t\t// Move the index i to the element in strarr that is closest to from\n\n\n\t\t\t\t\t\t// If strarr[i] is a Token, then the match starts inside another Token, which is invalid\n\n\n\t\t\t\t\t\t// Number of tokens to delete and replace with the new match\n\n\n\t// Copy of the full string this token was created from\n\n\n\t\t// in Node.js\n\n\n\t\t// In worker\n\n\n//Get current script and highlight\n\n\n// hack for components to work correctly in node.js\n\n\n/* **********************************************\n\n********************************************** */\n\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\n\n\n/* **********************************************\n\n********************************************** */\n\n\n\t\t\t// See rest below\n\n\n/* **********************************************\n\n********************************************** */\n\n\n/* **********************************************\n\n********************************************** */\n\n\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\n\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\n\n/* **********************************************\n\n********************************************** */\n\n\n"
    }
}