{
    "1/1": "### Bug Scenario Description and Root Cause\n\nThe bug scenario involves a Markdown file where the \"format on save\" feature in VS Code, using Prettier, incorrectly adds extra indentation to nested code blocks or raw HTML each time the file is saved. This results in the HTML table being pushed further out of alignment with each save. The expected behavior is for the HTML table to remain correctly nested within the list item without additional indentation.\n\nThe root cause of this issue is likely related to how the Markdown parser or printer handles indentation for raw HTML within Markdown. The parser or printer might not be correctly preserving the intended indentation level for HTML blocks, leading to the observed behavior.\n\n### Bug Location and Fix\n\nThe issue is likely in the `printer-markdown.js` file, where the handling of HTML blocks needs to be adjusted to maintain the correct indentation.\n\n### Patches\n\n```javascript\n### src/language-markdown/printer-markdown.js\n<<<<<<< SEARCH\n    case \"html\": {\n      const parentNode = path.getParentNode();\n      return parentNode.type === \"root\" &&\n        privateUtil.getLast(parentNode.children) === node\n        ? node.value.trimRight()\n        : node.value;\n    }\n=======\n    case \"html\": {\n      const parentNode = path.getParentNode();\n      const isNested = parentNode.type !== \"root\";\n      return isNested\n        ? align(\" \".repeat(options.tabWidth), node.value)\n        : node.value.trimRight();\n    }\n>>>>>>> REPLACE\n```\n\nThis patch modifies the handling of HTML blocks in the Markdown printer to ensure that nested HTML is aligned correctly, preventing additional indentation on each save."
}