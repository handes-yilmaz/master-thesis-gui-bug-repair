{
    "1/1": {
        "src/language-js/parser-babel.js": [
            {
                "SEARCH": [
                    "const babel = { parse, astFormat: \"estree\", hasPragma, locStart, locEnd };",
                    "const babelFlow = { ...babel, parse: parseFlow };",
                    "const babelTypeScript = { ...babel, parse: parseTypeScript };",
                    "const babelExpression = { ...babel, parse: parseExpression };",
                    "",
                    "// Export as a plugin so we can reuse the same bundle for UMD loading",
                    "module.exports = {",
                    "parsers: {",
                    "babel,",
                    "\"babel-flow\": babelFlow,",
                    "\"babel-ts\": babelTypeScript,",
                    "json: {",
                    "...babelExpression,",
                    "hasPragma() {",
                    "return true;",
                    "},",
                    "},",
                    "json5: babelExpression,",
                    "\"json-stringify\": {",
                    "parse: parseJson,",
                    "astFormat: \"estree-json\",",
                    "locStart,",
                    "locEnd,",
                    "},",
                    "/** @internal */",
                    "__js_expression: babelExpression,",
                    "/** for vue filter */",
                    "__vue_expression: babelExpression,",
                    "/** for vue event binding to handle semicolon */",
                    "__vue_event_binding: babel,",
                    "},",
                    "};"
                ],
                "REPLACE": [
                    "const cherow = require(\"cherow\");",
                    "",
                    "function parseWithCherow(text, opts = {}) {",
                    "  try {",
                    "    return cherow.parse(text, {",
                    "      module: opts.__babelSourceType !== \"script\",",
                    "      loc: true,",
                    "      ranges: true,",
                    "      raw: true,",
                    "    });",
                    "  } catch (error) {",
                    "    throw createError(error.message, {",
                    "      start: {",
                    "        line: error.line,",
                    "        column: error.column + 1,",
                    "      },",
                    "    });",
                    "  }",
                    "}",
                    "",
                    "const cherowParser = { parse: parseWithCherow, astFormat: \"estree\", hasPragma, locStart, locEnd };",
                    "",
                    "module.exports = {",
                    "  parsers: {",
                    "    babel,",
                    "    \"babel-flow\": babelFlow,",
                    "    \"babel-ts\": babelTypeScript,",
                    "    cherow: cherowParser,",
                    "    json: {",
                    "      ...babelExpression,",
                    "      hasPragma() {",
                    "        return true;",
                    "      },",
                    "    },",
                    "    json5: babelExpression,",
                    "    \"json-stringify\": {",
                    "      parse: parseJson,",
                    "      astFormat: \"estree-json\",",
                    "      locStart,",
                    "      locEnd,",
                    "    },",
                    "    /** @internal */",
                    "    __js_expression: babelExpression,",
                    "    /** for vue filter */",
                    "    __vue_expression: babelExpression,",
                    "    /** for vue event binding to handle semicolon */",
                    "    __vue_event_binding: babel,",
                    "  },",
                    "};"
                ]
            }
        ]
    }
}