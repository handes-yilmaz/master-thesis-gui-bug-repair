{
    "1": {
        "bug_file": "src/tree/view/tree.jsx",
        "compressed": "YES",
        "line_numbers": 1214,
        "compressed_line_numbers": 266,
        "compressed_bug_file_content": "/* eslint-disable max-depth */\nimport React, { Component, Children, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport { polyfill } from 'react-lifecycles-compat';\nimport cx from 'classnames';\nimport { func, dom, obj, KEYCODE } from '../../util';\nimport TreeNode from './tree-node';\nimport VirtualList from '../../virtual-list';\nimport {\n\n\n            // 为了兼容之前的实现 保留非法节点\n\n\n            // 判断为叶子节点\n            // - 指定isLeaf属性\n            // - loadData模式下 没有指定isLeaf为true\n            // - 存在children元素\n\n\n/**\n * Tree\n */\n\n\n        /**\n         * 树节点\n         */\n\n        /**\n         * 数据源，该属性优先级高于 children\n         */\n\n        /**\n         * 是否显示树的线\n         */\n\n        /**\n         * 是否支持选中节点\n         */\n\n        /**\n         * （用于受控）当前选中节点 key 的数组\n         */\n\n        /**\n         * （用于非受控）默认选中节点 key 的数组\n         */\n\n        /**\n         * 选中或取消选中节点时触发的回调函数\n         * @param {Array} selectedKeys 选中节点key的数组\n         * @param {Object} extra 额外参数\n         * @param {Array} extra.selectedNodes 选中节点的数组\n         * @param {Object} extra.node 当前操作的节点\n         * @param {Boolean} extra.selected 当前操作是否是选中\n         */\n\n        /**\n         * 是否支持多选\n         */\n\n        /**\n         * 是否支持勾选节点的复选框\n         */\n\n        /**\n         * （用于受控）当前勾选复选框节点 key 的数组或 `{checked: Array, indeterminate: Array}` 的对象\n         */\n\n        /**\n         * （用于非受控）默认勾选复选框节点 key 的数组\n         */\n\n        /**\n         * 勾选节点复选框是否完全受控（父子节点选中状态不再关联）\n         */\n\n        /**\n         * 定义选中时回填的方式\n         * @enumdesc 返回所有选中的节点, 父子节点都选中时只返回父节点, 父子节点都选中时只返回子节点\n         */\n\n        /**\n         * 勾选或取消勾选复选框时触发的回调函数\n         * @param {Array} checkedKeys 勾选复选框节点key的数组\n         * @param {Object} extra 额外参数\n         * @param {Array} extra.checkedNodes 勾选复选框节点的数组\n         * @param {Array} extra.checkedNodesPositions 包含有勾选复选框节点和其位置的对象的数组\n         * @param {Array} extra.indeterminateKeys 半选复选框节点 key 的数组\n         * @param {Object} extra.node 当前操作的节点\n         * @param {Boolean} extra.checked 当前操作是否是勾选\n         */\n\n        /**\n         * （用于受控）当前展开的节点 key 的数组\n         */\n\n        /**\n         * （用于非受控）默认展开的节点 key 的数组\n         */\n\n        /**\n         * 是否默认展开所有节点\n         */\n\n        /**\n         * 是否自动展开父节点，建议受控时设置为false\n         */\n\n        /**\n         * 展开或收起节点时触发的回调函数\n         * @param {Array} expandedKeys 展开的节点key的数组\n         * @param {Object} extra 额外参数\n         * @param {Object} extra.node 当前操作的节点\n         * @param {Boolean} extra.expanded 当前操作是否是展开\n         */\n\n        /**\n         * 是否支持编辑节点内容\n         */\n\n        /**\n         * 编辑节点内容完成时触发的回调函数\n         * @param {String} key 编辑节点的 key\n         * @param {String} label 编辑节点完成时节点的文本\n         * @param {Object} node 当前编辑的节点\n         */\n\n        /**\n         * 是否支持拖拽节点\n         */\n\n        /**\n         * 开始拖拽节点时触发的回调函数\n         * @param {Object} info 拖拽信息\n         * @param {Object} info.event 事件对象\n         * @param {Object} info.node 拖拽的节点\n         */\n\n        /**\n         * 拖拽节点进入目标节点时触发的回调函数\n         * @param {Object} info 拖拽信息\n         * @param {Object} info.event 事件对象\n         * @param {Object} info.node 目标节点\n         * @param {Array} info.expandedKeys 当前展开的节点key的数组\n         */\n\n        /**\n         * 拖拽节点在目标节点上移动的时候触发的回调函数\n         * @param {Object} info 拖拽信息\n         * @param {Object} info.event 事件对象\n         * @param {Object} info.node 目标节点\n         */\n\n        /**\n         * 拖拽节点离开目标节点时触发的回调函数\n         * @param {Object} info 拖拽信息\n         * @param {Object} info.event 事件对象\n         * @param {Object} info.node 目标节点\n         */\n\n        /**\n         * 拖拽节点拖拽结束时触发的回调函数\n         * @param {Object} info 拖拽信息\n         * @param {Object} info.event 事件对象\n         * @param {Object} info.node 目标节点\n         */\n\n        /**\n         * 拖拽节点放入目标节点内或前后触发的回调函数\n         * @param {Object} info 拖拽信息\n         * @param {Object} info.event 事件对象\n         * @param {Object} info.node 目标节点\n         * @param {Object} info.dragNode 拖拽的节点\n         * @param {Array} info.dragNodesKeys 拖拽的节点和其子节点 key 的数组\n         * @param {Number} info.dropPosition 放置位置，-1代表当前节点前，0代表当前节点里，1代表当前节点后\n         */\n\n        /**\n         * 节点是否可被作为拖拽的目标节点\n         * @param {Object} info 拖拽信息\n         * @param {Object} info.node 目标节点\n         * @param {Object} info.dragNode 拖拽的节点\n         * @param {Array} info.dragNodesKeys 拖拽的节点和其子节点 key 的数组\n         * @param {Number} info.dropPosition 放置位置，-1代表当前节点前，0代表当前节点里，1代表当前节点后\n         * @return {Boolean} 是否可以被当作目标节点\n         */\n\n        /**\n         * 异步加载数据的函数\n         * @param {Object} node 被点击展开的节点\n         */\n\n        /**\n         * 按需筛选高亮节点\n         * @param {Object} node 待筛选的节点\n         * @return {Boolean} 是否被筛选中\n         */\n\n        /**\n         * 右键点击节点时触发的回调函数\n         * @param {Object} info 信息对象\n         * @param {Object} info.event 事件对象\n         * @param {Object} info.node 点击的节点\n         */\n\n        /**\n         * 设置节点是否占满剩余空间，一般用于统一在各节点右侧添加元素(借助 flex 实现，暂时只支持 ie10+)\n         */\n\n        /**\n         * 设置节点是否占满一行\n         */\n\n        /**\n         * 是否开启展开收起动画\n         */\n\n        /**\n         * 当前获得焦点的子菜单或菜单项 key 值\n         */\n\n        /**\n         * 渲染子节点\n         * @param {Array<ReactNode>} nodes 所有的子节点\n         * @return {ReactNode} 返回节点\n         */\n\n\n        /**\n         * 是否开启虚拟滚动\n         */\n\n\n    /*eslint-disable max-statements*/\n\n\n    // eslint-disable-next-line max-statements\n\n\n                        // eslint-disable-next-line max-depth\n\n\n                        // eslint-disable-next-line max-depth\n\n\n                // 为了兼容之前的实现 保留非法节点\n\n\n            // 为了兼容之前的实现 保留非法节点\n\n\n            // aria props\n\n\n                // aria props\n\n\n                // 为了兼容之前的实现 保留非法节点\n\n\n                // eslint-disable-next-line\n\n\nexport default polyfill(Tree);\n"
    }
}