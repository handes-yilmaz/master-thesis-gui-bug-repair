{
    "1": {
        "bug_file": "src/cascader-select/cascader-select.jsx",
        "compressed": "YES",
        "line_numbers": 898,
        "compressed_line_numbers": 217,
        "compressed_bug_file_content": "import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { polyfill } from 'react-lifecycles-compat';\nimport classNames from 'classnames';\nimport Select from '../select';\nimport Cascader from '../cascader';\nimport Menu from '../menu';\nimport { func, obj, dom, KEYCODE } from '../util';\n\n\n/**\n * CascaderSelect\n */\n\n\n        /**\n         * 选择框大小\n         */\n\n        /**\n         * 选择框占位符\n         */\n\n        /**\n         * 是否禁用\n         */\n\n        /**\n         * 是否有下拉箭头\n         */\n\n        /**\n         * 是否有边框\n         */\n\n        /**\n         * 是否有清除按钮\n         */\n\n        /**\n         * 自定义内联 label\n         */\n\n        /**\n         * 是否只读，只读模式下可以展开弹层但不能选\n         */\n\n        /**\n         * 数据源，结构可参考下方说明\n         */\n\n        /**\n         * （非受控）默认值\n         */\n\n        /**\n         * （受控）当前值\n         */\n\n        /**\n         * 选中值改变时触发的回调函数\n         * @param {String|Array} value 选中的值，单选时返回单个值，多选时返回数组\n         * @param {Object|Array} data 选中的数据，包括 value 和 label，单选时返回单个值，多选时返回数组，父子节点选中关联时，同时选中，只返回父节点\n         * @param {Object} extra 额外参数\n         * @param {Array} extra.selectedPath 单选时选中的数据的路径\n         * @param {Boolean} extra.checked 多选时当前的操作是选中还是取消选中\n         * @param {Object} extra.currentData 多选时当前操作的数据\n         * @param {Array} extra.checkedData 多选时所有被选中的数据\n         * @param {Array} extra.indeterminateData 多选时半选的数据\n         */\n\n        /**\n         * 默认展开值，如果不设置，组件内部会根据 defaultValue/value 进行自动设置\n         */\n\n        /**\n         * （受控）当前展开值\n         */\n\n        /**\n         * 展开触发的方式\n         */\n\n\n        /**\n         * 是否开启虚拟滚动\n         */\n\n        /**\n         * 是否多选\n         */\n\n        /**\n         * 是否选中即发生改变, 该属性仅在单选模式下有效\n         */\n\n        /**\n         * 是否只能勾选叶子项的checkbox，该属性仅在多选模式下有效\n         */\n\n        /**\n         * 父子节点是否选中不关联\n         */\n\n        /**\n         * 每列列表样式对象\n         */\n\n        /**\n         * 每列列表类名\n         */\n\n        /**\n         * 选择框单选时展示结果的自定义渲染函数\n         * @param {Array} label 选中路径的文本数组\n         * @return {ReactNode} 渲染在选择框中的内容\n         * @default 单选时：labelPath => labelPath.join(' / ')；多选时：labelPath => labelPath[labelPath.length - 1]\n         */\n\n        /**\n         * 渲染 item 内容的方法\n         * @param {Object} item 渲染节点的item\n         * @return {ReactNode} item node\n         */\n\n        /**\n         * 是否显示搜索框\n         */\n\n        /**\n         * 自定义搜索函数\n         * @param {String} searchValue 搜索的关键字\n         * @param {Array} path 节点路径\n         * @return {Boolean} 是否匹配\n         * @default 根据路径所有节点的文本值模糊匹配\n         */\n\n        /**\n         * 搜索结果自定义渲染函数\n         * @param {String} searchValue 搜索的关键字\n         * @param {Array} path 匹配到的节点路径\n         * @return {ReactNode} 渲染的内容\n         * @default 按照节点文本 a / b / c 的模式渲染\n         */\n\n        /**\n         * 搜索结果列表是否和选择框等宽\n         */\n\n        /**\n         * 无数据时显示内容\n         */\n\n        /**\n         * 异步加载数据函数\n         * @param {Object} data 当前点击异步加载的数据\n         */\n\n        /**\n         * 自定义下拉框头部\n         */\n\n        /**\n         * 自定义下拉框底部\n         */\n\n        /**\n         * 初始下拉框是否显示\n         */\n\n        /**\n         * 当前下拉框是否显示\n         */\n\n        /**\n         * 下拉框显示或关闭时触发事件的回调函数\n         * @param {Boolean} visible 是否显示\n         * @param {String} type 触发显示关闭的操作类型, fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发\n         */\n\n        /**\n         * 下拉框自定义样式对象\n         */\n\n        /**\n         * 下拉框样式自定义类名\n         */\n\n        /**\n         * 下拉框挂载的容器节点\n         */\n\n        /**\n         * 透传到 Popup 的属性对象\n         */\n\n        /**\n         * 是否跟随滚动\n         */\n\n        /**\n         * 是否为预览态\n         */\n\n        /**\n         * 预览态模式下渲染的内容\n         * @param {Array<data>} value 选择值 { label: , value:}\n         */\n\n\n        // 单选时点击清空按钮\n\n\n            // searchValue,\n\n\nexport default polyfill(CascaderSelect);\n"
    },
    "2": {
        "bug_file": "src/cascader-select/index.jsx",
        "compressed": "NO",
        "line_numbers": 41,
        "compressed_line_numbers": 41,
        "compressed_bug_file_content": "import ConfigProvider from '../config-provider';\nimport CascaderSelect from './cascader-select';\n\nexport default ConfigProvider.config(CascaderSelect, {\n    transform: /* istanbul ignore next */ (props, deprecated) => {\n        if ('shape' in props) {\n            deprecated('shape', 'hasBorder', 'CascaderSelect');\n            const { shape, ...others } = props;\n            props = { hasBorder: shape !== 'arrow-only', ...others };\n        }\n\n        if ('container' in props) {\n            deprecated('container', 'popupContainer', 'CascaderSelect');\n            const { container, ...others } = props;\n            props = { popupContainer: container, ...others };\n        }\n\n        if ('expandTrigger' in props) {\n            deprecated('expandTrigger', 'expandTriggerType', 'CascaderSelect');\n            const { expandTrigger, ...others } = props;\n            props = { expandTriggerType: expandTrigger, ...others };\n        }\n\n        if ('showItemCount' in props) {\n            deprecated(\n                'showItemCount',\n                'listStyle | listClassName',\n                'CascaderSelect'\n            );\n        }\n        if ('labelWidth' in props) {\n            deprecated(\n                'labelWidth',\n                'listStyle | listClassName',\n                'CascaderSelect'\n            );\n        }\n\n        return props;\n    },\n});"
    },
    "3": {
        "bug_file": "src/cascader/cascader.jsx",
        "compressed": "YES",
        "line_numbers": 816,
        "compressed_line_numbers": 119,
        "compressed_bug_file_content": "import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { polyfill } from 'react-lifecycles-compat';\nimport cx from 'classnames';\nimport Menu from '../menu';\nimport { func, obj, dom } from '../util';\nimport CascaderMenu from './menu';\nimport CascaderMenuItem from './item';\nimport {\n\n\n/**\n * Cascader\n */\n\n\n        /**\n         * 数据源，结构可参考下方说明\n         */\n\n        /**\n         * （非受控）默认值\n         */\n\n        /**\n         * （受控）当前值\n         */\n\n        /**\n         * 选中值改变时触发的回调函数\n         * @param {String|Array} value 选中的值，单选时返回单个值，多选时返回数组\n         * @param {Object|Array} data 选中的数据，包括 value 和 label，单选时返回单个值，多选时返回数组，父子节点选中关联时，同时选中，只返回父节点\n         * @param {Object} extra 额外参数\n         * @param {Array} extra.selectedPath 单选时选中的数据的路径\n         * @param {Boolean} extra.checked 多选时当前的操作是选中还是取消选中\n         * @param {Object} extra.currentData 多选时当前操作的数据\n         * @param {Array} extra.checkedData 多选时所有被选中的数据\n         * @param {Array} extra.indeterminateData 多选时半选的数据\n         */\n\n\n        /**\n         * （非受控）默认展开值，如果不设置，组件内部会根据 defaultValue/value 进行自动设置\n         */\n\n        /**\n         * （受控）当前展开值\n         */\n\n        /**\n         * 展开触发的方式\n         */\n\n        /**\n         * 展开时触发的回调函数\n         * @param {Array} expandedValue 各列展开值的数组\n         */\n\n        /**\n         * 是否开启虚拟滚动\n         */\n\n        /**\n         * 是否多选\n         */\n\n        /**\n         * 单选时是否只能选中叶子节点\n         */\n\n        /**\n         * 多选时是否只能选中叶子节点\n         */\n\n        /**\n         * 父子节点是否选中不关联\n         */\n\n        /**\n         * 每列列表样式对象\n         */\n\n        /**\n         * 每列列表类名\n         */\n\n        /**\n         * 每列列表项渲染函数\n         * @param {Object} data 数据\n         * @return {ReactNode} 列表项内容\n         */\n\n        /**\n         * 异步加载数据函数\n         * @param {Object} data 当前点击异步加载的数据\n         * @param {Object} source 当前点击数据，source是原始对象\n         */\n\n\n    /*eslint-enable*/\n\n\n    /*eslint-disable max-statements*/\n\n\n                        // eslint-disable-next-line max-depth\n\n                            // eslint-disable-next-line max-depth\n\n\n                            // eslint-disable-next-line max-depth\n\n                                // eslint-disable-next-line max-depth\n\n\n                // 如果不设置为false， CascaderSelect 开启 showSearch后，弹窗展开时，光标无法到input上去，也无法输入\n\n\nexport default polyfill(Cascader);\n"
    },
    "4": {
        "bug_file": "src/cascader/index.jsx",
        "compressed": "NO",
        "line_numbers": 26,
        "compressed_line_numbers": 26,
        "compressed_bug_file_content": "import ConfigProvider from '../config-provider';\nimport Cascader from './cascader';\n\nexport default ConfigProvider.config(Cascader, {\n    transform: /* istanbul ignore next */ (props, deprecated) => {\n        if ('expandTrigger' in props) {\n            deprecated('expandTrigger', 'expandTriggerType', 'Cascader');\n            const { expandTrigger, ...others } = props;\n            props = { expandTriggerType: expandTrigger, ...others };\n        }\n\n        if ('showItemCount' in props) {\n            deprecated(\n                'showItemCount',\n                'listStyle | listClassName',\n                'Cascader'\n            );\n        }\n        if ('labelWidth' in props) {\n            deprecated('labelWidth', 'listStyle | listClassName', 'Cascader');\n        }\n\n        return props;\n    },\n    exportNames: ['setFocusValue'],\n});"
    }
}