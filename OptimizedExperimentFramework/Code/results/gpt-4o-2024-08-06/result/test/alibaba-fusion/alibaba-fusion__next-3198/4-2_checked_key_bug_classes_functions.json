{
    "bug_classes": {
        "1": {
            "class_name": "TimePanel (not found) ",
            "file_path": "src/date-picker2/panels/time-panel.jsx",
            "class_details": [
                {
                    "name": "TimePanel",
                    "start_line": 1,
                    "end_line": 91
                }
            ],
            "class_code": [
                "import React from 'react';",
                "import { polyfill } from 'react-lifecycles-compat';",
                "import * as PT from 'prop-types';",
                "import TimePickerPanel from '../../time-picker2/panel';",
                "import SharedPT from '../prop-types';",
                "import { func } from '../../util';",
                "",
                "const DECADE_TIME_FORMAT = 'HH:mm:ss';",
                "",
                "class TimePanel extends React.PureComponent {",
                "    static propTypes = {",
                "        rtl: PT.bool,",
                "        prefix: PT.string,",
                "        locale: PT.object,",
                "        value: SharedPT.date,",
                "        timePanelProps: PT.object,",
                "        defaultValue: SharedPT.value,",
                "        onSelect: PT.func,",
                "    };",
                "",
                "    formater = v => {",
                "        const { timePanelProps = {} } = this.props;",
                "        const { showHour, showMinute, showSecond } = this.getShow();",
                "",
                "        let fmt;",
                "        if ('format' in timePanelProps) {",
                "            fmt = timePanelProps.format;",
                "        } else {",
                "            const fmtArr = [];",
                "",
                "            showHour && fmtArr.push('HH');",
                "            showMinute && fmtArr.push('mm');",
                "            showSecond && fmtArr.push('ss');",
                "",
                "            fmt = fmtArr.join(':');",
                "        }",
                "",
                "        return typeof fmt === 'function' ? fmt(v) : v.format(fmt);",
                "    };",
                "",
                "    getShow = () => {",
                "        const { timePanelProps: props = {} } = this.props;",
                "",
                "        const fmt = props.format || DECADE_TIME_FORMAT;",
                "",
                "        let showHour;",
                "        let showMinute;",
                "        let showSecond;",
                "",
                "        if (typeof fmt === 'string') {",
                "            showHour = fmt.indexOf('H') > -1;",
                "            showSecond = fmt.indexOf('s') > -1;",
                "            showMinute = fmt.indexOf('m') > -1;",
                "        }",
                "",
                "        return {",
                "            showHour: 'showHour' in props ? props.showHour : showHour,",
                "            showMinute: 'showMinute' in props ? props.showMinute : showMinute,",
                "            showSecond: 'showSecond' in props ? props.showSecond : showSecond,",
                "        };",
                "    };",
                "",
                "    onSelect = v => {",
                "        func.invoke(this.props, 'onSelect', [v]);",
                "    };",
                "",
                "    render() {",
                "        const { prefix, rtl, locale, timePanelProps = {}, value } = this.props;",
                "        const { showHour, showMinute, showSecond } = this.getShow();",
                "",
                "        return (",
                "            <div dir={rtl ? 'rtl' : undefined} className={`${prefix}date-time-picker-wrapper ${prefix}calendar2-panel`}>",
                "                <div className={`${prefix}calendar2-header`}>",
                "                    <div className={`${prefix}calendar2-header-text-field`}>{value ? this.formater(value) : null}</div>",
                "                </div>",
                "                <TimePickerPanel",
                "                    prefix={prefix}",
                "                    locale={locale}",
                "                    onSelect={this.onSelect}",
                "                    showHour={showHour}",
                "                    showSecond={showSecond}",
                "                    showMinute={showMinute}",
                "                    {...timePanelProps}",
                "                    value={value}",
                "                />",
                "            </div>",
                "        );",
                "    }",
                "}",
                "",
                "export default polyfill(TimePanel);"
            ]
        }
    },
    "bug_functions": {
        "2": {
            "function_name": "formater (not found) ",
            "file_path": "src/date-picker2/panels/time-panel.jsx",
            "function_details": [
                {
                    "name": "formater",
                    "start_line": 1,
                    "end_line": 91
                }
            ],
            "function_code": [
                "import React from 'react';",
                "import { polyfill } from 'react-lifecycles-compat';",
                "import * as PT from 'prop-types';",
                "import TimePickerPanel from '../../time-picker2/panel';",
                "import SharedPT from '../prop-types';",
                "import { func } from '../../util';",
                "",
                "const DECADE_TIME_FORMAT = 'HH:mm:ss';",
                "",
                "class TimePanel extends React.PureComponent {",
                "    static propTypes = {",
                "        rtl: PT.bool,",
                "        prefix: PT.string,",
                "        locale: PT.object,",
                "        value: SharedPT.date,",
                "        timePanelProps: PT.object,",
                "        defaultValue: SharedPT.value,",
                "        onSelect: PT.func,",
                "    };",
                "",
                "    formater = v => {",
                "        const { timePanelProps = {} } = this.props;",
                "        const { showHour, showMinute, showSecond } = this.getShow();",
                "",
                "        let fmt;",
                "        if ('format' in timePanelProps) {",
                "            fmt = timePanelProps.format;",
                "        } else {",
                "            const fmtArr = [];",
                "",
                "            showHour && fmtArr.push('HH');",
                "            showMinute && fmtArr.push('mm');",
                "            showSecond && fmtArr.push('ss');",
                "",
                "            fmt = fmtArr.join(':');",
                "        }",
                "",
                "        return typeof fmt === 'function' ? fmt(v) : v.format(fmt);",
                "    };",
                "",
                "    getShow = () => {",
                "        const { timePanelProps: props = {} } = this.props;",
                "",
                "        const fmt = props.format || DECADE_TIME_FORMAT;",
                "",
                "        let showHour;",
                "        let showMinute;",
                "        let showSecond;",
                "",
                "        if (typeof fmt === 'string') {",
                "            showHour = fmt.indexOf('H') > -1;",
                "            showSecond = fmt.indexOf('s') > -1;",
                "            showMinute = fmt.indexOf('m') > -1;",
                "        }",
                "",
                "        return {",
                "            showHour: 'showHour' in props ? props.showHour : showHour,",
                "            showMinute: 'showMinute' in props ? props.showMinute : showMinute,",
                "            showSecond: 'showSecond' in props ? props.showSecond : showSecond,",
                "        };",
                "    };",
                "",
                "    onSelect = v => {",
                "        func.invoke(this.props, 'onSelect', [v]);",
                "    };",
                "",
                "    render() {",
                "        const { prefix, rtl, locale, timePanelProps = {}, value } = this.props;",
                "        const { showHour, showMinute, showSecond } = this.getShow();",
                "",
                "        return (",
                "            <div dir={rtl ? 'rtl' : undefined} className={`${prefix}date-time-picker-wrapper ${prefix}calendar2-panel`}>",
                "                <div className={`${prefix}calendar2-header`}>",
                "                    <div className={`${prefix}calendar2-header-text-field`}>{value ? this.formater(value) : null}</div>",
                "                </div>",
                "                <TimePickerPanel",
                "                    prefix={prefix}",
                "                    locale={locale}",
                "                    onSelect={this.onSelect}",
                "                    showHour={showHour}",
                "                    showSecond={showSecond}",
                "                    showMinute={showMinute}",
                "                    {...timePanelProps}",
                "                    value={value}",
                "                />",
                "            </div>",
                "        );",
                "    }",
                "}",
                "",
                "export default polyfill(TimePanel);"
            ]
        },
        "3": {
            "function_name": "render (not found) ",
            "file_path": "src/date-picker2/panels/time-panel.jsx",
            "function_details": [
                {
                    "name": "render",
                    "start_line": 1,
                    "end_line": 91
                }
            ],
            "function_code": [
                "import React from 'react';",
                "import { polyfill } from 'react-lifecycles-compat';",
                "import * as PT from 'prop-types';",
                "import TimePickerPanel from '../../time-picker2/panel';",
                "import SharedPT from '../prop-types';",
                "import { func } from '../../util';",
                "",
                "const DECADE_TIME_FORMAT = 'HH:mm:ss';",
                "",
                "class TimePanel extends React.PureComponent {",
                "    static propTypes = {",
                "        rtl: PT.bool,",
                "        prefix: PT.string,",
                "        locale: PT.object,",
                "        value: SharedPT.date,",
                "        timePanelProps: PT.object,",
                "        defaultValue: SharedPT.value,",
                "        onSelect: PT.func,",
                "    };",
                "",
                "    formater = v => {",
                "        const { timePanelProps = {} } = this.props;",
                "        const { showHour, showMinute, showSecond } = this.getShow();",
                "",
                "        let fmt;",
                "        if ('format' in timePanelProps) {",
                "            fmt = timePanelProps.format;",
                "        } else {",
                "            const fmtArr = [];",
                "",
                "            showHour && fmtArr.push('HH');",
                "            showMinute && fmtArr.push('mm');",
                "            showSecond && fmtArr.push('ss');",
                "",
                "            fmt = fmtArr.join(':');",
                "        }",
                "",
                "        return typeof fmt === 'function' ? fmt(v) : v.format(fmt);",
                "    };",
                "",
                "    getShow = () => {",
                "        const { timePanelProps: props = {} } = this.props;",
                "",
                "        const fmt = props.format || DECADE_TIME_FORMAT;",
                "",
                "        let showHour;",
                "        let showMinute;",
                "        let showSecond;",
                "",
                "        if (typeof fmt === 'string') {",
                "            showHour = fmt.indexOf('H') > -1;",
                "            showSecond = fmt.indexOf('s') > -1;",
                "            showMinute = fmt.indexOf('m') > -1;",
                "        }",
                "",
                "        return {",
                "            showHour: 'showHour' in props ? props.showHour : showHour,",
                "            showMinute: 'showMinute' in props ? props.showMinute : showMinute,",
                "            showSecond: 'showSecond' in props ? props.showSecond : showSecond,",
                "        };",
                "    };",
                "",
                "    onSelect = v => {",
                "        func.invoke(this.props, 'onSelect', [v]);",
                "    };",
                "",
                "    render() {",
                "        const { prefix, rtl, locale, timePanelProps = {}, value } = this.props;",
                "        const { showHour, showMinute, showSecond } = this.getShow();",
                "",
                "        return (",
                "            <div dir={rtl ? 'rtl' : undefined} className={`${prefix}date-time-picker-wrapper ${prefix}calendar2-panel`}>",
                "                <div className={`${prefix}calendar2-header`}>",
                "                    <div className={`${prefix}calendar2-header-text-field`}>{value ? this.formater(value) : null}</div>",
                "                </div>",
                "                <TimePickerPanel",
                "                    prefix={prefix}",
                "                    locale={locale}",
                "                    onSelect={this.onSelect}",
                "                    showHour={showHour}",
                "                    showSecond={showSecond}",
                "                    showMinute={showMinute}",
                "                    {...timePanelProps}",
                "                    value={value}",
                "                />",
                "            </div>",
                "        );",
                "    }",
                "}",
                "",
                "export default polyfill(TimePanel);"
            ]
        },
        "4": {
            "function_name": "setTime (not found) ",
            "file_path": "src/date-picker2/util.js",
            "function_details": [
                {
                    "name": "setTime",
                    "start_line": 1,
                    "end_line": 21
                }
            ],
            "function_code": [
                "import { DATE_INPUT_TYPE } from './constant';",
                "",
                "export function setTime(targetVal, sourceVal) {",
                "    if (sourceVal && targetVal) {",
                "        return targetVal",
                "            .hour(sourceVal.hour())",
                "            .minute(sourceVal.minute())",
                "            .second(sourceVal.second())",
                "            .millisecond(sourceVal.millisecond());",
                "    }",
                "    return targetVal;",
                "}",
                "",
                "export function switchInputType(inputType) {",
                "    const { BEGIN, END } = DATE_INPUT_TYPE;",
                "    return inputType === BEGIN ? END : BEGIN;",
                "}",
                "",
                "export function mode2unit(mode) {",
                "    return mode === 'date' ? 'day' : mode;",
                "}"
            ]
        }
    }
}