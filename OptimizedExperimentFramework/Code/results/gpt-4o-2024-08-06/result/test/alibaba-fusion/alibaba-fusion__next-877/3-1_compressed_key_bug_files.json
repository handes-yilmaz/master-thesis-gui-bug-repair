{
    "1": {
        "bug_file": "src/overlay/main.scss",
        "compressed": "NO",
        "line_numbers": 27,
        "compressed_line_numbers": 27,
        "compressed_bug_file_content": "@import \"../core/index-noreset.scss\";\n\n.#{$css-prefix}overlay-wrapper {\n    position: absolute;\n    top: 0;\n    left: 0;\n\n    .#{$css-prefix}overlay-inner {\n        z-index: 1001;\n    }\n\n    .#{$css-prefix}overlay-backdrop {\n        position: fixed;\n        z-index: 1001;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background: $mask-background;\n        transition: opacity .3s;\n        opacity: 0;\n    }\n\n    &.opened .#{$css-prefix}overlay-backdrop {\n        opacity: $mask-opacity;\n    }\n}"
    },
    "2": {
        "bug_file": "src/overlay/overlay.jsx",
        "compressed": "YES",
        "line_numbers": 790,
        "compressed_line_numbers": 159,
        "compressed_bug_file_content": "import React, { Component, Children } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { dom, events, func, support, focus, KEYCODE, guid } from '../util';\nimport overlayManager from './manager';\nimport Gateway from './gateway';\nimport Position from './position';\nimport findNode from './utils/find-node';\n\n\n        // ignore error for firefox\n\n\n/**\n * Overlay\n * */\nexport default class Overlay extends Component {\n\n\n        /**\n         * 弹层内容\n         */\n\n        /**\n         * 是否显示弹层\n         */\n\n        /**\n         * 弹层请求关闭时触发事件的回调函数\n         * @param {String} type 弹层关闭的来源\n         * @param {Object} e DOM 事件\n         */\n\n        /**\n         * 弹层定位的参照元素\n         */\n\n        /**\n         * 弹层相对于参照元素的定位, 详见开发指南的[定位部分](#定位)\n         */\n\n        /**\n         * 弹层相对于trigger的定位的微调, 接收数组[hoz, ver], 表示弹层在 left / top 上的增量\n         * e.g. [100, 100] 表示往右(RTL 模式下是往左) 、下分布偏移100px\n         */\n\n        /**\n         * 渲染组件的容器，如果是函数需要返回 ref，如果是字符串则是该 DOM 的 id，也可以直接传入 DOM 节点\n         */\n\n        /**\n         * 是否显示遮罩\n         */\n\n        /**\n         * 是否支持 esc 按键关闭弹层\n         */\n\n        /**\n         * 点击弹层外的区域是否关闭弹层，不显示遮罩时生效\n         */\n\n        /**\n         * 点击遮罩区域是否关闭弹层，显示遮罩时生效\n         */\n\n        /**\n         * 弹层打开前触发事件的回调函数\n         */\n\n        /**\n         * 弹层打开时触发事件的回调函数\n         */\n\n        /**\n         * 弹层打开后触发事件的回调函数, 如果有动画，则在动画结束后触发\n         */\n\n        /**\n         * 弹层关闭前触发事件的回调函数\n         */\n\n        /**\n         * 弹层关闭时触发事件的回调函数\n         */\n\n        /**\n         * 弹层关闭后触发事件的回调函数, 如果有动画，则在动画结束后触发\n         */\n\n        /**\n         * 弹层定位完成前触发的事件\n         */\n\n        /**\n         * 弹层定位完成时触发的事件\n         * @param {Object} config 定位的参数\n         * @param {Array} config.align 对齐方式，如 ['cc', 'cc']（如果开启 needAdjust，可能和预先设置的 align 不同）\n         * @param {Number} config.top 距离视口顶部距离\n         * @param {Number} config.left 距离视口左侧距离\n         * @param {Object} node 定位参照的容器节点\n         */\n\n        /**\n         * 是否在每次弹层重新渲染后强制更新定位信息，一般用于弹层内容区域大小发生变化时，仍需保持原来的定位方式\n         */\n\n        /**\n         * 弹层打开时是否让其中的元素自动获取焦点\n         */\n\n        /**\n         * 当弹层由于页面滚动等情况不在可视区域时，是否自动调整定位以出现在可视区域\n         */\n\n        /**\n         * 是否禁用页面滚动\n         */\n\n        /**\n         * 隐藏时是否保留子节点\n         */\n\n        /**\n         * 安全节点，当点击 document 的时候，如果包含该节点则不会关闭弹层，如果是函数需要返回 ref，如果是字符串则是该 DOM 的 id，也可以直接传入 DOM 节点，或者以上值组成的数组\n         */\n\n        /**\n         * 弹层的根节点的样式类\n         */\n\n        /**\n         * 弹层的根节点的内联样式\n         */\n\n        /**\n         * 配置动画的播放方式，支持 { in: 'enter-class', out: 'leave-class' } 的对象参数，如果设置为 false，则不播放动画。 请参考 Animate 组件的文档获取可用的动画名\n         * @default { in: 'expandInDown', out: 'expandOutUp' }\n         */\n\n\n                // NOTE: setState callback (second argument) now fires immediately after componentDidMount / componentDidUpdate instead of after all components have rendered.\n\n\n            // 这个时候很可能上一个弹层的关闭事件还未触发，导致焦点已经回到触发的元素\n            // 这里延时处理一下，延时的时间为 document.click 捕获触发的延时时间\n\n\n                // HACK: 如果触发点击的节点是弹层内部的节点，并且在被点击后立即销毁，那么此时无法使用 node.contains(e.target)\n                // 来判断此时点击的节点是否是弹层内部的节点，额外判断\n\n\n    // 兼容过去的用法: this.popupRef.getInstance().overlay.getInstance().getContentNode()\n\n\n            // if chlild is a functional component wrap in a component to allow a ref to be set\n\n\n"
    },
    "3": {
        "bug_file": "src/overlay/style.js",
        "compressed": "NO",
        "line_numbers": 2,
        "compressed_line_numbers": 2,
        "compressed_bug_file_content": "import '../animate/style.js';\nimport './main.scss';"
    }
}