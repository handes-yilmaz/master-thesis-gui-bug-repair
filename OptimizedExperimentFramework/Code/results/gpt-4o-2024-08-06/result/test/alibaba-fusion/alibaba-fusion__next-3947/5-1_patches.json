{
    "1/1": "To address the issue described in the bug report, we need to add support for an `errorMessageLabel` API to work alongside `useLabelForErrorMessage`. This will allow the label to be used as an error message, even when additional DOM structures are added.\n\n### Bug Scenario Analysis\n\nThe image shows a React component structure where a `BizFormItem` is used within a `Form`. The `useLabelForErrorMessage` API is not functioning as expected due to additional DOM elements. The request is to add an `errorMessageLabel` API to handle this scenario.\n\n### Bug Root Cause\n\nThe current implementation does not support an `errorMessageLabel` API, which is needed to ensure that the label can be used as an error message when additional DOM elements are present.\n\n### Bug Fix\n\nWe need to modify the `Form` and `enhance` components to support the `errorMessageLabel` API.\n\n### Patches\n\n#### 1. Update `src/form/form.jsx`\n\nAdd `errorMessageLabel` to the `propTypes` and `getChildContext` methods.\n\n```javascript\n### src/form/form.jsx\n<<<<<<< SEARCH\n        /** \n         * 是否使用 label 替换校验信息的 name 字段\n         * @version 1.20\n         */\n        useLabelForErrorMessage: PropTypes.bool,\n=======\n        /** \n         * 是否使用 label 替换校验信息的 name 字段\n         * @version 1.20\n         */\n        useLabelForErrorMessage: PropTypes.bool,\n        /**\n         * 自定义错误信息标签\n         */\n        errorMessageLabel: PropTypes.string,\n>>>>>>> REPLACE\n```\n\n```javascript\n### src/form/form.jsx\n<<<<<<< SEARCH\n        } = this.props;\n=======\n            errorMessageLabel: this.props.errorMessageLabel,\n        } = this.props;\n>>>>>>> REPLACE\n```\n\n#### 2. Update `src/form/enhance.jsx`\n\nModify the `getRules` function to use `errorMessageLabel` if provided.\n\n```javascript\n### src/form/enhance.jsx\n<<<<<<< SEARCH\n    if (labelForErrorMessage) {\n        result.forEach(r => {\n            r.aliasName = labelForErrorMessage;\n        });\n    }\n=======\n    const aliasName = labelForErrorMessage || props.errorMessageLabel;\n    if (aliasName) {\n        result.forEach(r => {\n            r.aliasName = aliasName;\n        });\n    }\n>>>>>>> REPLACE\n```\n\nThese changes will add support for the `errorMessageLabel` API, allowing the label to be used as an error message even when additional DOM structures are present."
}