{
    "1": {
        "bug_file": "src/menu/view/group.jsx",
        "compressed": "NO",
        "line_numbers": 70,
        "compressed_line_numbers": 70,
        "compressed_bug_file_content": "import React, { Component, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Item from './item';\n\n/**\n * Menu.Group\n * @order 5\n */\nexport default class Group extends Component {\n    static menuChildType = 'group';\n\n    static propTypes = {\n        root: PropTypes.object,\n        className: PropTypes.string,\n        /**\n         * 标签内容\n         */\n        label: PropTypes.node,\n        /**\n         * 菜单项\n         */\n        children: PropTypes.node,\n        parentMode: PropTypes.oneOf(['inline', 'popup']),\n    };\n\n    render() {\n        const {\n            root,\n            className,\n            label,\n            children,\n            parentMode,\n            ...others\n        } = this.props;\n        const { prefix } = root.props;\n\n        const newClassName = cx({\n            [`${prefix}menu-group-label`]: true,\n            [className]: !!className,\n        });\n\n        const newChildren = children.map(child => {\n            const { className } = child.props;\n            const newChildClassName = cx({\n                [`${prefix}menu-group-item`]: true,\n                [className]: !!className,\n            });\n\n            return cloneElement(child, {\n                parentMode,\n                className: newChildClassName,\n            });\n        });\n\n        return [\n            <Item\n                key=\"menu-group-label\"\n                className={newClassName}\n                replaceClassName\n                root={root}\n                parentMode={parentMode}\n                {...others}\n            >\n                {label}\n            </Item>,\n            ...newChildren,\n        ];\n    }\n}"
    }
}