{
    "1/1": {
        "src/languages/scala.js": [
            {
                "SEARCH": [
                    "var NAME = {",
                    "className: 'title',",
                    "begin: /[^0-9\\n\\t \"'(),.`{}\\[\\]:;][^\\n\\t \"'(),.`{}\\[\\]:;]+|[^0-9\\n\\t \"'(),.`{}\\[\\]:;=]/,",
                    "relevance: 0",
                    "};",
                    "",
                    "var CLASS = {",
                    "className: 'class',",
                    "beginKeywords: 'class object trait type',",
                    "end: /[:={\\[\\n;]/,",
                    "excludeEnd: true,",
                    "contains: [",
                    "{",
                    "beginKeywords: 'extends with',",
                    "relevance: 10",
                    "},"
                ],
                "REPLACE": [
                    "var NAME = {",
                    "className: 'title',",
                    "begin: /[^0-9\\n\\t \"'(),.`{}\\[\\]:;][^\\n\\t \"'(),.`{}\\[\\]:;]+|[^0-9\\n\\t \"'(),.`{}\\[\\]:;=]/,",
                    "relevance: 0",
                    "};",
                    "",
                    "var CLASS = {",
                    "className: 'class',",
                    "beginKeywords: 'class object trait type',",
                    "end: /[:={\\[\\n;]/,",
                    "excludeEnd: true,",
                    "contains: [",
                    "{",
                    "beginKeywords: 'extends with',",
                    "relevance: 10",
                    "},",
                    "hljs.C_LINE_COMMENT_MODE,",
                    "hljs.C_BLOCK_COMMENT_MODE,"
                ]
            }
        ],
        "src/languages/javascript.js": [
            {
                "SEARCH": [
                    "var PARAMS_CONTAINS = SUBST.contains.concat([",
                    "// eat recursive parens in sub expressions",
                    "{ begin: /\\(/, end: /\\)/,",
                    "contains: [\"self\"].concat(SUBST.contains, [hljs.C_BLOCK_COMMENT_MODE, hljs.C_LINE_COMMENT_MODE])",
                    "},",
                    "hljs.C_BLOCK_COMMENT_MODE,",
                    "hljs.C_LINE_COMMENT_MODE",
                    "]);"
                ],
                "REPLACE": [
                    "var PARAMS_CONTAINS = SUBST.contains.concat([",
                    "// eat recursive parens in sub expressions",
                    "{ begin: /\\(/, end: /\\)/,",
                    "contains: [\"self\"].concat(SUBST.contains, [hljs.C_BLOCK_COMMENT_MODE, hljs.C_LINE_COMMENT_MODE])",
                    "},",
                    "hljs.C_BLOCK_COMMENT_MODE,",
                    "hljs.C_LINE_COMMENT_MODE,",
                    "hljs.C_LINE_COMMENT_MODE,",
                    "hljs.C_BLOCK_COMMENT_MODE",
                    "]);"
                ]
            }
        ]
    },
    "1.1/1": {
        "src/languages/scala.js": [
            {
                "SEARCH": [
                    "var NAME = {",
                    "className: 'title',",
                    "begin: /[^0-9\\n\\t \"'(),.`{}\\[\\]:;][^\\n\\t \"'(),.`{}\\[\\]:;]+|[^0-9\\n\\t \"'(),.`{}\\[\\]:;=]/,",
                    "relevance: 0",
                    "};",
                    "",
                    "var CLASS = {",
                    "className: 'class',",
                    "beginKeywords: 'class object trait type',",
                    "end: /[:={\\[\\n;]/,",
                    "excludeEnd: true,",
                    "contains: [",
                    "{",
                    "beginKeywords: 'extends with',",
                    "relevance: 10",
                    "},"
                ],
                "REPLACE": [
                    "var NAME = {",
                    "className: 'title',",
                    "begin: /[^0-9\\n\\t \"'(),.`{}\\[\\]:;][^\\n\\t \"'(),.`{}\\[\\]:;]+|[^0-9\\n\\t \"'(),.`{}\\[\\]:;=]/,",
                    "relevance: 0",
                    "};",
                    "",
                    "var CLASS = {",
                    "className: 'class',",
                    "beginKeywords: 'class object trait type',",
                    "end: /[:={\\[\\n;]/,",
                    "excludeEnd: true,",
                    "contains: [",
                    "{",
                    "beginKeywords: 'extends with',",
                    "relevance: 10",
                    "},",
                    "hljs.C_LINE_COMMENT_MODE,",
                    "hljs.C_BLOCK_COMMENT_MODE,"
                ]
            }
        ],
        "src/languages/javascript.js": [
            {
                "SEARCH": [
                    "var PARAMS_CONTAINS = SUBST.contains.concat([",
                    "// eat recursive parens in sub expressions",
                    "{ begin: /\\(/, end: /\\)/,",
                    "contains: [\"self\"].concat(SUBST.contains, [hljs.C_BLOCK_COMMENT_MODE, hljs.C_LINE_COMMENT_MODE])",
                    "},",
                    "hljs.C_BLOCK_COMMENT_MODE,",
                    "hljs.C_LINE_COMMENT_MODE",
                    "]);"
                ],
                "REPLACE": [
                    "var PARAMS_CONTAINS = SUBST.contains.concat([",
                    "// eat recursive parens in sub expressions",
                    "{ begin: /\\(/, end: /\\)/,",
                    "contains: [\"self\"].concat(SUBST.contains, [hljs.C_BLOCK_COMMENT_MODE, hljs.C_LINE_COMMENT_MODE])",
                    "},",
                    "hljs.C_BLOCK_COMMENT_MODE,",
                    "hljs.C_LINE_COMMENT_MODE,",
                    "hljs.C_LINE_COMMENT_MODE,",
                    "hljs.C_BLOCK_COMMENT_MODE",
                    "]);"
                ]
            }
        ]
    },
    "1.2/1": {
        "src/languages/scala.js": [
            {
                "SEARCH": [
                    "var NAME = {",
                    "className: 'title',",
                    "begin: /[^0-9\\n\\t \"'(),.`{}\\[\\]:;][^\\n\\t \"'(),.`{}\\[\\]:;]+|[^0-9\\n\\t \"'(),.`{}\\[\\]:;=]/,",
                    "relevance: 0",
                    "};",
                    "",
                    "var CLASS = {",
                    "className: 'class',",
                    "beginKeywords: 'class object trait type',",
                    "end: /[:={\\[\\n;]/,",
                    "excludeEnd: true,",
                    "contains: [",
                    "{",
                    "beginKeywords: 'extends with',",
                    "relevance: 10",
                    "},"
                ],
                "REPLACE": [
                    "var NAME = {",
                    "className: 'title',",
                    "begin: /[^0-9\\n\\t \"'(),.`{}\\[\\]:;][^\\n\\t \"'(),.`{}\\[\\]:;]+|[^0-9\\n\\t \"'(),.`{}\\[\\]:;=]/,",
                    "relevance: 0",
                    "};",
                    "",
                    "var CLASS = {",
                    "className: 'class',",
                    "beginKeywords: 'class object trait type',",
                    "end: /[:={\\[\\n;]/,",
                    "excludeEnd: true,",
                    "contains: [",
                    "{",
                    "beginKeywords: 'extends with',",
                    "relevance: 10",
                    "},",
                    "hljs.C_LINE_COMMENT_MODE,",
                    "hljs.C_BLOCK_COMMENT_MODE,"
                ]
            }
        ],
        "src/languages/javascript.js": [
            {
                "SEARCH": [
                    "var PARAMS_CONTAINS = SUBST.contains.concat([",
                    "// eat recursive parens in sub expressions",
                    "{ begin: /\\(/, end: /\\)/,",
                    "contains: [\"self\"].concat(SUBST.contains, [hljs.C_BLOCK_COMMENT_MODE, hljs.C_LINE_COMMENT_MODE])",
                    "},",
                    "hljs.C_BLOCK_COMMENT_MODE,",
                    "hljs.C_LINE_COMMENT_MODE",
                    "]);"
                ],
                "REPLACE": [
                    "var PARAMS_CONTAINS = SUBST.contains.concat([",
                    "// eat recursive parens in sub expressions",
                    "{ begin: /\\(/, end: /\\)/,",
                    "contains: [\"self\"].concat(SUBST.contains, [hljs.C_BLOCK_COMMENT_MODE, hljs.C_LINE_COMMENT_MODE])",
                    "},",
                    "hljs.C_BLOCK_COMMENT_MODE,",
                    "hljs.C_LINE_COMMENT_MODE,",
                    "hljs.C_LINE_COMMENT_MODE,",
                    "hljs.C_BLOCK_COMMENT_MODE",
                    "]);"
                ]
            }
        ]
    },
    "1.3/1": {
        "src/languages/scala.js": [
            {
                "SEARCH": [
                    "var NAME = {",
                    "className: 'title',",
                    "begin: /[^0-9\\n\t \"'(),.`{}\\[\\]:;][^\\n\t \"'(),.`{}\\[\\]:;]+|[^0-9\\n\t \"'(),.`{}\\[\\]:;=]/,",
                    "relevance: 0",
                    "};",
                    "",
                    "var CLASS = {",
                    "className: 'class',",
                    "beginKeywords: 'class object trait type',",
                    "end: /[:={\\[\\n;]/,",
                    "excludeEnd: true,",
                    "contains: [",
                    "{",
                    "beginKeywords: 'extends with',",
                    "relevance: 10",
                    "},"
                ],
                "REPLACE": [
                    "var NAME = {",
                    "className: 'title',",
                    "begin: /[^0-9\\n\t \"'(),.`{}\\[\\]:;][^\\n\t \"'(),.`{}\\[\\]:;]+|[^0-9\\n\t \"'(),.`{}\\[\\]:;=]/,",
                    "relevance: 0",
                    "};",
                    "",
                    "var CLASS = {",
                    "className: 'class',",
                    "beginKeywords: 'class object trait type',",
                    "end: /[:={\\[\\n;]/,",
                    "excludeEnd: true,",
                    "contains: [",
                    "{",
                    "beginKeywords: 'extends with',",
                    "relevance: 10",
                    "},",
                    "hljs.C_LINE_COMMENT_MODE,",
                    "hljs.C_BLOCK_COMMENT_MODE,"
                ]
            }
        ],
        "src/languages/javascript.js": [
            {
                "SEARCH": [
                    "var PARAMS_CONTAINS = SUBST.contains.concat([",
                    "// eat recursive parens in sub expressions",
                    "{ begin: /\\(/, end: /\\)/,",
                    "contains: [\"self\"].concat(SUBST.contains, [hljs.C_BLOCK_COMMENT_MODE, hljs.C_LINE_COMMENT_MODE])",
                    "},",
                    "hljs.C_BLOCK_COMMENT_MODE,",
                    "hljs.C_LINE_COMMENT_MODE",
                    "]);"
                ],
                "REPLACE": [
                    "var PARAMS_CONTAINS = SUBST.contains.concat([",
                    "// eat recursive parens in sub expressions",
                    "{ begin: /\\(/, end: /\\)/,",
                    "contains: [\"self\"].concat(SUBST.contains, [hljs.C_BLOCK_COMMENT_MODE, hljs.C_LINE_COMMENT_MODE])",
                    "},",
                    "hljs.C_BLOCK_COMMENT_MODE,",
                    "hljs.C_LINE_COMMENT_MODE,",
                    "hljs.C_LINE_COMMENT_MODE,",
                    "hljs.C_BLOCK_COMMENT_MODE",
                    "]);"
                ]
            }
        ]
    },
    "1.4/1": {
        "src/languages/scala.js": [
            {
                "SEARCH": [
                    "var NAME = {",
                    "className: 'title',",
                    "begin: /[^0-9\\n\t \"'(),.`{}\\[\\]:;][^\\n\t \"'(),.`{}\\[\\]:;]+|[^0-9\\n\t \"'(),.`{}\\[\\]:;=]/,",
                    "relevance: 0",
                    "};",
                    "",
                    "var CLASS = {",
                    "className: 'class',",
                    "beginKeywords: 'class object trait type',",
                    "end: /[:={\\[\\n;]/,",
                    "excludeEnd: true,",
                    "contains: [",
                    "{",
                    "beginKeywords: 'extends with',",
                    "relevance: 10",
                    "},"
                ],
                "REPLACE": [
                    "var NAME = {",
                    "className: 'title',",
                    "begin: /[^0-9\\n\t \"'(),.`{}\\[\\]:;][^\\n\t \"'(),.`{}\\[\\]:;]+|[^0-9\\n\t \"'(),.`{}\\[\\]:;=]/,",
                    "relevance: 0",
                    "};",
                    "",
                    "var CLASS = {",
                    "className: 'class',",
                    "beginKeywords: 'class object trait type',",
                    "end: /[:={\\[\\n;]/,",
                    "excludeEnd: true,",
                    "contains: [",
                    "{",
                    "beginKeywords: 'extends with',",
                    "relevance: 10",
                    "},",
                    "hljs.C_LINE_COMMENT_MODE,",
                    "hljs.C_BLOCK_COMMENT_MODE,"
                ]
            }
        ],
        "src/languages/javascript.js": [
            {
                "SEARCH": [
                    "var PARAMS_CONTAINS = SUBST.contains.concat([",
                    "// eat recursive parens in sub expressions",
                    "{ begin: /\\(/, end: /\\)/,",
                    "contains: [\"self\"].concat(SUBST.contains, [hljs.C_BLOCK_COMMENT_MODE, hljs.C_LINE_COMMENT_MODE])",
                    "},",
                    "hljs.C_BLOCK_COMMENT_MODE,",
                    "hljs.C_LINE_COMMENT_MODE",
                    "]);"
                ],
                "REPLACE": [
                    "var PARAMS_CONTAINS = SUBST.contains.concat([",
                    "// eat recursive parens in sub expressions",
                    "{ begin: /\\(/, end: /\\)/,",
                    "contains: [\"self\"].concat(SUBST.contains, [hljs.C_BLOCK_COMMENT_MODE, hljs.C_LINE_COMMENT_MODE])",
                    "},",
                    "hljs.C_BLOCK_COMMENT_MODE,",
                    "hljs.C_LINE_COMMENT_MODE,",
                    "hljs.C_LINE_COMMENT_MODE,",
                    "hljs.C_BLOCK_COMMENT_MODE",
                    "]);"
                ]
            }
        ]
    }
}