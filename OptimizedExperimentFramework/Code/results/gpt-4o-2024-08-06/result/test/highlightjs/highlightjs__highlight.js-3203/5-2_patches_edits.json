{
    "1/1": {
        "src/languages/powershell.js": [
            {
                "SEARCH": [
                    "const PS_ARGUMENTS = {",
                    "variants: [",
                    "// PS literals are pretty verbose so it's a good idea to accent them a bit.",
                    "{",
                    "className: 'operator',",
                    "begin: '('.concat(COMPARISON_OPERATORS, ')\\\\b')",
                    "},",
                    "{",
                    "className: 'literal',",
                    "begin: /(-)[\\w\\d]+/,",
                    "relevance: 0",
                    "}",
                    "]",
                    "};"
                ],
                "REPLACE": [
                    "const PS_ARGUMENTS = {",
                    "variants: [",
                    "// PS literals are pretty verbose so it's a good idea to accent them a bit.",
                    "{",
                    "className: 'operator',",
                    "begin: '('.concat(COMPARISON_OPERATORS, ')\\\\b')",
                    "},",
                    "{",
                    "className: 'literal',",
                    "begin: /(--?)[\\w\\d]+/,",
                    "relevance: 0",
                    "}",
                    "]",
                    "};"
                ]
            }
        ]
    },
    "1.1/1": {
        "src/languages/powershell.js": [
            {
                "SEARCH": [
                    "const PS_ARGUMENTS = {",
                    "variants: [",
                    "// PS literals are pretty verbose so it's a good idea to accent them a bit.\n      {\n        className: 'operator',\n        begin: '('.concat(COMPARISON_OPERATORS, ')\\\\b')\n      },\n      {\n        className: 'literal',\n        begin: /(-)[\\w\\d]+/,\n        relevance: 0\n      }\n    ]\n  };"
                ],
                "REPLACE": [
                    "const PS_ARGUMENTS = {",
                    "variants: [",
                    "// PS literals are pretty verbose so it's a good idea to accent them a bit.\n      {\n        className: 'operator',\n        begin: '('.concat(COMPARISON_OPERATORS, ')\\\\b')\n      },\n      {\n        className: 'literal',\n        begin: /(--?)[\\w\\d]+/,\n        relevance: 0\n      }\n    ]\n  };"
                ]
            }
        ]
    },
    "1.2/1": {
        "src/languages/powershell.js": [
            {
                "SEARCH": [
                    "const PS_ARGUMENTS = {",
                    "variants: [",
                    "// PS literals are pretty verbose so it's a good idea to accent them a bit.",
                    "{",
                    "className: 'operator',",
                    "begin: '('.concat(COMPARISON_OPERATORS, ')\\b')",
                    "},",
                    "{",
                    "className: 'literal',",
                    "begin: /(-)[\\w\\d]+/,",
                    "relevance: 0",
                    "}",
                    "]",
                    "};"
                ],
                "REPLACE": [
                    "const PS_ARGUMENTS = {",
                    "variants: [",
                    "// PS literals are pretty verbose so it's a good idea to accent them a bit.",
                    "{",
                    "className: 'operator',",
                    "begin: '('.concat(COMPARISON_OPERATORS, ')\\b')",
                    "},",
                    "{",
                    "className: 'literal',",
                    "begin: /(--?)[\\w\\d]+/,",
                    "relevance: 0",
                    "}",
                    "]",
                    "};"
                ]
            }
        ]
    },
    "1.3/1": {
        "src/languages/powershell.js": [
            {
                "SEARCH": [
                    "const PS_ARGUMENTS = {",
                    "variants: [",
                    "// PS literals are pretty verbose so it's a good idea to accent them a bit.",
                    "{",
                    "className: 'operator',",
                    "begin: '('.concat(COMPARISON_OPERATORS, ')\\\\b')",
                    "},",
                    "{",
                    "className: 'literal',",
                    "begin: /(-)[\\w\\d]+/,",
                    "relevance: 0",
                    "}",
                    "]",
                    "};"
                ],
                "REPLACE": [
                    "const PS_ARGUMENTS = {",
                    "variants: [",
                    "// PS literals are pretty verbose so it's a good idea to accent them a bit.",
                    "{",
                    "className: 'operator',",
                    "begin: '('.concat(COMPARISON_OPERATORS, ')\\\\b')",
                    "},",
                    "{",
                    "className: 'literal',",
                    "begin: /(--?)[\\w\\d]+/,",
                    "relevance: 0",
                    "}",
                    "]",
                    "};"
                ]
            }
        ]
    },
    "1.4/1": {
        "src/languages/powershell.js": [
            {
                "SEARCH": [
                    "const PS_ARGUMENTS = {",
                    "variants: [",
                    "// PS literals are pretty verbose so it's a good idea to accent them a bit.",
                    "{",
                    "className: 'operator',",
                    "begin: '('.concat(COMPARISON_OPERATORS, ')\\b')",
                    "},",
                    "{",
                    "className: 'literal',",
                    "begin: /(-)[\\w\\d]+/,",
                    "relevance: 0",
                    "}",
                    "]",
                    "};"
                ],
                "REPLACE": [
                    "const PS_ARGUMENTS = {",
                    "variants: [",
                    "// PS literals are pretty verbose so it's a good idea to accent them a bit.",
                    "{",
                    "className: 'operator',",
                    "begin: '('.concat(COMPARISON_OPERATORS, ')\\b')",
                    "},",
                    "{",
                    "className: 'literal',",
                    "begin: /(--?)[\\w\\d]+/,",
                    "relevance: 0",
                    "}",
                    "]",
                    "};"
                ]
            }
        ]
    }
}